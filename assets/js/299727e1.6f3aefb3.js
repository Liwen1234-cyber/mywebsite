"use strict";(self.webpackChunkmybase=self.webpackChunkmybase||[]).push([[24555],{66189:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"\u7801\u519c/\u5237\u9898\u8bb0\u5f55/\u8d2a\u5fc3\u7b97\u6cd5","title":"\u8d2a\u5fc3\u7b97\u6cd5","description":"\u9898\u76ee\u5206\u7c7b","source":"@site/docs/\u7801\u519c/\u5237\u9898\u8bb0\u5f55/\u8d2a\u5fc3\u7b97\u6cd5.md","sourceDirName":"\u7801\u519c/\u5237\u9898\u8bb0\u5f55","slug":"/\u7801\u519c/\u5237\u9898\u8bb0\u5f55/\u8d2a\u5fc3\u7b97\u6cd5","permalink":"/\u7801\u519c/\u5237\u9898\u8bb0\u5f55/\u8d2a\u5fc3\u7b97\u6cd5","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var s=e(74848),t=e(28453);const l={},a="\u8d2a\u5fc3\u7b97\u6cd5",c={},d=[{value:"\u9898\u76ee\u5206\u7c7b",id:"\u9898\u76ee\u5206\u7c7b",level:2},{value:"\u7406\u8bba\u57fa\u7840",id:"\u7406\u8bba\u57fa\u7840",level:2},{value:"\u8d2a\u5fc3\u7684\u5957\u8def",id:"\u8d2a\u5fc3\u7684\u5957\u8def",level:3},{value:"455.\u5206\u53d1\u997c\u5e72",id:"455\u5206\u53d1\u997c\u5e72",level:2},{value:"376. \u6446\u52a8\u5e8f\u5217",id:"376-\u6446\u52a8\u5e8f\u5217",level:2},{value:"53. \u6700\u5927\u5b50\u5e8f\u548c",id:"53-\u6700\u5927\u5b50\u5e8f\u548c",level:2},{value:"122.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II",id:"122\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a-ii",level:2},{value:"55. \u8df3\u8dc3\u6e38\u620f",id:"55-\u8df3\u8dc3\u6e38\u620f",level:2},{value:"45.\u8df3\u8dc3\u6e38\u620f II",id:"45\u8df3\u8dc3\u6e38\u620f-ii",level:2},{value:"1005.K \u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c",id:"1005k-\u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c",level:2},{value:"134. \u52a0\u6cb9\u7ad9",id:"134-\u52a0\u6cb9\u7ad9",level:2},{value:"135. \u5206\u53d1\u7cd6\u679c",id:"135-\u5206\u53d1\u7cd6\u679c",level:2},{value:"406.\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217",id:"406\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217",level:2},{value:"452. \u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403",id:"452-\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403",level:2},{value:"435. \u65e0\u91cd\u53e0\u533a\u95f4",id:"435-\u65e0\u91cd\u53e0\u533a\u95f4",level:2},{value:"763.\u5212\u5206\u5b57\u6bcd\u533a\u95f4",id:"763\u5212\u5206\u5b57\u6bcd\u533a\u95f4",level:2},{value:"56. \u5408\u5e76\u533a\u95f4",id:"56-\u5408\u5e76\u533a\u95f4",level:2},{value:"738.\u5355\u8c03\u9012\u589e\u7684\u6570\u5b57",id:"738\u5355\u8c03\u9012\u589e\u7684\u6570\u5b57",level:2},{value:"968.\u76d1\u63a7\u4e8c\u53c9\u6811",id:"968\u76d1\u63a7\u4e8c\u53c9\u6811",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2},{value:"\u5176\u4ed6",id:"\u5176\u4ed6",level:2},{value:"649. Dota2 \u53c2\u8bae\u9662",id:"649-dota2-\u53c2\u8bae\u9662",level:3}];function u(n){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",integer:"integer",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"\u8d2a\u5fc3\u7b97\u6cd5",children:"\u8d2a\u5fc3\u7b97\u6cd5"})}),"\n",(0,s.jsx)(r.h2,{id:"\u9898\u76ee\u5206\u7c7b",children:"\u9898\u76ee\u5206\u7c7b"}),"\n",(0,s.jsx)(r.mermaid,{value:"graph LR\r\n    A[\u8d2a\u5fc3\u7b97\u6cd5]\r\n\r\n    A --\x3e C((\u7b80\u5355\u9898\u76ee))\r\n    C --\x3e C1[455.\u5206\u53d1\u997c\u5e72]\r\n    C --\x3e C2[1005.K\u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c]\r\n    C --\x3e C3[860.\u67e0\u6aac\u6c34\u627e\u96f6]\r\n\r\n    A --\x3e D((\u4e2d\u7b49\u9898\u76ee))\r\n    D --\x3e D1[\u5e8f\u5217\u95ee\u9898]\r\n    D1 --\x3e D1_1[376.\u6446\u52a8\u5e8f\u5217]\r\n    D1 --\x3e D1_2[738.\u5355\u8c03\u9012\u589e\u7684\u6570\u5b57]\r\n\r\n    D --\x3e D2[\u8d2a\u5fc3\u89e3\u51b3\u80a1\u7968\u95ee\u9898]\r\n    D2 --\x3e D2_1[122.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II]\r\n    D2 --\x3e D2_2[714.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a\u542b\u624b\u7eed\u8d39]\r\n    D2 --\x3e D2_3[135.\u5206\u53d1\u7cd6\u679c]\r\n    D2 --\x3e D2_4[406.\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217]\r\n\r\n    F --\x3e E[\u533a\u95f4\u95ee\u9898]\r\n    E --\x3e E1[55.\u8df3\u8dc3\u6e38\u620f]\r\n    E --\x3e E2[45.\u8df3\u8dc3\u6e38\u620fII]\r\n    E --\x3e E3[452.\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403]\r\n    E --\x3e E4[435.\u65e0\u91cd\u53e0\u533a\u95f4]\r\n    E --\x3e E5[763.\u5212\u5206\u5b57\u6bcd\u533a\u95f4]\r\n    E --\x3e E6[56.\u5408\u5e76\u533a\u95f4]\r\n\r\n    A --\x3e F((\u96be\u5ea6\u9898\u76ee))\r\n    F --\x3e F1[53.\u6700\u5927\u5b50\u5e8f\u548c]\r\n    F --\x3e F2[134.\u52a0\u6cb9\u7ad9]\r\n    F --\x3e F3[968. \u76d1\u63a7\u4e8c\u53c9\u6811]"}),"\n",(0,s.jsx)(r.h2,{id:"\u7406\u8bba\u57fa\u7840",children:"\u7406\u8bba\u57fa\u7840"}),"\n",(0,s.jsx)(r.p,{children:"\u8d2a\u5fc3\u7684\u672c\u8d28\u662f\u9009\u62e9\u6bcf\u4e00\u9636\u6bb5\u7684\u5c40\u90e8\u6700\u4f18\uff0c\u4ece\u800c\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u3002"}),"\n",(0,s.jsx)(r.h3,{id:"\u8d2a\u5fc3\u7684\u5957\u8def",children:"\u8d2a\u5fc3\u7684\u5957\u8def"}),"\n",(0,s.jsx)(r.p,{children:"\u552f\u4e00\u7684\u96be\u70b9\u5c31\u662f\u5982\u4f55\u901a\u8fc7\u5c40\u90e8\u6700\u4f18\uff0c\u63a8\u51fa\u6574\u4f53\u6700\u4f18\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u6700\u597d\u7528\u7684\u7b56\u7565\u5c31\u662f\u4e3e\u53cd\u4f8b\uff0c\u5982\u679c\u60f3\u4e0d\u5230\u53cd\u4f8b\uff0c\u90a3\u4e48\u5c31\u8bd5\u4e00\u8bd5\u8d2a\u5fc3\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u6709\u65f6\u5019\u901a\u8fc7\uff08accept\uff09\u4e86\u8d2a\u5fc3\u7684\u9898\u76ee\uff0c\u4f46\u90fd\u4e0d\u77e5\u9053\u81ea\u5df1\u7528\u4e86\u8d2a\u5fc3\u7b97\u6cd5\uff0c**\u56e0\u4e3a\u8d2a\u5fc3\u6709\u65f6\u5019\u5c31\u662f\u5e38\u8bc6\u6027\u7684\u63a8\u5bfc\uff0c\u6240\u4ee5\u4f1a\u8ba4\u4e3a\u672c\u5e94\u8be5\u5c31\u8fd9\u4e48\u505a\uff01"}),"\n",(0,s.jsxs)(r.p,{children:["\u9898\u76ee\uff1a",(0,s.jsx)(r.a,{href:"https://programmercarl.com/0142.%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II.html",children:"\u94fe\u8868\uff1a\u73af\u627e\u5230\u4e86\uff0c\u90a3\u5165\u53e3\u5462\uff1f"}),"\uff0c\u8fd9\u79cd\u9898\u76ee\u786e\u5b9e\u9700\u8981\u6570\u5b66\u7b80\u5355\u63a8\u5bfc\u3002"]}),"\n",(0,s.jsxs)(r.p,{children:["\u8d2a\u5fc3\u4e00\u822c\u89e3\u9898\u6b65\u9aa4\uff1a\u60f3\u6e05\u695a",(0,s.jsx)(r.strong,{children:"\u5c40\u90e8\u6700\u4f18"}),"\u662f\u4ec0\u4e48\uff0c\u5982\u4f55\u63a8\u5bfc\u51fa\u5168\u5c40\u6700\u4f18\u3002"]}),"\n",(0,s.jsx)(r.h2,{id:"455\u5206\u53d1\u997c\u5e72",children:"455.\u5206\u53d1\u997c\u5e72"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/assign-cookies/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u5047\u8bbe\u4f60\u662f\u4e00\u4f4d\u5f88\u68d2\u7684\u5bb6\u957f\uff0c\u60f3\u8981\u7ed9\u4f60\u7684\u5b69\u5b50\u4eec\u4e00\u4e9b\u5c0f\u997c\u5e72\u3002\u4f46\u662f\uff0c\u6bcf\u4e2a\u5b69\u5b50\u6700\u591a\u53ea\u80fd\u7ed9\u4e00\u5757\u997c\u5e72\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u5bf9\u6bcf\u4e2a\u5b69\u5b50 i\uff0c\u90fd\u6709\u4e00\u4e2a\u80c3\u53e3\u503c g[i]\uff0c\u8fd9\u662f\u80fd\u8ba9\u5b69\u5b50\u4eec\u6ee1\u8db3\u80c3\u53e3\u7684\u997c\u5e72\u7684\u6700\u5c0f\u5c3a\u5bf8\uff1b\u5e76\u4e14\u6bcf\u5757\u997c\u5e72 j\uff0c\u90fd\u6709\u4e00\u4e2a\u5c3a\u5bf8 s[j] \u3002\u5982\u679c s[j] >= g[i]\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u8fd9\u4e2a\u997c\u5e72 j \u5206\u914d\u7ed9\u5b69\u5b50 i \uff0c\u8fd9\u4e2a\u5b69\u5b50\u4f1a\u5f97\u5230\u6ee1\u8db3\u3002\u4f60\u7684\u76ee\u6807\u662f\u5c3d\u53ef\u80fd\u6ee1\u8db3\u8d8a\u591a\u6570\u91cf\u7684\u5b69\u5b50\uff0c\u5e76\u8f93\u51fa\u8fd9\u4e2a\u6700\u5927\u6570\u503c\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int findContentChildren(int[] g, int[] s) {\r\n        int cnt = 0;\r\n        Arrays.sort(g);\r\n        Arrays.sort(s);\r\n        int j = 0;\r\n        for(int i = 0; i < s.length; i++){\r\n            if(j < g.length && s[i] >= g[j]){\r\n                cnt++;\r\n                j++;\r\n            }\r\n        }\r\n        return cnt;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"376-\u6446\u52a8\u5e8f\u5217",children:"376. \u6446\u52a8\u5e8f\u5217"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/wiggle-subsequence/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u5982\u679c\u8fde\u7eed\u6570\u5b57\u4e4b\u95f4\u7684\u5dee\u4e25\u683c\u5730\u5728\u6b63\u6570\u548c\u8d1f\u6570\u4e4b\u95f4\u4ea4\u66ff\uff0c\u5219\u6570\u5b57\u5e8f\u5217\u79f0\u4e3a\u6446\u52a8\u5e8f\u5217\u3002\u7b2c\u4e00\u4e2a\u5dee\uff08\u5982\u679c\u5b58\u5728\u7684\u8bdd\uff09\u53ef\u80fd\u662f\u6b63\u6570\u6216\u8d1f\u6570\u3002\u5c11\u4e8e\u4e24\u4e2a\u5143\u7d20\u7684\u5e8f\u5217\u4e5f\u662f\u6446\u52a8\u5e8f\u5217\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int wiggleMaxLength(int[] nums) {\r\n        if(nums == null || nums.length == 0) return 0;\r\n        if(nums.length == 1) return nums.length;\r\n        int cnt = 0;\r\n        int i = 1;\r\n        while(i < nums.length && nums[i] == nums[i -1]) i++;\r\n        if(i == nums.length) return 1;\r\n        boolean flag = (nums[i-1] > nums[i]);\r\n        for(; i < nums.length; i++){\r\n            if(nums[i-1] == nums[i]) continue;\r\n            if(flag == (nums[i-1] > nums[i])){\r\n                flag = !flag;\r\n                cnt++;\r\n            }\r\n        }\r\n        return ++cnt;\r\n    }\r\n}\r\n\r\n//DP\r\nclass Solution {\r\n    public int wiggleMaxLength(int[] nums) {\r\n        // 0 i \u4f5c\u4e3a\u6ce2\u5cf0\u7684\u6700\u5927\u957f\u5ea6\r\n        // 1 i \u4f5c\u4e3a\u6ce2\u8c37\u7684\u6700\u5927\u957f\u5ea6\r\n        int dp[][] = new int[nums.length][2];//\u8bb0\u5f55\u6446\u52a8\u5e8f\u5217\u7684\u6700\u5927\u957f\u5ea6\r\n        dp[0][0] = dp[0][1] = 1;\r\n        for(int i = 0; i < nums.length; i++){\r\n\r\n            dp[i][0] = dp[i][1] = 1;\r\n\r\n            for(int j = 0; j < i; j++){\r\n                if(nums[j] > nums[i]){\r\n                    dp[i][1] = Math.max(dp[i][1], dp[j][0] + 1);\r\n                }\r\n\r\n                if(nums[j] < nums[i]){\r\n                    dp[i][0] = Math.max(dp[i][0], dp[j][1] + 1);\r\n                }\r\n            }\r\n        }\r\n        return Math.max(dp[nums.length-1][0], dp[nums.length-1][1]);\r\n    }\r\n}\r\n\r\n//j\r\nclass Solution {\r\n    public int wiggleMaxLength(int[] nums) {\r\n        if(nums.length <= 1) return nums.length;  //\u5982\u679c\u6570\u7ec4\u957f\u5ea6\u4e3a0\u62161\uff0c\u5219\u8fd4\u56de\u6570\u7ec4\u957f\u5ea6\r\n\r\n        int up = 1, down = 1;  //\u8bb0\u5f55\u4e0a\u5347\u548c\u4e0b\u964d\u6446\u52a8\u5e8f\u5217\u7684\u6700\u5927\u957f\u5ea6\r\n        for(int i = 1; i < nums.length; i++){\r\n            if(nums[i] > nums[i-1]) up = down + 1;\r\n            else if(nums[i] < nums[i-1]) down = up + 1;\r\n        }\r\n        return Math.max(up, down); //\u8fd4\u56de\u4e0a\u5347\u548c\u4e0b\u964d\u6446\u52a8\u5e8f\u5217\u7684\u6700\u5927\u957f\u5ea6\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"53-\u6700\u5927\u5b50\u5e8f\u548c",children:"53. \u6700\u5927\u5b50\u5e8f\u548c"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/maximum-subarray/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 nums \uff0c\u627e\u5230\u4e00\u4e2a\u5177\u6709\u6700\u5927\u548c\u7684\u8fde\u7eed\u5b50\u6570\u7ec4\uff08\u5b50\u6570\u7ec4\u6700\u5c11\u5305\u542b\u4e00\u4e2a\u5143\u7d20\uff09\uff0c\u8fd4\u56de\u5176\u6700\u5927\u548c\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int maxSubArray(int[] nums) {\r\n        if(nums.length == 0) return 0;\r\n        int maxSum = nums[0];\r\n        int curSum = nums[0];\r\n        for(int i = 1; i < nums.length; i++){\r\n            curSum = Math.max(nums[i], curSum + nums[i]);\r\n            maxSum = Math.max(curSum, maxSum);\r\n        }\r\n        return maxSum;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"122\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a-ii",children:"122.\u4e70\u5356\u80a1\u7968\u7684\u6700\u4f73\u65f6\u673a II"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u6570\u7ec4\uff0c\u5b83\u7684\u7b2c i \u4e2a\u5143\u7d20\u662f\u4e00\u652f\u7ed9\u5b9a\u80a1\u7968\u7b2c i \u5929\u7684\u4ef7\u683c\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u8ba1\u7b97\u4f60\u6240\u80fd\u83b7\u53d6\u7684\u6700\u5927\u5229\u6da6\u3002\u4f60\u53ef\u4ee5\u5c3d\u53ef\u80fd\u5730\u5b8c\u6210\u66f4\u591a\u7684\u4ea4\u6613\uff08\u591a\u6b21\u4e70\u5356\u4e00\u652f\u80a1\u7968\uff09\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u6ce8\u610f\uff1a\u4f60\u4e0d\u80fd\u540c\u65f6\u53c2\u4e0e\u591a\u7b14\u4ea4\u6613\uff08\u4f60\u5fc5\u987b\u5728\u518d\u6b21\u8d2d\u4e70\u524d\u51fa\u552e\u6389\u4e4b\u524d\u7684\u80a1\u7968\uff09\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int maxProfit(int[] prices) {\r\n        int[] dp = new int[prices.length];//\u5b58\u653e\u7b2ci\u5929\u65f6\u7684\u6700\u5927\u6536\u76ca\r\n        dp[0] = 0;\r\n        for(int i = 1; i < prices.length; i++){\r\n            dp[i] = dp[i-1] + Math.max(0, prices[i]-prices[i-1]);\r\n        }\r\n        return dp[prices.length-1];\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"55-\u8df3\u8dc3\u6e38\u620f",children:"55. \u8df3\u8dc3\u6e38\u620f"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/jump-game/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u5224\u65ad\u4f60\u662f\u5426\u80fd\u591f\u5230\u8fbe\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"//DP\r\nclass Solution {\r\n    public boolean canJump(int[] nums) {\r\n        int len = nums.length;\r\n        boolean[] dp = new boolean[len];\r\n        dp[0] = true;\r\n        for(int i = 0; i < len-1; i++){\r\n            int j = 1;\r\n            while(dp[i] && j+i < len && j <= nums[i]){\r\n                dp[j+i] = true;\r\n                if(j++ +i == len-1) return true;\r\n            }\r\n        }\r\n        return dp[len-1];\r\n    }\r\n}\r\n\r\nclass Solution {\r\n    public boolean canJump(int[] nums) {\r\n        if(nums.length == 1) return true;\r\n        int coverage = 0;\r\n\r\n        for(int i = 0; i <= coverage; i++){//\u5224\u65ad\u7684\u6761\u4ef6\u5f88\u5173\u952e\r\n            coverage = Math.max(coverage, nums[i] + i);\r\n            if(coverage >= nums.length-1) return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"45\u8df3\u8dc3\u6e38\u620f-ii",children:"45.\u8df3\u8dc3\u6e38\u620f II"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/jump-game-ii/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570\u6570\u7ec4\uff0c\u4f60\u6700\u521d\u4f4d\u4e8e\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u4ee3\u8868\u4f60\u5728\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u8df3\u8dc3\u7684\u6700\u5927\u957f\u5ea6\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u4f60\u7684\u76ee\u6807\u662f\u4f7f\u7528\u6700\u5c11\u7684\u8df3\u8dc3\u6b21\u6570\u5230\u8fbe\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int jump(int[] nums) {\r\n        if(nums == null || nums.length == 0 || nums.length == 1) return 0;\r\n        int maxcoverage = nums[0], curcoverage = 0;\r\n        int cnt = 0;\r\n        for(int i = 0; i < nums.length; i++){\r\n            maxcoverage = Math.max(maxcoverage, nums[i] + i);\r\n            if(maxcoverage >= nums.length-1) return ++cnt;//\u8fbe\u5230\u6761\u4ef6\u5c31\u8df3\u51fa\r\n            if(curcoverage == i){//\u8d85\u8fc7\u8986\u76d6\u8303\u56f4\u5c31\u8df3\u8f6c\uff0c\u5176\u4ed6\u60c5\u51b5\u662f\u8fd8\u5728\u8303\u56f4\u5185\u53ef\u4ee5\u4e0d\u8df3\u8f6c\r\n                curcoverage = maxcoverage;\r\n                cnt++;\r\n            }\r\n        }\r\n\r\n        return 0;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"1005k-\u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c",children:"1005.K \u6b21\u53d6\u53cd\u540e\u6700\u5927\u5316\u7684\u6570\u7ec4\u548c"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/maximize-sum-of-array-after-k-negations/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u6574\u6570\u6570\u7ec4 A\uff0c\u6211\u4eec\u53ea\u80fd\u7528\u4ee5\u4e0b\u65b9\u6cd5\u4fee\u6539\u8be5\u6570\u7ec4\uff1a\u6211\u4eec\u9009\u62e9\u67d0\u4e2a\u7d22\u5f15 i \u5e76\u5c06 A[i] \u66ff\u6362\u4e3a -A[i]\uff0c\u7136\u540e\u603b\u5171\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b K \u6b21\u3002\uff08\u6211\u4eec\u53ef\u4ee5\u591a\u6b21\u9009\u62e9\u540c\u4e00\u4e2a\u7d22\u5f15 i\u3002\uff09"}),"\n",(0,s.jsx)(r.p,{children:"\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4fee\u6539\u6570\u7ec4\u540e\uff0c\u8fd4\u56de\u6570\u7ec4\u53ef\u80fd\u7684\u6700\u5927\u548c\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"//\u5e38\u89c4\u505a\u6cd5\r\nclass Solution {\r\n    public int largestSumAfterKNegations(int[] nums, int k) {\r\n        if(nums == null || nums.length == 0) return 0;\r\n        int negative_cnt = 0;//\u8d1f\u6570\r\n        int sum = 0;\r\n        Arrays.sort(nums);\r\n\r\n        for(int i = 0; i < nums.length; i++){\r\n            if(nums[i] < 0){\r\n                negative_cnt++;\r\n                if(negative_cnt <= k) nums[i] = -nums[i];\r\n            }\r\n\r\n            if(i == negative_cnt){//\u6b64\u65f6i\u4e3a\u7b2c\u4e00\u4e2a\u6b63\u6570\u7684\u7d22\u5f15\r\n                if(negative_cnt < k){\r\n                    if(i > 0){\r\n                        if(nums[i] > nums[i-1]){\r\n                            sum -= nums[i-1];\r\n                            sum += (((k-negative_cnt) & 1) == 0) ? nums[i-1] : -nums[i-1];\r\n                        } else {\r\n                            nums[i] = (((k-negative_cnt) & 1) == 0) ? nums[i] : -nums[i];\r\n                        }\r\n                    } else {//\u5168\u4e3a\u6b63\u6570\r\n                        nums[0] = (((k-negative_cnt) & 1) == 0) ? nums[0] : -nums[0];\r\n                    }\r\n\r\n                }\r\n            }\r\n            sum += nums[i];\r\n        }\r\n        if(negative_cnt == nums.length && k > negative_cnt) sum =  (((k-negative_cnt) & 1) == 0) ? sum : sum-2*nums[nums.length-1];//\u5168\u4e3a\u8d1f\u6570\r\n        return sum;\r\n    }\r\n}\r\n\r\n//\u8d2a\u5fc3\u7b97\u6cd5\r\nclass Solution {\r\n    public int largestSumAfterKNegations(int[] nums, int k) {\r\n        if(nums == null || nums.length == 0) return 0;\r\n        int sum = 0;\r\n        nums = IntStream.of(nums)\r\n                .boxed()\r\n                .sorted((a, b) -> Math.abs(b) - Math.abs(a))\r\n                .mapToInt(Integer::intValue)\r\n                .toArray();//\u6309\u7167\u7edd\u5bf9\u503c\u6392\u5e8f\r\n\r\n        for(int i = 0; i < nums.length; i++){\r\n            if(nums[i] < 0 && k > 0){\r\n                k--;\r\n                nums[i] = -nums[i];\r\n            }\r\n\r\n            if(i == nums.length-1){//\u6d88\u5316\u5269\u4f59\u7684k\r\n                nums[i] = ((k & 1) == 0) ? nums[i] : -nums[i];\r\n            }\r\n\r\n            sum += nums[i];\r\n\r\n        }\r\n\r\n        return sum;\r\n    }\r\n}\r\n\r\nclass Solution {\r\n    public int largestSumAfterKNegations(int[] nums, int k) {\r\n        if(nums == null || nums.length == 0) return 0;\r\n        int negative_cnt = 0;//\u8d1f\u6570\r\n        int sum = 0;\r\n        Arrays.sort(nums);\r\n\r\n        for(int i = 0; i < nums.length; i++){\r\n            if(nums[i] < 0 && k > 0){\r\n                k--;\r\n                nums[i] = -nums[i];\r\n            }\r\n        }\r\n        Arrays.sort(nums);\r\n        if(k > 0){//\u6d88\u5316\u5269\u4f59\u7684k\r\n            nums[0] = ((k & 1) == 0) ? nums[0] : -nums[0];\r\n        }\r\n        sum = Arrays.stream(nums).sum();//\r\n        return sum;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.p,{children:"Absolute value sorting:"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"IntStream.of(nums)"}),": Creates an IntStream from the input array ",(0,s.jsx)(r.code,{children:"nums"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:".boxed()"}),": Converts the IntStream of primitive ",(0,s.jsx)(r.code,{children:"int"})," values into a Stream",(0,s.jsx)(r.integer,{children:" of wrapped Integer objects. This is necessary because the next operation (sorting) needs to work with objects, not primitives."})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:".sorted((o1, o2) -> Math.abs(o2) - Math.abs(o1))"}),":\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Sorts the stream using a custom comparator"}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"Math.abs()"})," takes the absolute value of each number"]}),"\n",(0,s.jsxs)(r.li,{children:["The comparison ",(0,s.jsx)(r.code,{children:"o2 - o1"})," (rather than ",(0,s.jsx)(r.code,{children:"o1 - o2"}),") creates a descending order"]}),"\n",(0,s.jsx)(r.li,{children:"So numbers are sorted by their absolute values in descending order"}),"\n",(0,s.jsx)(r.li,{children:"For example: [-5, 2, -3, 1] would be sorted as [-5, -3, 2, 1]"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:".mapToInt(Integer::intValue)"}),": Converts the Stream",(0,s.jsx)(r.integer,{children:" back to an IntStream by extracting the primitive int value from each Integer object"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:".toArray()"}),": Finally converts the IntStream into a regular int array"]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"134-\u52a0\u6cb9\u7ad9",children:"134. \u52a0\u6cb9\u7ad9"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/gas-station/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u5728\u4e00\u6761\u73af\u8def\u4e0a\u6709 N \u4e2a\u52a0\u6cb9\u7ad9\uff0c\u5176\u4e2d\u7b2c i \u4e2a\u52a0\u6cb9\u7ad9\u6709\u6c7d\u6cb9 gas[i] \u5347\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u4f60\u6709\u4e00\u8f86\u6cb9\u7bb1\u5bb9\u91cf\u65e0\u9650\u7684\u7684\u6c7d\u8f66\uff0c\u4ece\u7b2c i \u4e2a\u52a0\u6cb9\u7ad9\u5f00\u5f80\u7b2c i+1 \u4e2a\u52a0\u6cb9\u7ad9\u9700\u8981\u6d88\u8017\u6c7d\u6cb9 cost[i] \u5347\u3002\u4f60\u4ece\u5176\u4e2d\u7684\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u51fa\u53d1\uff0c\u5f00\u59cb\u65f6\u6cb9\u7bb1\u4e3a\u7a7a\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u5982\u679c\u4f60\u53ef\u4ee5\u7ed5\u73af\u8def\u884c\u9a76\u4e00\u5468\uff0c\u5219\u8fd4\u56de\u51fa\u53d1\u65f6\u52a0\u6cb9\u7ad9\u7684\u7f16\u53f7\uff0c\u5426\u5219\u8fd4\u56de -1\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u8bf4\u660e:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"\u5982\u679c\u9898\u76ee\u6709\u89e3\uff0c\u8be5\u7b54\u6848\u5373\u4e3a\u552f\u4e00\u7b54\u6848\u3002"}),"\n",(0,s.jsx)(r.li,{children:"\u8f93\u5165\u6570\u7ec4\u5747\u4e3a\u975e\u7a7a\u6570\u7ec4\uff0c\u4e14\u957f\u5ea6\u76f8\u540c\u3002"}),"\n",(0,s.jsx)(r.li,{children:"\u8f93\u5165\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u5747\u4e3a\u975e\u8d1f\u6570\u3002"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int canCompleteCircuit(int[] gas, int[] cost) {\r\n        int past = 0, cur = 0;\r\n        int res = 0;\r\n        for(int i = 0; i < gas.length; i++){\r\n            cur += gas[i] - cost[i];\r\n            if(cur < 0){\r\n                past += cur;//\u8bb0\u5f55\u8d1f\u7684\r\n                cur = 0;\r\n                res = i+1;//\u4ece\u6b63\u7684\u5f00\u59cb\r\n            }\r\n        }\r\n        if(past + cur < 0) return -1;\r\n        else return res;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"135-\u5206\u53d1\u7cd6\u679c",children:"135. \u5206\u53d1\u7cd6\u679c"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/candy/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u8001\u5e08\u60f3\u7ed9\u5b69\u5b50\u4eec\u5206\u53d1\u7cd6\u679c\uff0c\u6709 N \u4e2a\u5b69\u5b50\u7ad9\u6210\u4e86\u4e00\u6761\u76f4\u7ebf\uff0c\u8001\u5e08\u4f1a\u6839\u636e\u6bcf\u4e2a\u5b69\u5b50\u7684\u8868\u73b0\uff0c\u9884\u5148\u7ed9\u4ed6\u4eec\u8bc4\u5206\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u4f60\u9700\u8981\u6309\u7167\u4ee5\u4e0b\u8981\u6c42\uff0c\u5e2e\u52a9\u8001\u5e08\u7ed9\u8fd9\u4e9b\u5b69\u5b50\u5206\u53d1\u7cd6\u679c\uff1a"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"\u6bcf\u4e2a\u5b69\u5b50\u81f3\u5c11\u5206\u914d\u5230 1 \u4e2a\u7cd6\u679c\u3002"}),"\n",(0,s.jsx)(r.li,{children:"\u76f8\u90bb\u7684\u5b69\u5b50\u4e2d\uff0c\u8bc4\u5206\u9ad8\u7684\u5b69\u5b50\u5fc5\u987b\u83b7\u5f97\u66f4\u591a\u7684\u7cd6\u679c\u3002"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"\u90a3\u4e48\u8fd9\u6837\u4e0b\u6765\uff0c\u8001\u5e08\u81f3\u5c11\u9700\u8981\u51c6\u5907\u591a\u5c11\u9897\u7cd6\u679c\u5462\uff1f"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int candy(int[] ratings) {\r\n        int len = ratings.length;\r\n        if(len < 1) return len;\r\n        int result = 0;\r\n        int[] dp = new int[len];\r\n        dp[0] = 1;\r\n        for(int i = 1; i < len; i++){//Left\r\n            dp[i] = (ratings[i] > ratings[i-1]) ? dp[i-1]+1 : 1;\r\n        }\r\n\r\n        for(int i = len-2; i >= 0; i--){/\r\n            dp[i] = (ratings[i] > ratings[i+1]) ? Math.max(dp[i+1]+1, dp[i]) : dp[i];\r\n        }\r\n        result = Arrays.stream(dp).sum();\r\n\r\n        return result;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"406\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217",children:"406.\u6839\u636e\u8eab\u9ad8\u91cd\u5efa\u961f\u5217"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/queue-reconstruction-by-height/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u5047\u8bbe\u6709\u6253\u4e71\u987a\u5e8f\u7684\u4e00\u7fa4\u4eba\u7ad9\u6210\u4e00\u4e2a\u961f\u5217\uff0c\u6570\u7ec4 people \u8868\u793a\u961f\u5217\u4e2d\u4e00\u4e9b\u4eba\u7684\u5c5e\u6027\uff08\u4e0d\u4e00\u5b9a\u6309\u987a\u5e8f\uff09\u3002\u6bcf\u4e2a people[i] = [hi, ki] \u8868\u793a\u7b2c i \u4e2a\u4eba\u7684\u8eab\u9ad8\u4e3a hi \uff0c\u524d\u9762 \u6b63\u597d \u6709 ki \u4e2a\u8eab\u9ad8\u5927\u4e8e\u6216\u7b49\u4e8e hi \u7684\u4eba\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u8bf7\u4f60\u91cd\u65b0\u6784\u9020\u5e76\u8fd4\u56de\u8f93\u5165\u6570\u7ec4 people \u6240\u8868\u793a\u7684\u961f\u5217\u3002\u8fd4\u56de\u7684\u961f\u5217\u5e94\u8be5\u683c\u5f0f\u5316\u4e3a\u6570\u7ec4 queue \uff0c\u5176\u4e2d queue[j] = [hj, kj] \u662f\u961f\u5217\u4e2d\u7b2c j \u4e2a\u4eba\u7684\u5c5e\u6027\uff08queue[0] \u662f\u6392\u5728\u961f\u5217\u524d\u9762\u7684\u4eba\uff09\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int[][] reconstructQueue(int[][] people) {\r\n        LinkedList<int[]> que = new LinkedList<>();\r\n        Arrays.sort(people, (a, b) -> {//lambda\u8868\u8fbe\u5f0f\uff0c\u5185\u90e8\u7c7b\r\n            if(a[0] == b[0]) return a[1] - b[1];\r\n            return b[0] - a[0];\r\n        });\r\n\r\n        for(int[] arr : people){\r\n            que.add(arr[1], arr);//Linkedlist.add(index, value)\uff0c\u4f1a\u5c06value\u63d2\u5165\u5230\u6307\u5b9aindex\u91cc\u3002\r\n        }\r\n    return que.toArray(new int[people.length][2]);\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"452-\u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403",children:"452. \u7528\u6700\u5c11\u6570\u91cf\u7684\u7bad\u5f15\u7206\u6c14\u7403"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/minimum-number-of-arrows-to-burst-balloons/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u5728\u4e8c\u7ef4\u7a7a\u95f4\u4e2d\u6709\u8bb8\u591a\u7403\u5f62\u7684\u6c14\u7403\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u6c14\u7403\uff0c\u63d0\u4f9b\u7684\u8f93\u5165\u662f\u6c34\u5e73\u65b9\u5411\u4e0a\uff0c\u6c14\u7403\u76f4\u5f84\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u5750\u6807\u3002\u7531\u4e8e\u5b83\u662f\u6c34\u5e73\u7684\uff0c\u6240\u4ee5\u7eb5\u5750\u6807\u5e76\u4e0d\u91cd\u8981\uff0c\u56e0\u6b64\u53ea\u8981\u77e5\u9053\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u6a2a\u5750\u6807\u5c31\u8db3\u591f\u4e86\u3002\u5f00\u59cb\u5750\u6807\u603b\u662f\u5c0f\u4e8e\u7ed3\u675f\u5750\u6807\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u4e00\u652f\u5f13\u7bad\u53ef\u4ee5\u6cbf\u7740 x \u8f74\u4ece\u4e0d\u540c\u70b9\u5b8c\u5168\u5782\u76f4\u5730\u5c04\u51fa\u3002\u5728\u5750\u6807 x \u5904\u5c04\u51fa\u4e00\u652f\u7bad\uff0c\u82e5\u6709\u4e00\u4e2a\u6c14\u7403\u7684\u76f4\u5f84\u7684\u5f00\u59cb\u548c\u7ed3\u675f\u5750\u6807\u4e3a xstart\uff0cxend\uff0c \u4e14\u6ee1\u8db3 xstart \u2264 x \u2264 xend\uff0c\u5219\u8be5\u6c14\u7403\u4f1a\u88ab\u5f15\u7206\u3002\u53ef\u4ee5\u5c04\u51fa\u7684\u5f13\u7bad\u7684\u6570\u91cf\u6ca1\u6709\u9650\u5236\u3002 \u5f13\u7bad\u4e00\u65e6\u88ab\u5c04\u51fa\u4e4b\u540e\uff0c\u53ef\u4ee5\u65e0\u9650\u5730\u524d\u8fdb\u3002\u6211\u4eec\u60f3\u627e\u5230\u4f7f\u5f97\u6240\u6709\u6c14\u7403\u5168\u90e8\u88ab\u5f15\u7206\uff0c\u6240\u9700\u7684\u5f13\u7bad\u7684\u6700\u5c0f\u6570\u91cf\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u4f60\u4e00\u4e2a\u6570\u7ec4 points \uff0c\u5176\u4e2d points [i] = [xstart,xend] \uff0c\u8fd4\u56de\u5f15\u7206\u6240\u6709\u6c14\u7403\u6240\u5fc5\u987b\u5c04\u51fa\u7684\u6700\u5c0f\u5f13\u7bad\u6570\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int findMinArrowShots(int[][] points) {\r\n        Arrays.sort(points, (a, b) -> {\r\n            if(a[0] == b[0]) return Integer.compare(a[1], b[1]);\r\n            return Integer.compare(a[0], b[0]);\r\n        });\r\n        int res = points.length;\r\n        int temp = points[0][1];\r\n        for(int i = 1; i < points.length; i++){\r\n            if(points[i][0] <=  temp){\r\n                res--;\r\n                temp = Math.min(temp, points[i][1]);\r\n            }\r\n            else temp = points[i][1];\r\n        }\r\n        return res;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"435-\u65e0\u91cd\u53e0\u533a\u95f4",children:"435. \u65e0\u91cd\u53e0\u533a\u95f4"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/non-overlapping-intervals/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u533a\u95f4\u7684\u96c6\u5408\uff0c\u627e\u5230\u9700\u8981\u79fb\u9664\u533a\u95f4\u7684\u6700\u5c0f\u6570\u91cf\uff0c\u4f7f\u5269\u4f59\u533a\u95f4\u4e92\u4e0d\u91cd\u53e0\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u6ce8\u610f: \u53ef\u4ee5\u8ba4\u4e3a\u533a\u95f4\u7684\u7ec8\u70b9\u603b\u662f\u5927\u4e8e\u5b83\u7684\u8d77\u70b9\u3002 \u533a\u95f4 [1,2] \u548c [2,3] \u7684\u8fb9\u754c\u76f8\u4e92\u201c\u63a5\u89e6\u201d\uff0c\u4f46\u6ca1\u6709\u76f8\u4e92\u91cd\u53e0\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int eraseOverlapIntervals(int[][] intervals) {\r\n        Arrays.sort(intervals, (a, b) -> {\r\n            if(a[0] == b[0]) return Integer.compare(a[1], b[1]);\r\n            return Integer.compare(a[0], b[0]);\r\n        });\r\n        int res = 0;\r\n        int temp = intervals[0][1];\r\n        for(int i = 1; i < intervals.length; i++){\r\n            if(intervals[i][0] <  temp){\r\n                res++;\r\n                if(intervals[i][1] <  temp) temp = intervals[i][1];\r\n            }\r\n            else temp = intervals[i][1];\r\n        }\r\n        return res;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"763\u5212\u5206\u5b57\u6bcd\u533a\u95f4",children:"763.\u5212\u5206\u5b57\u6bcd\u533a\u95f4"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/partition-labels/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u5b57\u7b26\u4e32 S \u7531\u5c0f\u5199\u5b57\u6bcd\u7ec4\u6210\u3002\u6211\u4eec\u8981\u628a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u5212\u5206\u4e3a\u5c3d\u53ef\u80fd\u591a\u7684\u7247\u6bb5\uff0c\u540c\u4e00\u5b57\u6bcd\u6700\u591a\u51fa\u73b0\u5728\u4e00\u4e2a\u7247\u6bb5\u4e2d\u3002\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u6bcf\u4e2a\u5b57\u7b26\u4e32\u7247\u6bb5\u7684\u957f\u5ea6\u7684\u5217\u8868\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public List<Integer> partitionLabels(String s) {\r\n        int[] arr = new int[128];\r\n        char[] ss = s.toCharArray();\r\n        List<Integer> list = new ArrayList<>();\r\n        for(int i = 0; i < ss.length; i++){\r\n            arr[ss[i] - 'a'] = i;//\u5b57\u6bcd\u51fa\u73b0\u7684\u6700\u540ew\r\n        }\r\n        int maxindex = 0;\r\n        int last = -1;\r\n        for(int i = 0; i < ss.length; i++){\r\n            maxindex = Math.max(arr[ss[i]-'a'], maxindex);\r\n            if(maxindex == ss.length-1){\r\n                list.add(ss.length-1 - last);\r\n                break;\r\n            }\r\n            if(i == maxindex){\r\n                list.add(maxindex - last);\r\n                last = i;\r\n            }\r\n        }\r\n\r\n        return list;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"56-\u5408\u5e76\u533a\u95f4",children:"56. \u5408\u5e76\u533a\u95f4"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/merge-intervals/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u51fa\u4e00\u4e2a\u533a\u95f4\u7684\u96c6\u5408\uff0c\u8bf7\u5408\u5e76\u6240\u6709\u91cd\u53e0\u7684\u533a\u95f4\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    public int[][] merge(int[][] intervals) {\r\n        if(intervals.length == 0 || intervals.length == 1) return intervals;\r\n        Arrays.sort(intervals, (a, b) -> {\r\n            if(a[0] == b[0]) return Integer.compare(a[1], b[1]);\r\n            return Integer.compare(a[0], b[0]);\r\n        });\r\n\r\n        LinkedList<int[]> res = new LinkedList<>();\r\n        int temp = intervals[0][1];\r\n        int pre = intervals[0][0];\r\n        for(int i = 1; i < intervals.length; i++){\r\n            if(intervals[i][0] >  temp){\r\n                res.add(new int[]{pre, temp});\r\n                pre = intervals[i][0];\r\n                temp = intervals[i][1];\r\n            }\r\n            else temp = Math.max(intervals[i][1], temp);\r\n\r\n            if(i == intervals.length - 1){\r\n                res.add(new int[]{pre, temp});\r\n            }\r\n        }\r\n        return res.toArray(new int[res.size()][2]);\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"738\u5355\u8c03\u9012\u589e\u7684\u6570\u5b57",children:"738.\u5355\u8c03\u9012\u589e\u7684\u6570\u5b57"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/monotone-increasing-digits/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u975e\u8d1f\u6574\u6570 N\uff0c\u627e\u51fa\u5c0f\u4e8e\u6216\u7b49\u4e8e N \u7684\u6700\u5927\u7684\u6574\u6570\uff0c\u540c\u65f6\u8fd9\u4e2a\u6574\u6570\u9700\u8981\u6ee1\u8db3\u5176\u5404\u4e2a\u4f4d\u6570\u4e0a\u7684\u6570\u5b57\u662f\u5355\u8c03\u9012\u589e\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\uff08\u5f53\u4e14\u4ec5\u5f53\u6bcf\u4e2a\u76f8\u90bb\u4f4d\u6570\u4e0a\u7684\u6570\u5b57 x \u548c y \u6ee1\u8db3 x <= y \u65f6\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u6574\u6570\u662f\u5355\u8c03\u9012\u589e\u7684\u3002\uff09"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"// int[]\r\nclass Solution {\r\n    public int monotoneIncreasingDigits(int n) {\r\n        if(n < 10) return n;\r\n        List<Integer> num = new ArrayList<>();\r\n        while(n > 0){\r\n            num.addFirst(n%10);\r\n            n /= 10;\r\n        }\r\n        int[] res = new int[num.size()];\r\n        res[0] = num.get(0);\r\n        int start = 0;\r\n        Boolean flag = false;\r\n        for(int i = 1; i < num.size(); i++){\r\n            if(res[i-1] > num.get(i)){\r\n                flag = true;\r\n                break;\r\n            }else{\r\n                res[i] = num.get(i);\r\n            }\r\n            start = res[i-1] == num.get(i) ? start : i;\r\n        }\r\n        int sum = 0;\r\n        for(int i = 0; i < res.length; i++){\r\n            if(flag){\r\n                if(i <= start) sum = 10*sum + res[i];\r\n                else sum *= 10;\r\n                if(i == res.length-1) sum--;\r\n            } else {\r\n                sum = 10*sum + res[i];\r\n            }\r\n        }\r\n        return sum;\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"// char[]\r\nclass Solution {\r\n    public int monotoneIncreasingDigits(int n) {\r\n        if(n < 10) return n;\r\n        String s = String.valueOf(n);\r\n        char[] ss = s.toCharArray();\r\n        int start = ss.length;\r\n        for(int i = ss.length-2; i >= 0; i--){\r\n            if(ss[i] > ss[i+1]){\r\n                start = i+1;\r\n                ss[i]--;\r\n            }\r\n        }\r\n\r\n        for(int i = start; i < ss.length; i++){\r\n            ss[i] = '9';\r\n        }\r\n        return Integer.valueOf(String.valueOf(ss));\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"968\u76d1\u63a7\u4e8c\u53c9\u6811",children:"968.\u76d1\u63a7\u4e8c\u53c9\u6811"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/binary-tree-cameras/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u4e8c\u53c9\u6811\uff0c\u6211\u4eec\u5728\u6811\u7684\u8282\u70b9\u4e0a\u5b89\u88c5\u6444\u50cf\u5934\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u8282\u70b9\u4e0a\u7684\u6bcf\u4e2a\u6444\u5f71\u5934\u90fd\u53ef\u4ee5\u76d1\u89c6\u5176\u7236\u5bf9\u8c61\u3001\u81ea\u8eab\u53ca\u5176\u76f4\u63a5\u5b50\u5bf9\u8c61\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u8ba1\u7b97\u76d1\u63a7\u6811\u7684\u6240\u6709\u8282\u70b9\u6240\u9700\u7684\u6700\u5c0f\u6444\u50cf\u5934\u6570\u91cf\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"/**\r\n * Definition for a binary tree node.\r\n * public class TreeNode {\r\n *     int val;\r\n *     TreeNode left;\r\n *     TreeNode right;\r\n *     TreeNode() {}\r\n *     TreeNode(int val) { this.val = val; }\r\n *     TreeNode(int val, TreeNode left, TreeNode right) {\r\n *         this.val = val;\r\n *         this.left = left;\r\n *         this.right = right;\r\n *     }\r\n * }\r\n */\r\nclass Solution {\r\n    int res = 0;\r\n    public int minCameraCover(TreeNode root) {\r\n        // \u5bf9\u6839\u8282\u70b9\u7684\u72b6\u6001\u505a\u68c0\u9a8c,\u9632\u6b62\u6839\u8282\u70b9\u662f\u65e0\u8986\u76d6\u72b6\u6001.\r\n        if(CameraCover(root) == 0){\r\n            res++;\r\n        }\r\n\r\n        return res;\r\n    }\r\n\r\n    /**\r\n     \u8282\u70b9\u7684\u72b6\u6001\u503c\uff1a\r\n       0 \u8868\u793a\u65e0\u8986\u76d6\r\n       1 \u8868\u793a \u6709\u6444\u50cf\u5934\r\n       2 \u8868\u793a\u6709\u8986\u76d6\r\n    \u540e\u5e8f\u904d\u5386\uff0c\u6839\u636e\u5de6\u53f3\u8282\u70b9\u7684\u60c5\u51b5,\u6765\u5224\u8bfb \u81ea\u5df1\u7684\u72b6\u6001\r\n     */\r\n    public int CameraCover(TreeNode node) {//\u540e\u5e8f\u904d\u5386\r\n        if(node == null) return 2;\r\n        int left = CameraCover(node.left);\r\n        int right = CameraCover(node.right);\r\n\r\n        if(left == 2 && right == 2){// \u5982\u679c\u5de6\u53f3\u8282\u70b9\u90fd\u8986\u76d6\u4e86\u7684\u8bdd, \u90a3\u4e48\u672c\u8282\u70b9\u7684\u72b6\u6001\u5c31\u5e94\u8be5\u662f\u65e0\u8986\u76d6,\u6ca1\u6709\u6444\u50cf\u5934\r\n            return 0;\r\n        } else if(left == 0 || right == 0){// \u5de6\u53f3\u8282\u70b9\u90fd\u662f\u65e0\u8986\u76d6\u72b6\u6001,\u90a3 \u6839\u8282\u70b9\u6b64\u65f6\u5e94\u8be5\u653e\u4e00\u4e2a\u6444\u50cf\u5934\r\n            res++;\r\n            return 1;\r\n        } else{// \u5de6\u53f3\u8282\u70b9\u7684 \u72b6\u6001\u4e3a (1,1) (1,2) (2,1) \u4e5f\u5c31\u662f\u5de6\u53f3\u8282\u70b9\u81f3\u5c11\u5b58\u5728 1\u4e2a\u6444\u50cf\u5934\uff0c\r\n            return 2;\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"\u603b\u7ed3",children:"\u603b\u7ed3"}),"\n",(0,s.jsx)(r.p,{children:"\u8d2a\u5fc3\u4e13\u9898\u6c47\u805a\u4e3a\u4e00\u5f20\u56fe\uff1a"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.img,{alt:"img",src:e(10754).A+"",width:"5000",height:"6845"})}),"\n",(0,s.jsx)(r.h2,{id:"\u5176\u4ed6",children:"\u5176\u4ed6"}),"\n",(0,s.jsx)(r.h3,{id:"649-dota2-\u53c2\u8bae\u9662",children:"649. Dota2 \u53c2\u8bae\u9662"}),"\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"https://leetcode.cn/problems/dota2-senate/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,s.jsx)(r.p,{children:"Dota2 \u7684\u4e16\u754c\u91cc\u6709\u4e24\u4e2a\u9635\u8425\uff1aRadiant(\u5929\u8f89)\u548c Dire(\u591c\u9b47)"}),"\n",(0,s.jsx)(r.p,{children:"Dota2 \u53c2\u8bae\u9662\u7531\u6765\u81ea\u4e24\u6d3e\u7684\u53c2\u8bae\u5458\u7ec4\u6210\u3002\u73b0\u5728\u53c2\u8bae\u9662\u5e0c\u671b\u5bf9\u4e00\u4e2a Dota2 \u6e38\u620f\u91cc\u7684\u6539\u53d8\u4f5c\u51fa\u51b3\u5b9a\u3002\u4ed6\u4eec\u4ee5\u4e00\u4e2a\u57fa\u4e8e\u8f6e\u4e3a\u8fc7\u7a0b\u7684\u6295\u7968\u8fdb\u884c\u3002\u5728\u6bcf\u4e00\u8f6e\u4e2d\uff0c\u6bcf\u4e00\u4f4d\u53c2\u8bae\u5458\u90fd\u53ef\u4ee5\u884c\u4f7f\u4e24\u9879\u6743\u5229\u4e2d\u7684\u4e00\u9879\uff1a"}),"\n",(0,s.jsxs)(r.ol,{children:["\n",(0,s.jsx)(r.li,{children:"\u7981\u6b62\u4e00\u540d\u53c2\u8bae\u5458\u7684\u6743\u5229\uff1a\u53c2\u8bae\u5458\u53ef\u4ee5\u8ba9\u53e6\u4e00\u4f4d\u53c2\u8bae\u5458\u5728\u8fd9\u4e00\u8f6e\u548c\u968f\u540e\u7684\u51e0\u8f6e\u4e2d\u4e27\u5931\u6240\u6709\u7684\u6743\u5229\u3002"}),"\n",(0,s.jsx)(r.li,{children:"\u5ba3\u5e03\u80dc\u5229\uff1a\u5982\u679c\u53c2\u8bae\u5458\u53d1\u73b0\u6709\u6743\u5229\u6295\u7968\u7684\u53c2\u8bae\u5458\u90fd\u662f\u540c\u4e00\u4e2a\u9635\u8425\u7684\uff0c\u4ed6\u53ef\u4ee5\u5ba3\u5e03\u80dc\u5229\u5e76\u51b3\u5b9a\u5728\u6e38\u620f\u4e2d\u7684\u6709\u5173\u53d8\u5316\u3002"}),"\n"]}),"\n",(0,s.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u5b57\u7b26\u4e32\u4ee3\u8868\u6bcf\u4e2a\u53c2\u8bae\u5458\u7684\u9635\u8425\u3002\u5b57\u6bcd \u201cR\u201d \u548c \u201cD\u201d \u5206\u522b\u4ee3\u8868\u4e86 Radiant\uff08\u5929\u8f89\uff09\u548c Dire\uff08\u591c\u9b47\uff09\u3002\u7136\u540e\uff0c\u5982\u679c\u6709 n \u4e2a\u53c2\u8bae\u5458\uff0c\u7ed9\u5b9a\u5b57\u7b26\u4e32\u7684\u5927\u5c0f\u5c06\u662f n\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u4ee5\u8f6e\u4e3a\u57fa\u7840\u7684\u8fc7\u7a0b\u4ece\u7ed9\u5b9a\u987a\u5e8f\u7684\u7b2c\u4e00\u4e2a\u53c2\u8bae\u5458\u5f00\u59cb\u5230\u6700\u540e\u4e00\u4e2a\u53c2\u8bae\u5458\u7ed3\u675f\u3002\u8fd9\u4e00\u8fc7\u7a0b\u5c06\u6301\u7eed\u5230\u6295\u7968\u7ed3\u675f\u3002\u6240\u6709\u5931\u53bb\u6743\u5229\u7684\u53c2\u8bae\u5458\u5c06\u5728\u8fc7\u7a0b\u4e2d\u88ab\u8df3\u8fc7\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u5047\u8bbe\u6bcf\u4e00\u4f4d\u53c2\u8bae\u5458\u90fd\u8db3\u591f\u806a\u660e\uff0c\u4f1a\u4e3a\u81ea\u5df1\u7684\u653f\u515a\u505a\u51fa\u6700\u597d\u7684\u7b56\u7565\uff0c\u4f60\u9700\u8981\u9884\u6d4b\u54ea\u4e00\u65b9\u6700\u7ec8\u4f1a\u5ba3\u5e03\u80dc\u5229\u5e76\u5728 Dota2 \u6e38\u620f\u4e2d\u51b3\u5b9a\u6539\u53d8\u3002\u8f93\u51fa\u5e94\u8be5\u662f Radiant \u6216 Dire\u3002"}),"\n",(0,s.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"// \u5229\u7528\u961f\u5217\r\nimport java.util.Deque;\r\nimport java.util.LinkedList;\r\n\r\nclass Solution {\r\n    public String predictPartyVictory(String senate) {\r\n        Deque<Character>  deque = new LinkedList<>();\r\n        for(char c : senate.toCharArray()) deque.addLast(c);\r\n        int r = 0, d = 0;\r\n        while(deque.size() > 1){\r\n            int len = deque.size();\r\n            int sum = len;\r\n            for(int i = 0; i < len; i++){\r\n                char c = deque.pollFirst();\r\n                if (c == 'R') {\r\n                    if(d > 0){\r\n                        d--;\r\n                    } else {\r\n                        r++;\r\n                        deque.addLast(c);\r\n                    }\r\n                } else {\r\n                    if(r > 0) {\r\n                        r--;\r\n                    } else {\r\n                        d++;\r\n                        deque.addLast(c);\r\n                        }\r\n\r\n                }\r\n            }\r\n\r\n            if(sum == deque.size()) break;\r\n        }\r\n        return deque.isEmpty() ? null : (deque.pollFirst() == 'R' ? \"Radiant\" : \"Dire\");\r\n\r\n    }\r\n}\n"})}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-java",children:"// b\r\nclass Solution {\r\n    public String predictPartyVictory(String senate) {\r\n\r\n        byte[] senators = senate.getBytes();\r\n        boolean r = true, d = true;\r\n        int flag = 0;\r\n\r\n        while(r && d){\r\n            r = false;\r\n            d = false;\r\n            for(int i = 0; i < senate.length(); i++){\r\n                if(senators[i] == 'R'){\r\n                    if(flag < 0){\r\n                        senators[i] = 0;\r\n                    }\r\n                    else r = true;\r\n                    flag++;\r\n                }\r\n\r\n                if(senators[i] == 'D'){\r\n                    if(flag > 0){\r\n                        senators[i] = 0;\r\n                    }\r\n                    else d = true;\r\n                    flag--;\r\n                }\r\n            }\r\n        }\r\n\r\n        return r ? \"Radiant\" : \"Dire\";\r\n\r\n    }\r\n}\n"})})]})}function h(n={}){const{wrapper:r}={...(0,t.R)(),...n.components};return r?(0,s.jsx)(r,{...n,children:(0,s.jsx)(u,{...n})}):u(n)}},10754:(n,r,e)=>{e.d(r,{A:()=>i});const i=e.p+"assets/images/\u8d2a\u5fc3\u603b\u7ed3water-ad7177436e77feffb74618a90b7ea80f.png"},28453:(n,r,e)=>{e.d(r,{R:()=>l,x:()=>a});var i=e(96540);const s={},t=i.createContext(s);function l(n){const r=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function a(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:l(n.components),i.createElement(t.Provider,{value:r},n.children)}}}]);