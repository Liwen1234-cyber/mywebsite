"use strict";(self.webpackChunkmybase=self.webpackChunkmybase||[]).push([[68199],{65563:(n,r,i)=>{i.r(r),i.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>e,toc:()=>c});const e=JSON.parse('{"id":"\u7801\u519c/\u5237\u9898\u8bb0\u5f55/\u56fe\u8bba","title":"\u56fe\u8bba","description":"\u56fe\u7684\u57fa\u672c\u6982\u5ff5","source":"@site/docs/\u7801\u519c/\u5237\u9898\u8bb0\u5f55/\u56fe\u8bba.md","sourceDirName":"\u7801\u519c/\u5237\u9898\u8bb0\u5f55","slug":"/\u7801\u519c/\u5237\u9898\u8bb0\u5f55/\u56fe\u8bba","permalink":"/\u7801\u519c/\u5237\u9898\u8bb0\u5f55/\u56fe\u8bba","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var t=i(74848),s=i(28453);const d={},a="\u56fe\u8bba",l={},c=[{value:"\u56fe\u7684\u57fa\u672c\u6982\u5ff5",id:"\u56fe\u7684\u57fa\u672c\u6982\u5ff5",level:2},{value:"\u56fe\u7684\u79cd\u7c7b",id:"\u56fe\u7684\u79cd\u7c7b",level:3},{value:"\u5ea6",id:"\u5ea6",level:3},{value:"\u8fde\u901a\u6027",id:"\u8fde\u901a\u6027",level:3},{value:"\u8fde\u901a\u56fe",id:"\u8fde\u901a\u56fe",level:3},{value:"\u5f3a\u8fde\u901a\u56fe",id:"\u5f3a\u8fde\u901a\u56fe",level:3},{value:"\u8fde\u901a\u5206\u91cf",id:"\u8fde\u901a\u5206\u91cf",level:3},{value:"\u5f3a\u8fde\u901a\u5206\u91cf",id:"\u5f3a\u8fde\u901a\u5206\u91cf",level:3},{value:"\u56fe\u7684\u6784\u9020",id:"\u56fe\u7684\u6784\u9020",level:2},{value:"\u90bb\u63a5\u77e9\u9635",id:"\u90bb\u63a5\u77e9\u9635",level:3},{value:"\u90bb\u63a5\u8868",id:"\u90bb\u63a5\u8868",level:3},{value:"\u56fe\u7684\u904d\u5386\u65b9\u5f0f",id:"\u56fe\u7684\u904d\u5386\u65b9\u5f0f",level:2},{value:"DFS \u57fa\u7840\u77e5\u8bc6",id:"dfs-\u57fa\u7840\u77e5\u8bc6",level:2},{value:"\u4ee3\u7801\u6846\u67b6",id:"\u4ee3\u7801\u6846\u67b6",level:2},{value:"98. \u6240\u6709\u53ef\u8fbe\u8def\u5f84",id:"98-\u6240\u6709\u53ef\u8fbe\u8def\u5f84",level:2},{value:"BSF \u57fa\u7840\u77e5\u8bc6",id:"bsf-\u57fa\u7840\u77e5\u8bc6",level:2},{value:"99. \u5c9b\u5c7f\u6570\u91cf",id:"99-\u5c9b\u5c7f\u6570\u91cf",level:2},{value:"01. \u5b64\u5c9b\u7684\u603b\u9762\u79ef",id:"01-\u5b64\u5c9b\u7684\u603b\u9762\u79ef",level:2},{value:"102. \u6c89\u6ca1\u5b64\u5c9b",id:"102-\u6c89\u6ca1\u5b64\u5c9b",level:2},{value:"DFS",id:"dfs",level:4},{value:"103. \u6c34\u6d41\u95ee\u9898",id:"103-\u6c34\u6d41\u95ee\u9898",level:2},{value:"104.\u5efa\u9020\u6700\u5927\u5c9b\u5c7f",id:"104\u5efa\u9020\u6700\u5927\u5c9b\u5c7f",level:2},{value:"110. \u5b57\u7b26\u4e32\u63a5\u9f99",id:"110-\u5b57\u7b26\u4e32\u63a5\u9f99",level:2},{value:"105.\u6709\u5411\u56fe\u7684\u5b8c\u5168\u53ef\u8fbe\u6027",id:"105\u6709\u5411\u56fe\u7684\u5b8c\u5168\u53ef\u8fbe\u6027",level:2},{value:"106. \u5c9b\u5c7f\u7684\u5468\u957f",id:"106-\u5c9b\u5c7f\u7684\u5468\u957f",level:2},{value:"\u5e76\u67e5\u96c6\u7406\u8bba\u57fa\u7840",id:"\u5e76\u67e5\u96c6\u7406\u8bba\u57fa\u7840",level:2},{value:"\u539f\u7406",id:"\u539f\u7406",level:3},{value:"\u8def\u5f84\u538b\u7f29",id:"\u8def\u5f84\u538b\u7f29",level:4},{value:"\u4ee3\u7801\u6a21\u677f",id:"\u4ee3\u7801\u6a21\u677f",level:5},{value:"\u6309\u79e9\uff08rank\uff09\u5408\u5e76",id:"\u6309\u79e9rank\u5408\u5e76",level:4},{value:"\u590d\u6742\u5ea6\u5206\u6790",id:"\u590d\u6742\u5ea6\u5206\u6790",level:3},{value:"\u9898\u76ee",id:"\u9898\u76ee",level:3},{value:"107. \u5bfb\u627e\u5b58\u5728\u7684\u8def\u5f84",id:"107-\u5bfb\u627e\u5b58\u5728\u7684\u8def\u5f84",level:4},{value:"108. \u5197\u4f59\u8fde\u63a5",id:"108-\u5197\u4f59\u8fde\u63a5",level:4},{value:"109. \u5197\u4f59\u8fde\u63a5 II",id:"109-\u5197\u4f59\u8fde\u63a5-ii",level:4},{value:"\u6700\u5c0f\u751f\u6210\u6811",id:"\u6700\u5c0f\u751f\u6210\u6811",level:2},{value:"prim \u7b97\u6cd5",id:"prim-\u7b97\u6cd5",level:3},{value:"kruskal \u7b97\u6cd5",id:"kruskal-\u7b97\u6cd5",level:3},{value:"\u9898\u76ee",id:"\u9898\u76ee-1",level:3},{value:"\u62d3\u6251\u6392\u5e8f\u7cbe\u8bb2",id:"\u62d3\u6251\u6392\u5e8f\u7cbe\u8bb2",level:2},{value:"\u9898\u76ee",id:"\u9898\u76ee-2",level:3},{value:"dijkstra",id:"dijkstra",level:2},{value:"\u9898\u76ee",id:"\u9898\u76ee-3",level:3},{value:"Bellman_ford \u7b97\u6cd5",id:"bellman_ford-\u7b97\u6cd5",level:2},{value:"\u9898\u76ee",id:"\u9898\u76ee-4",level:3},{value:"Bellman_ford \u4e4b\u5224\u65ad\u8d1f\u6743\u56de\u8def",id:"bellman_ford-\u4e4b\u5224\u65ad\u8d1f\u6743\u56de\u8def",level:2},{value:"bellman_ford \u4e4b\u5355\u6e90\u6709\u9650\u6700\u77ed\u8def",id:"bellman_ford-\u4e4b\u5355\u6e90\u6709\u9650\u6700\u77ed\u8def",level:2},{value:"\u591a\u6e90 BFS",id:"\u591a\u6e90-bfs",level:2},{value:"1162. \u5730\u56fe\u5206\u6790",id:"1162-\u5730\u56fe\u5206\u6790",level:3},{value:"1765. \u5730\u56fe\u4e2d\u7684\u6700\u9ad8\u70b9",id:"1765-\u5730\u56fe\u4e2d\u7684\u6700\u9ad8\u70b9",level:3},{value:"Floyd \u7b97\u6cd5",id:"floyd-\u7b97\u6cd5",level:2},{value:"\u9898\u76ee",id:"\u9898\u76ee-5",level:3},{value:"A * \u7b97\u6cd5\u7cbe\u8bb2 \uff08A star \u7b97\u6cd5\uff09",id:"a--\u7b97\u6cd5\u7cbe\u8bb2-a-star-\u7b97\u6cd5",level:2},{value:"\u603b\u7ed3",id:"\u603b\u7ed3",level:2},{value:"\u5176\u4ed6",id:"\u5176\u4ed6",level:2},{value:"841.\u94a5\u5319\u548c\u623f\u95f4",id:"841\u94a5\u5319\u548c\u623f\u95f4",level:3},{value:"127. \u5355\u8bcd\u63a5\u9f99",id:"127-\u5355\u8bcd\u63a5\u9f99",level:3},{value:"684.\u5197\u4f59\u8fde\u63a5",id:"684\u5197\u4f59\u8fde\u63a5",level:3},{value:"685.\u5197\u4f59\u8fde\u63a5 II",id:"685\u5197\u4f59\u8fde\u63a5-ii",level:3},{value:"200. \u5c9b\u5c7f\u6570\u91cf",id:"200-\u5c9b\u5c7f\u6570\u91cf",level:3},{value:"994. \u8150\u70c2\u7684\u6a58\u5b50",id:"994-\u8150\u70c2\u7684\u6a58\u5b50",level:3},{value:"207. \u8bfe\u7a0b\u8868",id:"207-\u8bfe\u7a0b\u8868",level:3},{value:"64. \u6700\u5c0f\u8def\u5f84\u548c",id:"64-\u6700\u5c0f\u8def\u5f84\u548c",level:3}];function o(n){const r={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",span:"span",strong:"strong",ul:"ul",...(0,s.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"\u56fe\u8bba",children:"\u56fe\u8bba"})}),"\n",(0,t.jsx)(r.h2,{id:"\u56fe\u7684\u57fa\u672c\u6982\u5ff5",children:"\u56fe\u7684\u57fa\u672c\u6982\u5ff5"}),"\n",(0,t.jsx)(r.p,{children:"\u4e8c\u7ef4\u5750\u6807\u4e2d\uff0c\u4e24\u70b9\u53ef\u4ee5\u8fde\u6210\u7ebf\uff0c\u591a\u4e2a\u70b9\u8fde\u6210\u7684\u7ebf\u5c31\u6784\u6210\u4e86\u56fe\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5f53\u7136\u56fe\u4e5f\u53ef\u4ee5\u5c31\u4e00\u4e2a\u8282\u70b9\uff0c\u751a\u81f3\u6ca1\u6709\u8282\u70b9\uff08\u7a7a\u56fe\uff09"}),"\n",(0,t.jsx)(r.h3,{id:"\u56fe\u7684\u79cd\u7c7b",children:"\u56fe\u7684\u79cd\u7c7b"}),"\n",(0,t.jsx)(r.p,{children:"\u6574\u4f53\u4e0a\u4e00\u822c\u5206\u4e3a \u6709\u5411\u56fe \u548c \u65e0\u5411\u56fe\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u52a0\u6743\u6709\u5411\u56fe\uff0c\u5c31\u662f\u56fe\u4e2d\u8fb9\u662f\u6709\u6743\u503c\u7684\uff0c\u52a0\u6743\u65e0\u5411\u56fe\u4e5f\u662f\u540c\u7406"}),"\n",(0,t.jsx)(r.h3,{id:"\u5ea6",children:"\u5ea6"}),"\n",(0,t.jsx)(r.p,{children:"\u65e0\u5411\u56fe\u4e2d\u6709\u51e0\u6761\u8fb9\u8fde\u63a5\u8be5\u8282\u70b9\uff0c\u8be5\u8282\u70b9\u5c31\u6709\u51e0\u5ea6\u3002\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u6bcf\u4e2a\u8282\u70b9\u6709\u51fa\u5ea6\u548c\u5165\u5ea6\u3002\u51fa\u5ea6\uff1a\u4ece\u8be5\u8282\u70b9\u51fa\u53d1\u7684\u8fb9\u7684\u4e2a\u6570\u3002\u5165\u5ea6\uff1a\u6307\u5411\u8be5\u8282\u70b9\u8fb9\u7684\u4e2a\u6570\u3002"}),"\n",(0,t.jsx)(r.h3,{id:"\u8fde\u901a\u6027",children:"\u8fde\u901a\u6027"}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u56fe\u4e2d\u8868\u793a\u8282\u70b9\u7684\u8fde\u901a\u60c5\u51b5\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u8fde\u901a\u6027\u3002"}),"\n",(0,t.jsx)(r.h3,{id:"\u8fde\u901a\u56fe",children:"\u8fde\u901a\u56fe"}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u65e0\u5411\u56fe\u4e2d\uff0c\u4efb\u4f55\u4e24\u4e2a\u8282\u70b9\u90fd\u662f\u53ef\u4ee5\u5230\u8fbe\u7684\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u8fde\u901a\u56fe\uff0c\u5982\u679c\u6709\u8282\u70b9\u4e0d\u80fd\u5230\u8fbe\u5176\u4ed6\u8282\u70b9\uff0c\u5219\u4e3a\u975e\u8fde\u901a\u56fe"}),"\n",(0,t.jsx)(r.h3,{id:"\u5f3a\u8fde\u901a\u56fe",children:"\u5f3a\u8fde\u901a\u56fe"}),"\n",(0,t.jsxs)(r.p,{children:["\u5728\u6709\u5411\u56fe\u4e2d\uff0c\u4efb\u4f55\u4e24\u4e2a\u8282\u70b9\u662f\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe\u7684\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u5f3a\u8fde\u901a\u56fe\u3002\u5f3a\u8fde\u901a\u56fe\u662f\u5728\u6709\u5411\u56fe\u4e2d",(0,t.jsx)(r.strong,{children:"\u4efb\u4f55\u4e24\u4e2a\u8282\u70b9\u662f\u53ef\u4ee5\u76f8\u4e92\u5230\u8fbe"})]}),"\n",(0,t.jsx)(r.h3,{id:"\u8fde\u901a\u5206\u91cf",children:"\u8fde\u901a\u5206\u91cf"}),"\n",(0,t.jsxs)(r.p,{children:["\u5728\u65e0\u5411\u56fe\u4e2d\u7684",(0,t.jsx)(r.strong,{children:"\u6781\u5927\u8fde\u901a\u5b50\u56fe"}),"\u79f0\u4e4b\u4e3a\u8be5\u56fe\u7684\u4e00\u4e2a\u8fde\u901a\u5206\u91cf\u3002"]}),"\n",(0,t.jsx)(r.h3,{id:"\u5f3a\u8fde\u901a\u5206\u91cf",children:"\u5f3a\u8fde\u901a\u5206\u91cf"}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u6709\u5411\u56fe\u4e2d\u6781\u5927\u5f3a\u8fde\u901a\u5b50\u56fe\u79f0\u4e4b\u4e3a\u8be5\u56fe\u7684\u5f3a\u8fde\u901a\u5206\u91cf\u3002"}),"\n",(0,t.jsx)(r.h2,{id:"\u56fe\u7684\u6784\u9020",children:"\u56fe\u7684\u6784\u9020"}),"\n",(0,t.jsx)(r.p,{children:"\u4e00\u822c\u4f7f\u7528\u90bb\u63a5\u8868\u3001\u90bb\u63a5\u77e9\u9635\u6216\u8005\u7528\u7c7b\u6765\u8868\u793a\u3002\u4e3b\u8981\u662f\u6734\u7d20\u5b58\u50a8\u3001\u90bb\u63a5\u8868\u548c\u90bb\u63a5\u77e9\u9635\u3002"}),"\n",(0,t.jsx)(r.h3,{id:"\u90bb\u63a5\u77e9\u9635",children:"\u90bb\u63a5\u77e9\u9635"}),"\n",(0,t.jsx)(r.p,{children:"\u90bb\u63a5\u77e9\u9635 \u4f7f\u7528 \u4e8c\u7ef4\u6570\u7ec4\u6765\u8868\u793a\u56fe\u7ed3\u6784\u3002 \u90bb\u63a5\u77e9\u9635\u662f\u4ece\u8282\u70b9\u7684\u89d2\u5ea6\u6765\u8868\u793a\u56fe\uff0c\u6709\u591a\u5c11\u8282\u70b9\u5c31\u7533\u8bf7\u591a\u5927\u7684\u4e8c\u7ef4\u6570\u7ec4\u3002"}),"\n",(0,t.jsxs)(r.p,{children:["\u4f8b\u5982\uff1a ",(0,t.jsx)(r.code,{children:"grid[2]][5] = 6"}),"\uff0c\u8868\u793a \u8282\u70b9 2 \u8fde\u63a5 \u8282\u70b9 5 \u4e3a\u6709\u5411\u56fe\uff0c\u8282\u70b9 2 \u6307\u5411 \u8282\u70b9 5\uff0c\u8fb9\u7684\u6743\u503c\u4e3a 6\u3002\u5982\u679c\u60f3\u8868\u793a\u65e0\u5411\u56fe\uff0c\u5373\uff1a",(0,t.jsx)(r.code,{children:"grid[2][5] = 6"}),"\uff0c",(0,t.jsx)(r.code,{children:"grid[5][2] = 6"}),"\uff0c\u8868\u793a\u8282\u70b9 2 \u4e0e \u8282\u70b9 5 \u76f8\u4e92\u8fde\u901a\uff0c\u6743\u503c\u4e3a 6\u3002"]}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u4e00\u4e2a n \uff08\u8282\u70b9\u6570\uff09\u4e3a 8 \u7684\u56fe\u4e2d\uff0c\u5c31\u9700\u8981\u7533\u8bf7 8 * 8 \u8fd9\u4e48\u5927\u7684\u7a7a\u95f4\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u90bb\u63a5\u77e9\u9635\u7684\u4f18\u70b9\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u8868\u8fbe\u65b9\u5f0f\u7b80\u5355\uff0c\u6613\u4e8e\u7406\u89e3"}),"\n",(0,t.jsx)(r.li,{children:"\u68c0\u67e5\u4efb\u610f\u4e24\u4e2a\u9876\u70b9\u95f4\u662f\u5426\u5b58\u5728\u8fb9\u7684\u64cd\u4f5c\u975e\u5e38\u5feb"}),"\n",(0,t.jsx)(r.li,{children:"\u9002\u5408\u7a20\u5bc6\u56fe\uff0c\u5728\u8fb9\u6570\u63a5\u8fd1\u9876\u70b9\u6570\u5e73\u65b9\u7684\u56fe\u4e2d\uff0c\u90bb\u63a5\u77e9\u9635\u662f\u4e00\u79cd\u7a7a\u95f4\u6548\u7387\u8f83\u9ad8\u7684\u8868\u793a\u65b9\u6cd5\u3002"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"\u7f3a\u70b9\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u9047\u5230\u7a00\u758f\u56fe\uff0c\u4f1a\u5bfc\u81f4\u7533\u8bf7\u8fc7\u5927\u7684\u4e8c\u7ef4\u6570\u7ec4\u9020\u6210\u7a7a\u95f4\u6d6a\u8d39 \u4e14\u904d\u5386 \u8fb9 \u7684\u65f6\u5019\u9700\u8981\u904d\u5386\u6574\u4e2a n * n \u77e9\u9635\uff0c\u9020\u6210\u65f6\u95f4\u6d6a\u8d39"}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"\u90bb\u63a5\u8868",children:"\u90bb\u63a5\u8868"}),"\n",(0,t.jsx)(r.p,{children:"\u90bb\u63a5\u8868 \u4f7f\u7528 \u6570\u7ec4 + \u94fe\u8868\u7684\u65b9\u5f0f\u6765\u8868\u793a\u3002 \u90bb\u63a5\u8868\u662f\u4ece\u8fb9\u7684\u6570\u91cf\u6765\u8868\u793a\u56fe\uff0c\u6709\u591a\u5c11\u8fb9 \u624d\u4f1a\u7533\u8bf7\u5bf9\u5e94\u5927\u5c0f\u7684\u94fe\u8868\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u90bb\u63a5\u8868\u7684\u6784\u9020\u5982\u56fe\uff1a"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"20241208_120929_473_copy",src:i(94228).A+"",width:"988",height:"760"})}),"\n",(0,t.jsx)(r.p,{children:"\u8fd9\u91cc\u8868\u8fbe\u7684\u56fe\u662f\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u8282\u70b9 1 \u6307\u5411 \u8282\u70b9 3 \u548c \u8282\u70b9 5"}),"\n",(0,t.jsx)(r.li,{children:"\u8282\u70b9 2 \u6307\u5411 \u8282\u70b9 4\u3001\u8282\u70b9 3\u3001\u8282\u70b9 5"}),"\n",(0,t.jsx)(r.li,{children:"\u8282\u70b9 3 \u6307\u5411 \u8282\u70b9 4"}),"\n",(0,t.jsx)(r.li,{children:"\u8282\u70b9 4 \u6307\u5411\u8282\u70b9 1"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"\u90bb\u63a5\u8868\u7684\u4f18\u70b9\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u5bf9\u4e8e\u7a00\u758f\u56fe\u7684\u5b58\u50a8\uff0c\u53ea\u9700\u8981\u5b58\u50a8\u8fb9\uff0c\u7a7a\u95f4\u5229\u7528\u7387\u9ad8"}),"\n",(0,t.jsx)(r.li,{children:"\u904d\u5386\u8282\u70b9\u8fde\u63a5\u60c5\u51b5\u76f8\u5bf9\u5bb9\u6613"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"\u7f3a\u70b9\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u68c0\u67e5\u4efb\u610f\u4e24\u4e2a\u8282\u70b9\u95f4\u662f\u5426\u5b58\u5728\u8fb9\uff0c\u6548\u7387\u76f8\u5bf9\u4f4e\uff0c\u9700\u8981 O(V)\u65f6\u95f4\uff0cV \u8868\u793a\u67d0\u8282\u70b9\u8fde\u63a5\u5176\u4ed6\u8282\u70b9\u7684\u6570\u91cf\u3002"}),"\n",(0,t.jsx)(r.li,{children:"\u5b9e\u73b0\u76f8\u5bf9\u590d\u6742\uff0c\u4e0d\u6613\u7406\u89e3"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"\u56fe\u7684\u904d\u5386\u65b9\u5f0f",children:"\u56fe\u7684\u904d\u5386\u65b9\u5f0f"}),"\n",(0,t.jsx)(r.p,{children:"\u56fe\u7684\u904d\u5386\u65b9\u5f0f\u57fa\u672c\u662f\u4e24\u5927\u7c7b\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff08dfs\uff09"}),"\n",(0,t.jsx)(r.li,{children:"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\uff08bfs\uff09"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"dfs-\u57fa\u7840\u77e5\u8bc6",children:"DFS \u57fa\u7840\u77e5\u8bc6"}),"\n",(0,t.jsx)(r.p,{children:"DFS \u5173\u952e\u5c31\u4e24\u70b9\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u641c\u7d22\u65b9\u5411\uff0c\u662f\u8ba4\u51c6\u4e00\u4e2a\u65b9\u5411\u641c\uff0c\u76f4\u5230\u78b0\u58c1\u4e4b\u540e\u518d\u6362\u65b9\u5411"}),"\n",(0,t.jsx)(r.li,{children:"\u6362\u65b9\u5411\u662f\u64a4\u9500\u539f\u8def\u5f84\uff0c\u6539\u4e3a\u8282\u70b9\u94fe\u63a5\u7684\u4e0b\u4e00\u4e2a\u8def\u5f84\uff0c\u56de\u6eaf\u7684\u8fc7\u7a0b\u3002"}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"\u4ee3\u7801\u6846\u67b6",children:"\u4ee3\u7801\u6846\u67b6"}),"\n",(0,t.jsx)(r.p,{children:"\u6b63\u662f\u56e0\u4e3a dfs \u641c\u7d22\u53ef\u4e00\u4e2a\u65b9\u5411\uff0c\u5e76\u9700\u8981\u56de\u6eaf\uff0c\u6240\u4ee5\u7528\u9012\u5f52\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u662f\u6700\u65b9\u4fbf\u7684\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cpp",children:"void dfs(\u53c2\u6570) {\r\n    \u5904\u7406\u8282\u70b9\r\n    dfs(\u56fe\uff0c\u9009\u62e9\u7684\u8282\u70b9); // \u9012\u5f52\r\n    \u56de\u6eaf\uff0c\u64a4\u9500\u5904\u7406\u7ed3\u679c\r\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"98-\u6240\u6709\u53ef\u8fbe\u8def\u5f84",children:"98. \u6240\u6709\u53ef\u8fbe\u8def\u5f84"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1170",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u3010\u9898\u76ee\u63cf\u8ff0\u3011"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u6709 n \u4e2a\u8282\u70b9\u7684\u6709\u5411\u65e0\u73af\u56fe\uff0c\u8282\u70b9\u7f16\u53f7\u4ece 1 \u5230 n\u3002\u8bf7\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\uff0c\u627e\u51fa\u5e76\u8fd4\u56de\u6240\u6709\u4ece\u8282\u70b9 1 \u5230\u8282\u70b9 n \u7684\u8def\u5f84\u3002\u6bcf\u6761\u8def\u5f84\u5e94\u4ee5\u8282\u70b9\u7f16\u53f7\u7684\u5217\u8868\u5f62\u5f0f\u8868\u793a\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u3010\u8f93\u5165\u63cf\u8ff0\u3011"}),"\n",(0,t.jsx)(r.p,{children:"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 N\uff0cM\uff0c\u8868\u793a\u56fe\u4e2d\u62e5\u6709 N \u4e2a\u8282\u70b9\uff0cM \u6761\u8fb9"}),"\n",(0,t.jsx)(r.p,{children:"\u540e\u7eed M \u884c\uff0c\u6bcf\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 s \u548c t\uff0c\u8868\u793a\u56fe\u4e2d\u7684 s \u8282\u70b9\u4e0e t \u8282\u70b9\u4e2d\u6709\u4e00\u6761\u8def\u5f84"}),"\n",(0,t.jsx)(r.p,{children:"\u3010\u8f93\u51fa\u63cf\u8ff0\u3011"}),"\n",(0,t.jsx)(r.p,{children:"\u8f93\u51fa\u6240\u6709\u7684\u53ef\u8fbe\u8def\u5f84\uff0c\u8def\u5f84\u4e2d\u6240\u6709\u8282\u70b9\u7684\u540e\u9762\u8ddf\u4e00\u4e2a\u7a7a\u683c\uff0c\u6bcf\u6761\u8def\u5f84\u72ec\u5360\u4e00\u884c\uff0c\u5b58\u5728\u591a\u6761\u8def\u5f84\uff0c\u8def\u5f84\u8f93\u51fa\u7684\u987a\u5e8f\u53ef\u4efb\u610f\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5982\u679c\u4e0d\u5b58\u5728\u4efb\u4f55\u4e00\u6761\u8def\u5f84\uff0c\u5219\u8f93\u51fa -1\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'// \u90bb\u63a5\u77e9\u9635\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    static List<Integer> path = new ArrayList<>();\r\n    static List<List<Integer>> result = new ArrayList<>();\r\n    public static void main(String[] args){\r\n        Scanner in = new Scanner(System.in);\r\n        int N = in.nextInt(); // \u8282\u70b9\r\n        int M = in.nextInt(); // \u8fb9\r\n        int[][] graph = new int[N+1][N+1];\r\n        for(int i = 0; i < M; i++){\r\n            int s = in.nextInt();\r\n            int t = in.nextInt();\r\n            graph[s][t] = 1;\r\n        }\r\n        path.add(1);\r\n        dfs(graph, 1, N);\r\n        if(result.size() == 0) System.out.println(-1);\r\n        else{\r\n            for(List<Integer> p : result){\r\n                for(int i = 0; i < p.size()-1; i++){\r\n                    System.out.print(p.get(i) + " ");\r\n                }\r\n                System.out.println(p.get(p.size()-1));\r\n            }\r\n        }\r\n        in.close();\r\n    }\r\n    private static void dfs(int[][] graph, int x, int n){\r\n        if(x == n){\r\n            result.add(new ArrayList<>(path));\r\n            return;\r\n        }\r\n        for(int i = 1; i <= n; i++){\r\n            if(graph[x][i] == 1){\r\n                path.add(i);\r\n                dfs(graph, i, n);\r\n                path.remove(path.size()-1);\r\n            }\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'// \u90bb\u63a5\u8868\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    static List<Integer> path = new ArrayList<>();\r\n    static List<List<Integer>> result = new ArrayList<>();\r\n    public static void main(String[] args){\r\n        Scanner in = new Scanner(System.in);\r\n        int N = in.nextInt(); // \u8282\u70b9\r\n        int M = in.nextInt(); // \u8fb9\r\n        List<LinkedList<Integer>> graph = new ArrayList<>(N+1);\r\n        for(int i = 0; i <= N; i++){\r\n            graph.add(new LinkedList<>());\r\n        }\r\n        for(int i = 0; i < M; i++){\r\n            int s = in.nextInt();\r\n            int t = in.nextInt();\r\n            graph.get(s).add(t);\r\n        }\r\n        path.add(1);\r\n        dfs(graph, 1, N);\r\n        if(result.size() == 0) System.out.println(-1);\r\n        else{\r\n            for(List<Integer> p : result){\r\n                for(int i = 0; i < p.size()-1; i++){\r\n                    System.out.print(p.get(i) + " ");\r\n                }\r\n                System.out.println(p.get(p.size()-1));\r\n            }\r\n        }\r\n        in.close();\r\n    }\r\n    private static void dfs(List<LinkedList<Integer>> graph, int x, int n){\r\n        if(x == n){\r\n            result.add(new ArrayList<>(path));\r\n            return;\r\n        }\r\n        for(int i : graph.get(x)){\r\n            path.add(i);\r\n            dfs(graph, i, n);\r\n            path.remove(path.size()-1);\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"bsf-\u57fa\u7840\u77e5\u8bc6",children:"BSF \u57fa\u7840\u77e5\u8bc6"}),"\n",(0,t.jsx)(r.p,{children:"\u5e7f\u641c\u7684\u641c\u7d22\u65b9\u5f0f\u5c31\u9002\u5408\u4e8e\u89e3\u51b3\u4e24\u4e2a\u70b9\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u95ee\u9898\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u56e0\u4e3a\u5e7f\u641c\u662f\u4ece\u8d77\u70b9\u51fa\u53d1\uff0c\u4ee5\u8d77\u59cb\u70b9\u4e3a\u4e2d\u5fc3\u4e00\u5708\u4e00\u5708\u8fdb\u884c\u641c\u7d22\uff0c\u4e00\u65e6\u9047\u5230\u7ec8\u70b9\uff0c\u8bb0\u5f55\u4e4b\u524d\u8d70\u8fc7\u7684\u8282\u70b9\u5c31\u662f\u4e00\u6761\u6700\u77ed\u8def\u3002"}),"\n",(0,t.jsx)(r.h2,{id:"99-\u5c9b\u5c7f\u6570\u91cf",children:"99. \u5c9b\u5c7f\u6570\u91cf"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1171",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u7531 1\uff08\u9646\u5730\uff09\u548c 0\uff08\u6c34\uff09\u7ec4\u6210\u7684\u77e9\u9635\uff0c\u4f60\u9700\u8981\u8ba1\u7b97\u5c9b\u5c7f\u7684\u6570\u91cf\u3002\u5c9b\u5c7f\u7531\u6c34\u5e73\u65b9\u5411\u6216\u5782\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u9646\u5730\u8fde\u63a5\u800c\u6210\uff0c\u5e76\u4e14\u56db\u5468\u90fd\u662f\u6c34\u57df\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u77e9\u9635\u5916\u5747\u88ab\u6c34\u5305\u56f4\u3002"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// DFS\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    public static int[][] dir = {{1,0},{-1,0},{0,1},{0,-1}};\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int N = in.nextInt();\r\n        int M = in.nextInt();\r\n        int[][] arr = new int[N][M];\r\n        for(int i = 0; i < N; i++){\r\n            for(int j = 0; j < M; j++){\r\n                arr[i][j] = in.nextInt();\r\n            }\r\n        }\r\n\r\n        in.close();\r\n        int count = 0;\r\n        boolean[][] visited = new boolean[N][M];\r\n        for(int i = 0; i < N; i++){\r\n            for(int j = 0; j < M; j++){\r\n                if(!visited[i][j] && arr[i][j] == 1){\r\n                    count++;\r\n                    visited[i][j] = true;\r\n                    dfs(visited, i, j, arr);\r\n                }\r\n            }\r\n        }\r\n\r\n        System.out.println(count);\r\n    }\r\n\r\n\r\n    public static void dfs(boolean[][] visited, int x, int y, int[][] arr){\r\n        for(int k = 0; k < 4; k++){\r\n            int next_x = x + dir[k][0];\r\n            int next_y = y + dir[k][1];\r\n            if(next_x < 0 || next_x >= arr.length || next_y < 0 || next_y >= arr[0].length)\r\n                continue;\r\n            if(!visited[next_x][next_y] && arr[next_x][next_y] == 1){\r\n                visited[next_x][next_y] = true;\r\n                dfs(visited, next_x, next_y, arr);\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\n\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// BFS\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    public static int[][] dir = {{1,0},{-1,0},{0,1},{0,-1}};\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int N = in.nextInt();\r\n        int M = in.nextInt();\r\n        int[][] arr = new int[N][M];\r\n        for(int i = 0; i < N; i++){\r\n            for(int j = 0; j < M; j++){\r\n                arr[i][j] = in.nextInt();\r\n            }\r\n        }\r\n\r\n        in.close();\r\n        int count = 0;\r\n        boolean[][] visited = new boolean[N][M];\r\n        for(int i = 0; i < N; i++){\r\n            for(int j = 0; j < M; j++){\r\n                if(!visited[i][j] && arr[i][j] == 1){\r\n                    count++;\r\n                    bfs(visited, i, j, arr);\r\n                }\r\n            }\r\n        }\r\n\r\n        System.out.println(count);\r\n    }\r\n\r\n\r\n    public static void bfs(boolean[][] visited, int x, int y, int[][] arr){\r\n        Queue<int[]> queue = new LinkedList<>();\r\n        queue.add(new int[]{x,y});\r\n        visited[x][y] = true;\r\n\r\n\r\n        while(!queue.isEmpty()){\r\n            int cur_x = queue.peek()[0];\r\n            int cur_y = queue.poll()[1];\r\n            for(int k = 0; k < 4; k++){\r\n                int next_x = cur_x + dir[k][0];\r\n                int next_y = cur_y + dir[k][1];\r\n                if(next_x < 0 || next_x >= arr.length || next_y < 0 || next_y >= arr[0].length)\r\n                    continue;\r\n                if(!visited[next_x][next_y] && arr[next_x][next_y] == 1){\r\n                    queue.add(new int[]{next_x,next_y});\r\n                    visited[next_x][next_y] = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\n"})}),"\n",(0,t.jsx)(r.h2,{id:"01-\u5b64\u5c9b\u7684\u603b\u9762\u79ef",children:"01. \u5b64\u5c9b\u7684\u603b\u9762\u79ef"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1173",children:"\u5361\u7801\u7f51\uff1a101. \u5b64\u5c9b\u7684\u603b\u9762\u79ef"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u7531 1\uff08\u9646\u5730\uff09\u548c 0\uff08\u6c34\uff09\u7ec4\u6210\u7684\u77e9\u9635\uff0c\u5c9b\u5c7f\u6307\u7684\u662f\u7531\u6c34\u5e73\u6216\u5782\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u9646\u5730\u5355\u5143\u683c\u7ec4\u6210\u7684\u533a\u57df\uff0c\u4e14\u5b8c\u5168\u88ab\u6c34\u57df\u5355\u5143\u683c\u5305\u56f4\u3002\u5b64\u5c9b\u662f\u90a3\u4e9b\u4f4d\u4e8e\u77e9\u9635\u5185\u90e8\u3001\u6240\u6709\u5355\u5143\u683c\u90fd\u4e0d\u63a5\u89e6\u8fb9\u7f18\u7684\u5c9b\u5c7f\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u73b0\u5728\u4f60\u9700\u8981\u8ba1\u7b97\u6240\u6709\u5b64\u5c9b\u7684\u603b\u9762\u79ef\uff0c\u5c9b\u5c7f\u9762\u79ef\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e3a\u7ec4\u6210\u5c9b\u5c7f\u7684\u9646\u5730\u7684\u603b\u6570\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8f93\u5165\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 N, M\uff0c\u8868\u793a\u77e9\u9635\u7684\u884c\u6570\u548c\u5217\u6570\u3002\u4e4b\u540e N \u884c\uff0c\u6bcf\u884c\u5305\u542b M \u4e2a\u6570\u5b57\uff0c\u6570\u5b57\u4e3a 1 \u6216\u8005 0\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8f93\u51fa\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u8f93\u51fa\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u6240\u6709\u5b64\u5c9b\u7684\u603b\u9762\u79ef\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5b64\u5c9b\uff0c\u5219\u8f93\u51fa 0\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// DFS\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    public static int[][] dir = {{1,0},{-1,0},{0,1},{0,-1}};\r\n    public static int count = 0;\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int N = in.nextInt();\r\n        int M = in.nextInt();\r\n        int[][] arr = new int[N][M];\r\n        for(int i = 0; i < N; i++){\r\n            for(int j = 0; j < M; j++){\r\n                arr[i][j] = in.nextInt();\r\n            }\r\n        }\r\n\r\n        in.close();\r\n\r\n        // \u4ece\u5de6\u8fb9\u754c\u548c\u53f3\u8fb9\u754c\u5411\u4e2d\u95f4\u904d\u5386\r\n        for(int i = 0; i < N; i++){\r\n            if(arr[i][0] == 1) dfs(i, 0, arr);\r\n            if(arr[i][M-1] == 1) dfs(i, M-1, arr);\r\n        }\r\n\r\n        // \u4ece\u4e0a\u8fb9\u754c\u548c\u4e0b\u8fb9\u754c\u5411\u4e2d\u95f4\u904d\u5386\r\n        for(int j = 0; j < M; j++){ // \u904d\u5386\u4e0a\u4fa7\u548c\u4e0b\u4fa7\u8fb9\u754c\r\n            if(arr[0][j] == 1) dfs(0, j, arr);\r\n            if(arr[N-1][j] == 1) dfs(N-1, j, arr);\r\n        }\r\n\r\n        count = 0;\r\n\r\n        for(int i = 0; i < N; i++){\r\n            for(int j = 0; j < M; j++){\r\n                if(arr[i][j] == 1) dfs(i, j, arr);\r\n            }\r\n        }\r\n\r\n        System.out.println(count);\r\n    }\r\n\r\n\r\n\r\n    public static void dfs(int x, int y, int[][] arr){\r\n        arr[x][y] = 0;\r\n        count++;\r\n\r\n        for(int i = 0; i < 4; i++){\r\n            int newX = x + dir[i][0];\r\n            int newY = y + dir[i][1];\r\n\r\n            if(newX < 0 || newX >= arr.length || newY < 0 || newY >= arr[0].length)\r\n                continue;\r\n\r\n            if(arr[newX][newY] == 1){\r\n                dfs(newX, newY, arr);\r\n            }\r\n        }\r\n    }\r\n}\r\n\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// BFS\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    public static int[][] dir = {{1,0},{-1,0},{0,1},{0,-1}};\r\n    public static int count = 0;\r\n    public static void main(String[] args) {\r\n        Scanner in = new Scanner(System.in);\r\n        int N = in.nextInt();\r\n        int M = in.nextInt();\r\n        int[][] arr = new int[N][M];\r\n        for(int i = 0; i < N; i++){\r\n            for(int j = 0; j < M; j++){\r\n                arr[i][j] = in.nextInt();\r\n            }\r\n        }\r\n\r\n        in.close();\r\n        for(int i = 0; i < N; i++){ // \u904d\u5386\u5de6\u4fa7\u548c\u53f3\u4fa7\u8fb9\u754c\r\n            if(arr[i][0] == 1) bfs(i, 0, arr);\r\n            if(arr[i][M-1] == 1) bfs(i, M-1, arr);\r\n        }\r\n\r\n        for(int j = 0; j < M; j++){ // \u904d\u5386\u4e0a\u4fa7\u548c\u4e0b\u4fa7\u8fb9\u754c\r\n            if(arr[0][j] == 1) bfs(0, j, arr);\r\n            if(arr[N-1][j] == 1) bfs(N-1, j, arr);\r\n        }\r\n\r\n        count = 0;\r\n        for(int i = 0; i < N; i++){\r\n            for(int j = 0; j < M; j++){\r\n                if(arr[i][j] == 1) bfs(i, j, arr);\r\n            }\r\n        }\r\n\r\n        System.out.println(count);\r\n    }\r\n\r\n\r\n    public static void bfs(int x, int y, int[][] arr){\r\n        Queue<int[]> queue = new LinkedList<>();\r\n        count++;\r\n        queue.add(new int[]{x,y});\r\n        arr[x][y] = 0;\r\n\r\n\r\n        while(!queue.isEmpty()){\r\n            int cur_x = queue.peek()[0];\r\n            int cur_y = queue.poll()[1];\r\n            for(int k = 0; k < 4; k++){\r\n                int next_x = cur_x + dir[k][0];\r\n                int next_y = cur_y + dir[k][1];\r\n                if(next_x < 0 || next_x >= arr.length || next_y < 0 || next_y >= arr[0].length)\r\n                    continue;\r\n                if(arr[next_x][next_y] == 1){\r\n                    count++;\r\n                    queue.add(new int[]{next_x,next_y});\r\n                    arr[next_x][next_y] = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\n"})}),"\n",(0,t.jsx)(r.h2,{id:"102-\u6c89\u6ca1\u5b64\u5c9b",children:"102. \u6c89\u6ca1\u5b64\u5c9b"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1174",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u7531 1\uff08\u9646\u5730\uff09\u548c 0\uff08\u6c34\uff09\u7ec4\u6210\u7684\u77e9\u9635\uff0c\u5c9b\u5c7f\u6307\u7684\u662f\u7531\u6c34\u5e73\u6216\u5782\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u9646\u5730\u5355\u5143\u683c\u7ec4\u6210\u7684\u533a\u57df\uff0c\u4e14\u5b8c\u5168\u88ab\u6c34\u57df\u5355\u5143\u683c\u5305\u56f4\u3002\u5b64\u5c9b\u662f\u90a3\u4e9b\u4f4d\u4e8e\u77e9\u9635\u5185\u90e8\u3001\u6240\u6709\u5355\u5143\u683c\u90fd\u4e0d\u63a5\u89e6\u8fb9\u7f18\u7684\u5c9b\u5c7f\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u73b0\u5728\u4f60\u9700\u8981\u5c06\u6240\u6709\u5b64\u5c9b\u201c\u6c89\u6ca1\u201d\uff0c\u5373\u5c06\u5b64\u5c9b\u4e2d\u7684\u6240\u6709\u9646\u5730\u5355\u5143\u683c\uff081\uff09\u8f6c\u53d8\u4e3a\u6c34\u57df\u5355\u5143\u683c\uff080\uff09\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8f93\u5165\u63cf\u8ff0\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u7b2c\u4e00\u884c\u5305\u542b\u4e24\u4e2a\u6574\u6570 N, M\uff0c\u8868\u793a\u77e9\u9635\u7684\u884c\u6570\u548c\u5217\u6570\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u4e4b\u540e N \u884c\uff0c\u6bcf\u884c\u5305\u542b M \u4e2a\u6570\u5b57\uff0c\u6570\u5b57\u4e3a 1 \u6216\u8005 0\uff0c\u8868\u793a\u5c9b\u5c7f\u7684\u5355\u5143\u683c\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.h4,{id:"dfs",children:"DFS"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'import java.util.Scanner;\r\n\r\npublic class Main{\r\n    public static int[][] dir = {{1,0},{-1,0},{0,1},{0,-1}};\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n        int[][] grid = new int[N][M];\r\n        for (int i = 0; i < N; i++){\r\n            for (int j = 0; j < M; j++){\r\n                grid[i][j] = scanner.nextInt();\r\n            }\r\n        }\r\n\r\n\r\n        for (int i = 0; i < N; i++){\r\n            if(grid[i][0] == 1) dfs(grid, i, 0);\r\n            if(grid[i][M-1] == 1) dfs(grid, i, M-1);\r\n        }\r\n\r\n        for (int j = 0; j < M; j++){\r\n            if(grid[0][j] == 1) dfs(grid, 0, j);\r\n            if(grid[N-1][j] == 1) dfs(grid, N-1, j);\r\n        }\r\n\r\n        for (int i = 0; i < N; i++){\r\n            for (int j = 0; j < M; j++){\r\n                if(grid[i][j] == 1) grid[i][j] = 0;\r\n                else if(grid[i][j] == 2) grid[i][j] = 1;\r\n            }\r\n        }\r\n\r\n        for (int i = 0; i < N; i++){\r\n            for (int j = 0; j < M; j++){\r\n                System.out.print(grid[i][j] + " ");\r\n            }\r\n            System.out.println();\r\n        }\r\n\r\n        scanner.close();\r\n\r\n    }\r\n\r\n    private static void dfs(int[][] grid, int x, int y){\r\n\r\n        grid[x][y] = 2;\r\n\r\n        for(int i = 0; i < 4; i++){\r\n            int next_x = x + dir[i][0];\r\n            int next_y = y + dir[i][1];\r\n            if(next_x >= 0 && next_x < grid.length && next_y >= 0 && next_y < grid[0].length && grid[next_x][next_y] == 1){\r\n                dfs(grid, next_x, next_y);\r\n            }\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"103-\u6c34\u6d41\u95ee\u9898",children:"103. \u6c34\u6d41\u95ee\u9898"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1175",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u73b0\u6709\u4e00\u4e2a N \xd7 M \u7684\u77e9\u9635\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u5305\u542b\u4e00\u4e2a\u6570\u503c\uff0c\u8fd9\u4e2a\u6570\u503c\u4ee3\u8868\u8be5\u4f4d\u7f6e\u7684\u76f8\u5bf9\u9ad8\u5ea6\u3002\u77e9\u9635\u7684\u5de6\u8fb9\u754c\u548c\u4e0a\u8fb9\u754c\u88ab\u8ba4\u4e3a\u662f\u7b2c\u4e00\u7ec4\u8fb9\u754c\uff0c\u800c\u77e9\u9635\u7684\u53f3\u8fb9\u754c\u548c\u4e0b\u8fb9\u754c\u88ab\u89c6\u4e3a\u7b2c\u4e8c\u7ec4\u8fb9\u754c\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u77e9\u9635\u6a21\u62df\u4e86\u4e00\u4e2a\u5730\u5f62\uff0c\u5f53\u96e8\u6c34\u843d\u5728\u4e0a\u9762\u65f6\uff0c\u6c34\u4f1a\u6839\u636e\u5730\u5f62\u7684\u503e\u659c\u5411\u4f4e\u5904\u6d41\u52a8\uff0c\u4f46\u53ea\u80fd\u4ece\u8f83\u9ad8\u6216\u7b49\u9ad8\u7684\u5730\u70b9\u6d41\u5411\u8f83\u4f4e\u6216\u7b49\u9ad8\u5e76\u4e14\u76f8\u90bb\uff08\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\uff09\u7684\u5730\u70b9\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u786e\u5b9a\u90a3\u4e9b\u5355\u5143\u683c\uff0c\u4ece\u8fd9\u4e9b\u5355\u5143\u683c\u51fa\u53d1\u7684\u6c34\u53ef\u4ee5\u8fbe\u5230\u7b2c\u4e00\u7ec4\u8fb9\u754c\u548c\u7b2c\u4e8c\u7ec4\u8fb9\u754c\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'//DFS\r\nimport java.util.Scanner;\r\n\r\npublic class Main{\r\n    public static int[][] dir = {{1,0},{-1,0},{0,1},{0,-1}};\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n        int[][] grid = new int[N][M];\r\n        for (int i = 0; i < N; i++){\r\n            for (int j = 0; j < M; j++){\r\n                grid[i][j] = scanner.nextInt();\r\n            }\r\n        }\r\n        boolean[][] visited_second = new boolean[N][M];\r\n        boolean[][] visited_first = new boolean[N][M];\r\n\r\n\r\n        for (int i = 0; i < N; i++){\r\n            dfs(grid, i, 0, visited_first, Integer.MIN_VALUE);\r\n            dfs(grid, i, M-1, visited_second, Integer.MIN_VALUE);\r\n        }\r\n\r\n        for(int j = 0; j < M; j++){\r\n            dfs(grid, N-1, j, visited_second, Integer.MIN_VALUE);\r\n            dfs(grid, 0, j, visited_first, Integer.MIN_VALUE);\r\n        }\r\n\r\n        for (int i = 0; i < N; i++){\r\n            for (int j = 0; j < M; j++){\r\n                if(visited_second[i][j] && visited_first[i][j]){\r\n                    System.out.println(i + " " + j);\r\n                }\r\n            }\r\n        }\r\n\r\n        scanner.close();\r\n\r\n    }\r\n\r\n    private static void dfs(int[][] grid, int x, int y, boolean[][] visited, int preH){\r\n        if(x < 0 || x >= grid.length || y < 0 || y >= grid[0].length || visited[x][y]) return;\r\n\r\n        if(grid[x][y] < preH) return;\r\n\r\n        visited[x][y] = true;\r\n\r\n        for(int i = 0; i < 4; i++){\r\n            int next_x = x + dir[i][0];\r\n            int next_y = y + dir[i][1];\r\n            dfs(grid, next_x, next_y, visited, grid[x][y]);\r\n        }\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"104\u5efa\u9020\u6700\u5927\u5c9b\u5c7f",children:"104.\u5efa\u9020\u6700\u5927\u5c9b\u5c7f"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1176",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u7531 1\uff08\u9646\u5730\uff09\u548c 0\uff08\u6c34\uff09\u7ec4\u6210\u7684\u77e9\u9635\uff0c\u4f60\u6700\u591a\u53ef\u4ee5\u5c06\u77e9\u9635\u4e2d\u7684\u4e00\u683c\u6c34\u53d8\u4e3a\u4e00\u5757\u9646\u5730\uff0c\u5728\u6267\u884c\u4e86\u6b64\u64cd\u4f5c\u4e4b\u540e\uff0c\u77e9\u9635\u4e2d\u6700\u5927\u7684\u5c9b\u5c7f\u9762\u79ef\u662f\u591a\u5c11\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5c9b\u5c7f\u9762\u79ef\u7684\u8ba1\u7b97\u65b9\u5f0f\u4e3a\u7ec4\u6210\u5c9b\u5c7f\u7684\u9646\u5730\u7684\u603b\u6570\u3002\u5c9b\u5c7f\u662f\u88ab\u6c34\u5305\u56f4\uff0c\u5e76\u4e14\u901a\u8fc7\u6c34\u5e73\u65b9\u5411\u6216\u5782\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u9646\u5730\u8fde\u63a5\u800c\u6210\u7684\u3002\u4f60\u53ef\u4ee5\u5047\u8bbe\u77e9\u9635\u5916\u5747\u88ab\u6c34\u5305\u56f4\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"//DFS\r\nimport java.util.Scanner;\r\n\r\npublic class Main{\r\n    public static int[][] dir = {{1,0},{-1,0},{0,1},{0,-1}};\r\n    public static int res = 0;\r\n    public static int cnt = 0;\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n        int[][] grid = new int[N][M];\r\n        for (int i = 0; i < N; i++){\r\n            for (int j = 0; j < M; j++){\r\n                grid[i][j] = scanner.nextInt();\r\n            }\r\n        }\r\n\r\n\r\n        for (int i = 0; i < N; i++){\r\n            for (int j = 0; j < M; j++){\r\n                if(grid[i][j] == 0){\r\n                    boolean[][] visited = new boolean[N][M];\r\n                    grid[i][j] = 1;\r\n                    dfs(grid, i, j, visited);\r\n                    if(cnt > res) res = cnt;\r\n                    cnt = 0;\r\n                    grid[i][j] = 0;\r\n                }\r\n            }\r\n        }\r\n\r\n        System.out.println(res == 0 ? N*M : res);\r\n\r\n        scanner.close();\r\n\r\n    }\r\n\r\n    private static void dfs(int[][] grid, int x, int y, boolean[][] visited){\r\n        if(grid[x][y] == 0 || visited[x][y]) return;\r\n\r\n        visited[x][y] = true;\r\n        cnt++;\r\n\r\n        for(int i = 0; i < 4; i++){\r\n            int next_x = x + dir[i][0];\r\n            int next_y = y + dir[i][1];\r\n            if(next_x < 0 || next_x >= grid.length || next_y < 0 || next_y >= grid[0].length) continue;\r\n\r\n            dfs(grid, next_x, next_y, visited);\r\n        }\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"110-\u5b57\u7b26\u4e32\u63a5\u9f99",children:"110. \u5b57\u7b26\u4e32\u63a5\u9f99"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1183",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u5b57\u5178 strList \u4e2d\u4ece\u5b57\u7b26\u4e32 beginStr \u548c endStr \u7684\u8f6c\u6362\u5e8f\u5217\u662f\u4e00\u4e2a\u6309\u4e0b\u8ff0\u89c4\u683c\u5f62\u6210\u7684\u5e8f\u5217\uff1a"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"\u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f beginStr\u3002"}),"\n",(0,t.jsx)(r.li,{children:"\u5e8f\u5217\u4e2d\u6700\u540e\u4e00\u4e2a\u5b57\u7b26\u4e32\u662f endStr\u3002"}),"\n",(0,t.jsx)(r.li,{children:"\u6bcf\u6b21\u8f6c\u6362\u53ea\u80fd\u6539\u53d8\u4e00\u4e2a\u5b57\u7b26\u3002"}),"\n",(0,t.jsx)(r.li,{children:"\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684\u4e2d\u95f4\u5b57\u7b26\u4e32\u5fc5\u987b\u662f\u5b57\u5178 strList \u4e2d\u7684\u5b57\u7b26\u4e32\u3002"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u4f60\u4e24\u4e2a\u5b57\u7b26\u4e32 beginStr \u548c endStr \u548c\u4e00\u4e2a\u5b57\u5178 strList\uff0c\u627e\u5230\u4ece beginStr \u5230 endStr \u7684\u6700\u77ed\u8f6c\u6362\u5e8f\u5217\u4e2d\u7684\u5b57\u7b26\u4e32\u6570\u76ee\u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u8f6c\u6362\u5e8f\u5217\uff0c\u8fd4\u56de 0\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"//DFS\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        int n = scanner.nextInt();\r\n        scanner.nextLine();\r\n        String beginStr = scanner.next();\r\n        String endStr = scanner.next();\r\n        scanner.nextLine();\r\n\r\n        List<String> Str = new ArrayList<>();\r\n        Str.add(beginStr);\r\n        Str.add(endStr);\r\n        for(int i = 0; i < n; i++){\r\n            Str.add(scanner.nextLine());\r\n        }\r\n        int cnt = dfs(Str, beginStr, endStr);\r\n\r\n        System.out.println(cnt);\r\n\r\n        scanner.close();\r\n\r\n    }\r\n\r\n    private static int dfs(List<String> Str, String beginStr, String endStr){\r\n        int len = 1;\r\n        Set<String> visited = new HashSet<>();\r\n        Set<String> set = new HashSet<>(Str);\r\n        Queue<String> queue = new LinkedList<>();\r\n        visited.add(beginStr);\r\n        queue.add(beginStr);\r\n        queue.add(null);\r\n        while(!queue.isEmpty()){\r\n            String curStr = queue.remove();\r\n\r\n            if(curStr == null){\r\n                if(!queue.isEmpty()){\r\n                    len++;\r\n                    queue.add(null);\r\n                }\r\n                continue;\r\n            }\r\n\r\n            char[] ss = curStr.toCharArray();\r\n            for(int i = 0; i < ss.length; i++){\r\n\r\n                char old = ss[i];\r\n                for(char j = 'a'; j <= 'z'; j++){\r\n                    ss[i] = j;\r\n                    String newStr = new String(ss);\r\n                    if(set.contains(newStr) && !visited.contains(newStr)){\r\n                        queue.add(newStr);\r\n                        visited.add(newStr);\r\n                        if(newStr.equals(endStr)){\r\n                            return len+1;\r\n                        }\r\n                    }\r\n                }\r\n                ss[i] = old;\r\n            }\r\n        }\r\n        return 0;\r\n    }\r\n\r\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"105\u6709\u5411\u56fe\u7684\u5b8c\u5168\u53ef\u8fbe\u6027",children:"105.\u6709\u5411\u56fe\u7684\u5b8c\u5168\u53ef\u8fbe\u6027"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1177",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u3010\u9898\u76ee\u63cf\u8ff0\u3011"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u5305\u542b N \u4e2a\u8282\u70b9\uff0c\u8282\u70b9\u7f16\u53f7\u5206\u522b\u4e3a 1\uff0c2\uff0c...\uff0cN\u3002\u73b0\u4ece 1 \u53f7\u8282\u70b9\u5f00\u59cb\uff0c\u5982\u679c\u53ef\u4ee5\u4ece 1 \u53f7\u8282\u70b9\u7684\u8fb9\u53ef\u4ee5\u5230\u8fbe\u4efb\u4f55\u8282\u70b9\uff0c\u5219\u8f93\u51fa 1\uff0c\u5426\u5219\u8f93\u51fa -1\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        List<List<Integer>> dir = new ArrayList<>();\r\n        int points = scanner.nextInt();\r\n        int edges = scanner.nextInt();\r\n        for(int i = 0; i < points; i++){\r\n            dir.add(new ArrayList<>());\r\n        }\r\n        for(int i = 0; i < edges; i++){\r\n            int a = scanner.nextInt();\r\n            int b = scanner.nextInt();\r\n            dir.get(a-1).add(b-1);\r\n        }\r\n        boolean[] visited = new boolean[points];\r\n        // dfs(dir, visited, 0);\r\n        bfs(dir, visited, 0);\r\n        for(int i = 0; i < visited.length; i++){\r\n            if(!visited[i]){\r\n                System.out.println(-1);\r\n                return;\r\n            }\r\n        }\r\n        System.out.println(1);\r\n\r\n        scanner.close();\r\n    }\r\n\r\n    private static void dfs(List<List<Integer>> dir, boolean[] visited, int start){\r\n        if(visited[start]) return;\r\n        visited[start] = true;\r\n        for(int i : dir.get(start)){\r\n            dfs(dir, visited, i);\r\n        }\r\n\r\n    }\r\n\r\n    private static void bfs(List<List<Integer>> dir, boolean[] visited, int start){\r\n        Deque<Integer> dequeue = new LinkedList<>();\r\n        dequeue.offer(start);\r\n        visited[start] = true;\r\n        while(!dequeue.isEmpty()){\r\n            int cur = dequeue.pollLast();\r\n            for(int i : dir.get(cur)){\r\n                if(!visited[i]){\r\n                    dequeue.offer(i);\r\n                    visited[i] = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"106-\u5c9b\u5c7f\u7684\u5468\u957f",children:"106. \u5c9b\u5c7f\u7684\u5468\u957f"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1178",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u7531 1\uff08\u9646\u5730\uff09\u548c 0\uff08\u6c34\uff09\u7ec4\u6210\u7684\u77e9\u9635\uff0c\u5c9b\u5c7f\u662f\u88ab\u6c34\u5305\u56f4\uff0c\u5e76\u4e14\u901a\u8fc7\u6c34\u5e73\u65b9\u5411\u6216\u5782\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u9646\u5730\u8fde\u63a5\u800c\u6210\u7684\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u4f60\u53ef\u4ee5\u5047\u8bbe\u77e9\u9635\u5916\u5747\u88ab\u6c34\u5305\u56f4\u3002\u5728\u77e9\u9635\u4e2d\u6070\u597d\u62e5\u6709\u4e00\u4e2a\u5c9b\u5c7f\uff0c\u5047\u8bbe\u7ec4\u6210\u5c9b\u5c7f\u7684\u9646\u5730\u8fb9\u957f\u90fd\u4e3a 1\uff0c\u8bf7\u8ba1\u7b97\u5c9b\u5c7f\u7684\u5468\u957f\u3002\u5c9b\u5c7f\u5185\u90e8\u6ca1\u6709\u6c34\u57df\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        int M = scanner.nextInt();\r\n        int N = scanner.nextInt();\r\n        int[][] grid = new int[M][N];\r\n        for(int i = 0; i < M; i++){\r\n            for(int j = 0; j < N; j++){\r\n                grid[i][j] = scanner.nextInt();\r\n            }\r\n        }\r\n        int[][] dir = {{-1,0},{0,1},{1,0},{0,-1}};\r\n        int count = 0;\r\n        for(int i = 0; i < M; i++){\r\n            for(int j = 0; j < N; j++){\r\n                for(int k = 0; k < 4; k++){\r\n                    if(grid[i][j] == 1){\r\n                        int next_x = i + dir[k][0];\r\n                        int next_y = j + dir[k][1];\r\n                        if(next_x < 0 || next_x >= M || next_y < 0 || next_y >= N || grid[next_x][next_y] == 0){\r\n                            count++;\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        System.out.println(count);\r\n        scanner.close();\r\n    }\r\n}\r\n\n"})}),"\n",(0,t.jsx)(r.h2,{id:"\u5e76\u67e5\u96c6\u7406\u8bba\u57fa\u7840",children:"\u5e76\u67e5\u96c6\u7406\u8bba\u57fa\u7840"}),"\n",(0,t.jsx)(r.p,{children:"\u5e76\u67e5\u96c6\u5e38\u7528\u6765\u89e3\u51b3\u8fde\u901a\u6027\u95ee\u9898\uff0c\u4e5f\u5c31\u662f\u5f53\u6211\u4eec\u9700\u8981\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u662f\u5426\u5728\u540c\u4e00\u4e2a\u96c6\u5408\u91cc\u7684\u65f6\u5019\uff0c\u6211\u4eec\u5c31\u8981\u60f3\u5230\u7528\u5e76\u67e5\u96c6\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5e76\u67e5\u96c6\u4e3b\u8981\u6709\u4e24\u4e2a\u529f\u80fd\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u5c06\u4e24\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230\u4e00\u4e2a\u96c6\u5408\u4e2d"}),"\n",(0,t.jsx)(r.li,{children:"\u5224\u65ad\u4e24\u4e2a\u5143\u7d20\u5728\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408"}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"\u539f\u7406",children:"\u539f\u7406"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"\u5982\u4f55\u5c06\u4e24\u4e2a\u5143\u7d20\u6dfb\u52a0\u5230\u540c\u4e00\u4e2a\u96c6\u5408\u4e2d\uff1f"}),"\n",(0,t.jsx)(r.p,{children:"\u53ef\u4ee5\u7528\u6709\u5411\u8fde\u901a\u56fe,\u53ea\u9700\u8981\u7528\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u6765\u8868\u793a\uff0c\u5373\uff1afather[A] = B\uff0cfather[B] = C\uff0c\u6b64\u65f6 A \u548c B \u6709\u540c\u4e00\u4e2a\u6839 C"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"\u8def\u5f84\u538b\u7f29",children:"\u8def\u5f84\u538b\u7f29"}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u5b9e\u73b0 find \u51fd\u6570\u7684\u8fc7\u7a0b\u4e2d\uff0c\u901a\u8fc7\u9012\u5f52\u7684\u65b9\u5f0f\uff0c\u4e0d\u65ad\u83b7\u53d6 father \u6570\u7ec4\u4e0b\u6807\u5bf9\u5e94\u7684\u6570\u503c\uff0c\u6700\u7ec8\u627e\u5230\u8fd9\u4e2a\u96c6\u5408\u7684\u6839\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u641c\u7d22\u8fc7\u7a0b\u50cf\u662f\u4e00\u4e2a\u591a\u53c9\u6811\u4e2d\u4ece\u53f6\u5b50\u5230\u6839\u8282\u70b9\u7684\u8fc7\u7a0b\uff0c\u5982\u56fe\uff1a"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"20230602102619",src:i(56242).A+"",width:"1058",height:"740"})}),"\n",(0,t.jsx)(r.p,{children:"\u5982\u679c\u8fd9\u68f5\u591a\u53c9\u6811\u9ad8\u5ea6\u5f88\u6df1\u7684\u8bdd\uff0c\u6bcf\u6b21 find \u51fd\u6570 \u53bb\u5bfb\u627e\u6839\u7684\u8fc7\u7a0b\u5c31\u8981\u9012\u5f52\u5f88\u591a\u6b21\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u6211\u4eec\u7684\u76ee\u7684\u53ea\u9700\u8981\u77e5\u9053\u8fd9\u4e9b\u8282\u70b9\u5728\u540c\u4e00\u4e2a\u6839\u4e0b\u5c31\u53ef\u4ee5\uff0c\u6240\u4ee5\u5bf9\u8fd9\u68f5\u591a\u53c9\u6811\u7684\u6784\u9020\u53ea\u9700\u8981\u8fd9\u6837\u5c31\u53ef\u4ee5\u4e86\uff0c\u5982\u56fe\uff1a"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"20230602103040",src:i(73013).A+"",width:"1014",height:"446"})}),"\n",(0,t.jsxs)(r.p,{children:["\u9664\u4e86\u6839\u8282\u70b9\u5176\u4ed6\u6240\u6709\u8282\u70b9\u90fd\u6302\u8f7d\u6839\u8282\u70b9\u4e0b\uff0c\u8fd9\u6837\u6211\u4eec\u5728\u5bfb\u6839\u7684\u65f6\u5019\u5c31\u5f88\u5feb\uff0c\u53ea\u9700\u8981\u4e00\u6b65\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8fbe\u5230\u8fd9\u6837\u7684\u6548\u679c\uff0c\u5c31\u9700\u8981 ",(0,t.jsx)(r.strong,{children:"\u8def\u5f84\u538b\u7f29"}),"\uff0c\u5c06\u975e\u6839\u8282\u70b9\u7684\u6240\u6709\u8282\u70b9\u76f4\u63a5\u6307\u5411\u6839\u8282\u70b9,\u53ea\u9700\u8981\u5728\u9012\u5f52\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8ba9 father[u] \u63a5\u4f4f \u9012\u5f52\u51fd\u6570 find(father[u]) \u7684\u8fd4\u56de\u7ed3\u679c\u3002"]}),"\n",(0,t.jsx)(r.h5,{id:"\u4ee3\u7801\u6a21\u677f",children:"\u4ee3\u7801\u6a21\u677f"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cpp",children:"int n = 1005; // n\u6839\u636e\u9898\u76ee\u4e2d\u8282\u70b9\u6570\u91cf\u800c\u5b9a\uff0c\u4e00\u822c\u6bd4\u8282\u70b9\u6570\u91cf\u5927\u4e00\u70b9\u5c31\u597d\r\nvector<int> father = vector<int> (n, 0); // C++\u91cc\u7684\u4e00\u79cd\u6570\u7ec4\u7ed3\u6784\r\n\r\n// \u5e76\u67e5\u96c6\u521d\u59cb\u5316\r\nvoid init() {\r\n    for (int i = 0; i < n; ++i) {\r\n        father[i] = i;\r\n    }\r\n}\r\n// \u5e76\u67e5\u96c6\u91cc\u5bfb\u6839\u7684\u8fc7\u7a0b\r\nint find(int u) {\r\n    return u == father[u] ? u : father[u] = find(father[u]); // \u8def\u5f84\u538b\u7f29\r\n}\r\n\r\n// \u5224\u65ad u \u548c v\u662f\u5426\u627e\u5230\u540c\u4e00\u4e2a\u6839\r\nbool isSame(int u, int v) {\r\n    u = find(u);\r\n    v = find(v);\r\n    return u == v;\r\n}\r\n\r\n// \u5c06v\u5408\u5e76\u5230u\u4e2d\r\nvoid join(int u, int v) {\r\n    u = find(u); // \u5bfb\u627eu\u7684\u6839\r\n    v = find(v); // \u5bfb\u627ev\u7684\u6839\r\n    if (u == v) return ; // \u5982\u679c\u53d1\u73b0\u6839\u76f8\u540c\uff0c\u5219\u8bf4\u660e\u5728\u4e00\u4e2a\u96c6\u5408\uff0c\u4e0d\u7528\u4e24\u4e2a\u8282\u70b9\u76f8\u8fde\u76f4\u63a5\u8fd4\u56de\r\n    father[v] = u;\r\n}\n"})}),"\n",(0,t.jsx)(r.h4,{id:"\u6309\u79e9rank\u5408\u5e76",children:"\u6309\u79e9\uff08rank\uff09\u5408\u5e76"}),"\n",(0,t.jsx)(r.p,{children:"rank \u8868\u793a\u6811\u7684\u9ad8\u5ea6\uff0c\u5373\u6811\u4e2d\u7ed3\u70b9\u5c42\u6b21\u7684\u6700\u5927\u503c\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u4f8b\u5982\u4e24\u4e2a\u96c6\u5408\uff08\u591a\u53c9\u6811\uff09\u9700\u8981\u5408\u5e76\uff0c\u5982\u56fe\u6240\u793a\uff1a"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"20250227_165915_203_copy",src:i(23116).A+"",width:"1088",height:"628"})}),"\n",(0,t.jsx)(r.p,{children:"\u6811 1 rank \u4e3a 2\uff0c\u6811 2 rank \u4e3a 3\uff0c\u5728 join \u51fd\u6570\u4e2d\uff0c\u4e00\u5b9a\u662f rank \u5c0f\u7684\u6811\u5408\u5165\u5230 rank \u5927\u7684\u6811\uff0c\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u6700\u540e\u5408\u6210\u7684\u6811 rank \u6700\u5c0f\uff0c\u964d\u4f4e\u5728\u6811\u4e0a\u67e5\u8be2\u7684\u8def\u5f84\u957f\u5ea6\u3002"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"image-20250227170055899",src:i(56828).A+"",width:"344",height:"235"})}),"\n",(0,t.jsx)(r.p,{children:"\u6309\u79e9\u5408\u5e76\u7684\u4ee3\u7801\u5982\u4e0b\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-cpp",children:"int n = 1005; // n\u6839\u636e\u9898\u76ee\u4e2d\u8282\u70b9\u6570\u91cf\u800c\u5b9a\uff0c\u4e00\u822c\u6bd4\u8282\u70b9\u6570\u91cf\u5927\u4e00\u70b9\u5c31\u597d\r\nvector<int> father = vector<int> (n, 0); // C++\u91cc\u7684\u4e00\u79cd\u6570\u7ec4\u7ed3\u6784\r\nvector<int> rank = vector<int> (n, 1); // \u521d\u59cb\u6bcf\u68f5\u6811\u7684\u9ad8\u5ea6\u90fd\u4e3a1\r\n\r\n// \u5e76\u67e5\u96c6\u521d\u59cb\u5316\r\nvoid init() {\r\n    for (int i = 0; i < n; ++i) {\r\n        father[i] = i;\r\n        rank[i] = 1; // \u4e5f\u53ef\u4ee5\u4e0d\u5199\r\n    }\r\n}\r\n// \u5e76\u67e5\u96c6\u91cc\u5bfb\u6839\u7684\u8fc7\u7a0b\r\nint find(int u) {\r\n    return u == father[u] ? u : find(father[u]);// \u6ce8\u610f\u8fd9\u91cc\u4e0d\u505a\u8def\u5f84\u538b\u7f29\r\n}\r\n\r\n// \u5224\u65ad u \u548c v\u662f\u5426\u627e\u5230\u540c\u4e00\u4e2a\u6839\r\nbool isSame(int u, int v) {\r\n    u = find(u);\r\n    v = find(v);\r\n    return u == v;\r\n}\r\n\r\n// \u5c06v->u \u8fd9\u6761\u8fb9\u52a0\u5165\u5e76\u67e5\u96c6\r\nvoid join(int u, int v) {\r\n    u = find(u); // \u5bfb\u627eu\u7684\u6839\r\n    v = find(v); // \u5bfb\u627ev\u7684\u6839\r\n\r\n    if (rank[u] <= rank[v]) father[u] = v; // rank\u5c0f\u7684\u6811\u5408\u5165\u5230rank\u5927\u7684\u6811\r\n    else father[v] = u;\r\n\r\n    if (rank[u] == rank[v] && u != v) rank[v]++; // \u5982\u679c\u4e24\u68f5\u6811\u9ad8\u5ea6\u76f8\u540c\uff0c\u5219v\u7684\u9ad8\u5ea6+1\uff0c\u56e0\u4e3a\u4e0a\u9762 if (rank[u] <= rank[v]) father[u] = v; \u6ce8\u610f\u662f <=\r\n}\n"})}),"\n",(0,t.jsxs)(r.p,{children:["\u6309\u79e9\u5408\u5e76\u7684\u601d\u8def\u5e76\u6ca1\u6709\u5c06\u6811\u5f62\u7ed3\u6784\u5c3d\u53ef\u80fd\u7684\u6241\u5e73\u5316\uff0c\u6240\u4ee5\u5728\u6574\u7406\u6548\u7387\u4e0a\u662f\u6ca1\u6709\u8def\u5f84\u538b\u7f29\u9ad8\u7684\uff0c",(0,t.jsx)(r.strong,{children:"\u76f4\u63a5\u4f7f\u7528\u8def\u5f84\u538b\u7f29\u7684\u5e76\u67e5\u96c6\u6a21\u677f\u5c31\u597d"}),"\u3002"]}),"\n",(0,t.jsx)(r.h3,{id:"\u590d\u6742\u5ea6\u5206\u6790",children:"\u590d\u6742\u5ea6\u5206\u6790"}),"\n",(0,t.jsx)(r.p,{children:"\u5bf9\u8def\u5f84\u538b\u7f29\u7248\u5e76\u67e5\u96c6\u6765\u505a\u5206\u6790\u3002"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a O(n) \uff0c\u7533\u8bf7\u4e00\u4e2a father \u6570\u7ec4\u3002"}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\u5982\u679c\u60f3\u7cbe\u786e\u8868\u8fbe\u51fa\u6765\u9700\u8981\u7e41\u7410\u7684\u6570\u5b66\u8bc1\u660e\uff0c\u8fd9\u91cc\u505a\u4e00\u4e2a\u7b80\u5355\u7684\u5206\u6790\u601d\u8def\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8def\u5f84\u538b\u7f29\u540e\u7684\u5e76\u67e5\u96c6\u65f6\u95f4\u590d\u6742\u5ea6\u5728 O(logn)\u4e0e O(1)\u4e4b\u95f4\uff0c\u4e14\u968f\u7740\u67e5\u8be2\u6216\u8005\u5408\u5e76\u64cd\u4f5c\u7684\u589e\u52a0\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4f1a\u8d8a\u6765\u8d8a\u8d8b\u4e8e O(1)\uff0c\u5728\u7b2c\u4e00\u6b21\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u76f8\u5f53\u4e8e\u662f n \u53c9\u6811\u4e0a\u4ece\u53f6\u5b50\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u67e5\u8be2\u8fc7\u7a0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u662f logn\uff0c\u4f46\u8def\u5f84\u538b\u7f29\u540e\uff0c\u540e\u9762\u7684\u67e5\u8be2\u64cd\u4f5c\u90fd\u662f O(1)\uff0c\u800c join \u51fd\u6570 \u548c isSame \u51fd\u6570 \u91cc\u6d89\u53ca\u7684\u67e5\u8be2\u64cd\u4f5c\u4e5f\u662f\u4e00\u6837\u7684\u8fc7\u7a0b\u3002"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"\u9898\u76ee",children:"\u9898\u76ee"}),"\n",(0,t.jsx)(r.h4,{id:"107-\u5bfb\u627e\u5b58\u5728\u7684\u8def\u5f84",children:"107. \u5bfb\u627e\u5b58\u5728\u7684\u8def\u5f84"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1179",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b n \u4e2a\u8282\u70b9\u7684\u65e0\u5411\u56fe\u4e2d\uff0c\u8282\u70b9\u7f16\u53f7\u4ece 1 \u5230 n \uff08\u542b 1 \u548c n \uff09\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u4f60\u7684\u4efb\u52a1\u662f\u5224\u65ad\u662f\u5426\u6709\u4e00\u6761\u4ece\u8282\u70b9 source \u51fa\u53d1\u5230\u8282\u70b9 destination \u7684\u8def\u5f84\u5b58\u5728\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        int points = scanner.nextInt();\r\n        int edges = scanner.nextInt();\r\n        Disjoint disjoint = new Disjoint(points+1);\r\n        for(int i = 0; i < edges; i++){\r\n            disjoint.join(scanner.nextInt(), scanner.nextInt());\r\n\r\n        }\r\n\r\n        if(disjoint.isSame(scanner.nextInt(), scanner.nextInt())){\r\n            System.out.println(1);\r\n        }\r\n        else{\r\n            System.out.println(0);\r\n        }\r\n\r\n        scanner.close();\r\n    }\r\n}\r\n\r\nclass Disjoint{\r\n    private int[] father;\r\n\r\n    public Disjoint(int n){\r\n        father = new int[n];\r\n        for(int i = 0; i < n; i++){\r\n            father[i] = i;\r\n        }\r\n    }\r\n\r\n    public int find(int x){\r\n        return father[x] == x ? x : find(father[x]);\r\n    }\r\n\r\n    public void join(int x, int y){ // x -> y\r\n        int fx = find(x);\r\n        int fy = find(y);\r\n        father[fx] = fy;\r\n    }\r\n\r\n    public boolean isSame(int x, int y){\r\n        return find(x) == find(y);\r\n    }\r\n}\r\n\n"})}),"\n",(0,t.jsx)(r.h4,{id:"108-\u5197\u4f59\u8fde\u63a5",children:"108. \u5197\u4f59\u8fde\u63a5"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1181",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u6709\u4e00\u4e2a\u56fe\uff0c\u5b83\u662f\u4e00\u68f5\u6811\uff0c\u4ed6\u662f\u62e5\u6709 n \u4e2a\u8282\u70b9\uff08\u8282\u70b9\u7f16\u53f7 1 \u5230 n\uff09\u548c n - 1 \u6761\u8fb9\u7684\u8fde\u901a\u65e0\u73af\u65e0\u5411\u56fe\uff08\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u7ebf\u5f62\u56fe\uff09\uff0c\u5982\u56fe\uff1a"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"20240905163122",src:i(58525).A+"",width:"604",height:"632"})}),"\n",(0,t.jsx)(r.p,{children:"\u73b0\u5728\u5728\u8fd9\u68f5\u6811\u4e0a\u7684\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e00\u6761\u8fb9\uff08\u4f9d\u7136\u662f n \u4e2a\u8282\u70b9\uff0c\u4f46\u6709 n \u6761\u8fb9\uff09\uff0c\u4f7f\u8fd9\u4e2a\u56fe\u53d8\u6210\u4e86\u6709\u73af\u56fe\uff0c\u5982\u56fe"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"20240905164721",src:i(40085).A+"",width:"732",height:"642"})}),"\n",(0,t.jsx)(r.p,{children:"\u5148\u8bf7\u4f60\u627e\u51fa\u5197\u4f59\u8fb9\uff0c\u5220\u9664\u540e\uff0c\u4f7f\u8be5\u56fe\u53ef\u4ee5\u91cd\u65b0\u53d8\u6210\u4e00\u68f5\u6811\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'import java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        int n = scanner.nextInt();\r\n        Disjoint disjoint = new Disjoint(n+1);\r\n        int[] last = new int[2];\r\n        int[] res = new int[2];\r\n\r\n        for(int i = 0; i < n; i++){\r\n            last[0] = scanner.nextInt();\r\n            last[1] = scanner.nextInt();\r\n\r\n            if(disjoint.isSame(last[0], last[1])){\r\n                res[0] = last[0];\r\n                res[1] = last[1];\r\n            }\r\n            else{\r\n                disjoint.join(last[0], last[1]);\r\n            }\r\n        }\r\n        System.out.println(res[0] + " " + res[1]);\r\n\r\n        scanner.close();\r\n    }\r\n}\r\n\r\nclass Disjoint{\r\n    private int[] father;\r\n\r\n    public Disjoint(int n){\r\n        father = new int[n];\r\n        for(int i = 0; i < n; i++){\r\n            father[i] = i;\r\n        }\r\n    }\r\n\r\n    public int find(int x){\r\n        return father[x] == x ? x : find(father[x]);\r\n    }\r\n\r\n    public void join(int x, int y){ // x -> y\r\n        int fx = find(x);\r\n        int fy = find(y);\r\n        father[fx] = fy;\r\n    }\r\n\r\n    public boolean isSame(int x, int y){\r\n        return find(x) == find(y);\r\n    }\r\n}\r\n\n'})}),"\n",(0,t.jsx)(r.h4,{id:"109-\u5197\u4f59\u8fde\u63a5-ii",children:"109. \u5197\u4f59\u8fde\u63a5 II"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1182",children:"\u5361\u7801\u7f51\u9898\u76ee\u94fe\u63a5\uff08ACM \u6a21\u5f0f\uff09"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u6709\u4e00\u79cd\u6709\u5411\u6811,\u8be5\u6811\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u6240\u6709\u5176\u4ed6\u8282\u70b9\u90fd\u662f\u8be5\u6839\u8282\u70b9\u7684\u540e\u7ee7\u3002\u8be5\u6811\u9664\u4e86\u6839\u8282\u70b9\u4e4b\u5916\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff0c\u800c\u6839\u8282\u70b9\u6ca1\u6709\u7236\u8282\u70b9\u3002\u6709\u5411\u6811\u62e5\u6709 n \u4e2a\u8282\u70b9\u548c n - 1 \u6761\u8fb9\u3002\u5982\u56fe\uff1a"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"20240827152106",src:i(28810).A+"",width:"328",height:"340"})}),"\n",(0,t.jsx)(r.p,{children:"\u73b0\u5728\u6709\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u6709\u5411\u56fe\u662f\u5728\u6709\u5411\u6811\u4e2d\u7684\u4e24\u4e2a\u6ca1\u6709\u76f4\u63a5\u94fe\u63a5\u7684\u8282\u70b9\u4e2d\u95f4\u6dfb\u52a0\u4e00\u6761\u6709\u5411\u8fb9\u3002\u5982\u56fe\uff1a"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"20240827152134",src:i(69557).A+"",width:"372",height:"378"})}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'import java.util.*;\r\n\r\nclass Disjoint{\r\n    private int[] father;\r\n\r\n    public Disjoint(int n){\r\n        father = new int[n];\r\n        for(int i = 0; i < n; i++){\r\n            father[i] = i;\r\n        }\r\n    }\r\n    public int find(int x){\r\n        return father[x] == x ? x : find(father[x]);\r\n    }\r\n\r\n    public void join(int x, int y){ // x -> y\r\n        int fx = find(x);\r\n        int fy = find(y);\r\n        father[fx] = fy;\r\n    }\r\n\r\n    public boolean isSame(int x, int y){\r\n        return find(x) == find(y);\r\n    }\r\n}\r\n\r\nclass Edge{\r\n    int start;\r\n    int end;\r\n\r\n    public Edge(int start, int end){\r\n        this.start = start;\r\n        this.end = end;\r\n    }\r\n}\r\n\r\nclass Node{\r\n    int val;\r\n    int in;\r\n    int out;\r\n\r\n}\r\n\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        int n = scanner.nextInt();\r\n        Disjoint disjoint = new Disjoint(n+1);\r\n        List<Edge> edges = new ArrayList<>();\r\n        Node[] nodes = new Node[n+1];\r\n        for(int i = 1; i <= n; i++){\r\n            nodes[i] = new Node();\r\n        }\r\n\r\n        Integer doubleIn = null;\r\n        for(int i = 0; i < n; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n\r\n            edges.add(new Edge(s, t));\r\n            nodes[t].in++;\r\n            if(nodes[t].in >= 2) doubleIn = t;\r\n\r\n        }\r\n\r\n        Edge res = null;\r\n        if(doubleIn != null){\r\n            List<Edge> doubleInEdges = new ArrayList<>();\r\n            for(Edge edge : edges){\r\n                if(edge.end == doubleIn){\r\n                    doubleInEdges.add(edge);\r\n                }\r\n\r\n                if(doubleInEdges.size() == 2) break;\r\n            }\r\n\r\n            Edge edge = doubleInEdges.get(1);\r\n            if(isTreeWithExclude(edges, edge, nodes)) res = edge;\r\n            else res = doubleInEdges.get(0);\r\n\r\n        }\r\n        else{\r\n            res = RemoveEdge(edges, nodes);\r\n        }\r\n\r\n\r\n        System.out.println(res.start + " " + res.end);\r\n\r\n        scanner.close();\r\n    }\r\n    private static boolean isTreeWithExclude(List<Edge> edges, Edge excludedEdge, Node[] nodes){\r\n        Disjoint disjoint = new Disjoint(nodes.length);\r\n        for(Edge edge : edges){\r\n            if(edge == excludedEdge) continue;\r\n\r\n            if(disjoint.isSame(edge.start, edge.end)){\r\n                return false;\r\n            }\r\n            disjoint.join(edge.start, edge.end);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private static Edge RemoveEdge(List<Edge> edges, Node[] nodes){\r\n        Disjoint disjoint = new Disjoint(nodes.length);\r\n        for(Edge edge : edges){\r\n            if(disjoint.isSame(edge.start, edge.end)) return edge;\r\n\r\n            disjoint.join(edge.start, edge.end);\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n\n'})}),"\n",(0,t.jsx)(r.h2,{id:"\u6700\u5c0f\u751f\u6210\u6811",children:"\u6700\u5c0f\u751f\u6210\u6811"}),"\n",(0,t.jsx)(r.h3,{id:"prim-\u7b97\u6cd5",children:"prim \u7b97\u6cd5"}),"\n",(0,t.jsx)(r.p,{children:"\u6700\u5c0f\u751f\u6210\u6811\u662f\u6240\u6709\u8282\u70b9\u7684\u6700\u5c0f\u8fde\u901a\u5b50\u56fe\uff0c\u5373\uff1a\u4ee5\u6700\u5c0f\u7684\u6210\u672c\uff08\u8fb9\u7684\u6743\u503c\uff09\u5c06\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u94fe\u63a5\u5230\u4e00\u8d77\u3002"}),"\n",(0,t.jsx)(r.p,{children:"prim \u7b97\u6cd5\u662f\u4ece\u8282\u70b9\u7684\u89d2\u5ea6\u91c7\u7528\u8d2a\u5fc3\u7684\u7b56\u7565\u6bcf\u6b21\u5bfb\u627e\u8ddd\u79bb\u6700\u5c0f\u751f\u6210\u6811\u6700\u8fd1\u7684\u8282\u70b9\u5e76\u52a0\u5165\u5230\u6700\u5c0f\u751f\u6210\u6811\u4e2d\u3002"}),"\n",(0,t.jsx)(r.p,{children:"prim \u7b97\u6cd5\u6838\u5fc3\u5c31\u662f\u4e09\u6b65\uff1a"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"\u9009\u8ddd\u79bb\u751f\u6210\u6811\u6700\u8fd1\u8282\u70b9"}),"\n",(0,t.jsx)(r.li,{children:"\u6700\u8fd1\u8282\u70b9\u52a0\u5165\u751f\u6210\u6811"}),"\n",(0,t.jsx)(r.li,{children:"\u66f4\u65b0\u975e\u751f\u6210\u6811\u8282\u70b9\u5230\u751f\u6210\u6811\u7684\u8ddd\u79bb\uff08\u5373\u66f4\u65b0 minDist \u6570\u7ec4\uff09"}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"kruskal-\u7b97\u6cd5",children:"kruskal \u7b97\u6cd5"}),"\n",(0,t.jsxs)(r.p,{children:["prim \u7b97\u6cd5\u662f",(0,t.jsx)(r.strong,{children:"\u7ef4\u62a4\u8282\u70b9"}),"\u7684\u96c6\u5408\uff0c\u800c Kruskal \u662f",(0,t.jsx)(r.strong,{children:"\u7ef4\u62a4\u8fb9"}),"\u7684\u96c6\u5408"]}),"\n",(0,t.jsx)(r.p,{children:"kruscal \u7684\u601d\u8def\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u8fb9\u7684\u6743\u503c\u6392\u5e8f\uff0c\u56e0\u4e3a\u8981\u4f18\u5148\u9009\u6700\u5c0f\u7684\u8fb9\u52a0\u5165\u5230\u751f\u6210\u6811\u91cc"}),"\n",(0,t.jsxs)(r.li,{children:["\u904d\u5386\u6392\u5e8f\u540e\u7684\u8fb9\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u5982\u679c\u8fb9\u9996\u5c3e\u7684\u4e24\u4e2a\u8282\u70b9\u5728\u540c\u4e00\u4e2a\u96c6\u5408\uff0c\u8bf4\u660e\u5982\u679c\u8fde\u4e0a\u8fd9\u6761\u8fb9\u56fe\u4e2d\u4f1a\u51fa\u73b0\u73af"}),"\n",(0,t.jsx)(r.li,{children:"\u5982\u679c\u8fb9\u9996\u5c3e\u7684\u4e24\u4e2a\u8282\u70b9\u4e0d\u5728\u540c\u4e00\u4e2a\u96c6\u5408\uff0c\u52a0\u5165\u5230\u6700\u5c0f\u751f\u6210\u6811\uff0c\u5e76\u628a\u4e24\u4e2a\u8282\u70b9\u52a0\u5165\u540c\u4e00\u4e2a\u96c6\u5408"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u8282\u70b9\u6570\u91cf\u56fa\u5b9a\u7684\u60c5\u51b5\u4e0b\uff0c\u56fe\u4e2d\u7684\u8fb9\u8d8a\u5c11\uff0cKruskal \u9700\u8981\u904d\u5386\u7684\u8fb9\u4e5f\u5c31\u8d8a\u5c11\u3002\u800c prim \u7b97\u6cd5\u662f\u5bf9\u8282\u70b9\u8fdb\u884c\u64cd\u4f5c\u7684\uff0c\u8282\u70b9\u6570\u91cf\u8d8a\u5c11\uff0cprim \u7b97\u6cd5\u6548\u7387\u5c31\u8d8a\u4f18\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u6240\u4ee5\u5728 \u7a00\u758f\u56fe\u4e2d\uff0c\u7528 Kruskal \u66f4\u4f18\u3002 \u5728\u7a20\u5bc6\u56fe\u4e2d\uff0c\u7528 prim \u7b97\u6cd5\u66f4\u4f18\u3002"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"\u8fb9\u6570\u91cf\u8f83\u5c11\u4e3a\u7a00\u758f\u56fe\uff0c\u63a5\u8fd1\u6216\u7b49\u4e8e\u5b8c\u5168\u56fe\uff08\u6240\u6709\u8282\u70b9\u7686\u76f8\u8fde\uff09\u4e3a\u7a20\u5bc6\u56fe"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Prim \u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(n^2)\uff0c\u5176\u4e2d n \u4e3a\u8282\u70b9\u6570\u91cf\uff0c\u5b83\u7684\u8fd0\u884c\u6548\u7387\u548c\u56fe\u4e2d\u8fb9\u6811\u65e0\u5173\uff0c\u9002\u7528\u7a20\u5bc6\u56fe\u3002Kruskal \u7b97\u6cd5 \u65f6\u95f4\u590d\u6742\u5ea6 \u4e3a nlogn\uff0c\u5176\u4e2d n \u4e3a\u8fb9\u7684\u6570\u91cf\uff0c\u9002\u7528\u7a00\u758f\u56fe\u3002"}),"\n",(0,t.jsx)(r.h3,{id:"\u9898\u76ee-1",children:"\u9898\u76ee"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1053",children:"\u5361\u7801\u7f51\uff1a53. \u5bfb\u5b9d"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u4e16\u754c\u7684\u67d0\u4e2a\u533a\u57df\uff0c\u6709\u4e00\u4e9b\u5206\u6563\u7684\u795e\u79d8\u5c9b\u5c7f\uff0c\u6bcf\u4e2a\u5c9b\u5c7f\u4e0a\u90fd\u6709\u4e00\u79cd\u73cd\u7a00\u7684\u8d44\u6e90\u6216\u8005\u5b9d\u85cf\u3002\u56fd\u738b\u6253\u7b97\u5728\u8fd9\u4e9b\u5c9b\u5c7f\u4e0a\u5efa\u516c\u8def\uff0c\u65b9\u4fbf\u8fd0\u8f93\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u4e0d\u540c\u5c9b\u5c7f\u4e4b\u95f4\uff0c\u8def\u9014\u8ddd\u79bb\u4e0d\u540c\uff0c\u56fd\u738b\u5e0c\u671b\u4f60\u53ef\u4ee5\u89c4\u5212\u5efa\u516c\u8def\u7684\u65b9\u6848\uff0c\u5982\u4f55\u53ef\u4ee5\u4ee5\u6700\u77ed\u7684\u603b\u516c\u8def\u8ddd\u79bb\u5c06\u6240\u6709\u5c9b\u5c7f\u8054\u901a\u8d77\u6765\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u5f20\u5730\u56fe\uff0c\u5176\u4e2d\u5305\u62ec\u4e86\u6240\u6709\u7684\u5c9b\u5c7f\uff0c\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u8ddd\u79bb\u3002\u4ee5\u6700\u5c0f\u5316\u516c\u8def\u5efa\u8bbe\u957f\u5ea6\uff0c\u786e\u4fdd\u53ef\u4ee5\u94fe\u63a5\u5230\u6240\u6709\u5c9b\u5c7f\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// prim\u7b97\u6cd5\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n        int N = scanner.nextInt();\r\n        int E = scanner.nextInt();\r\n\r\n        int[][] edges = new int[N+1][N+1];\r\n        for(int i = 1; i <= N; i++){\r\n            Arrays.fill(edges[i], 10001); // \u5c06\u6240\u6709\u8fb9\u6743\u521d\u59cb\u5316\u4e3a10001\uff0c\u8868\u793a\u4e0d\u5b58\u5728\u7684\u8fb9\r\n        }\r\n\r\n        for(int i = 0; i < E; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int w = scanner.nextInt();\r\n\r\n            edges[s][t] = w;\r\n            edges[t][s] = w;\r\n\r\n        }\r\n\r\n        int[] minDist = new int[N+1];\r\n        Arrays.fill(minDist, 10001);\r\n\r\n        boolean[] isIntree = new boolean[N+1];\r\n\r\n\r\n        // prim\u7b97\u6cd5-\u4e3b\u5faa\u73af\r\n        for(int i = 1; i < N; i++){\r\n            int cur = -1;\r\n            int min = Integer.MAX_VALUE;\r\n\r\n            for(int j = 1; j <= N; j++){ // \u5bfb\u627e\u672a\u52a0\u5165\u6811\u7684\u8282\u70b9\u4e2d\u8ddd\u79bb\u6700\u8fd1\u7684\u8282\u70b9\r\n                if(!isIntree[j] && minDist[j] < min){\r\n                    cur = j;\r\n                    min = minDist[j];\r\n                }\r\n            }\r\n\r\n            isIntree[cur] = true;\r\n            for(int j = 1; j <= N; j++){ // \u66f4\u65b0\u5404\u4e2a\u8282\u70b9\u8ddd\u79bb\u751f\u6210\u6811\u7684\u6700\u5c0f\u8ddd\u79bb\r\n                if(!isIntree[j] && edges[cur][j] < minDist[j]){\r\n                    minDist[j] = edges[cur][j];\r\n                }\r\n            }\r\n        }\r\n\r\n        int res = 0;\r\n        for(int i = 2; i <= N; i++){\r\n            res += minDist[i];\r\n        }\r\n\r\n        System.out.println(res);\r\n\r\n        scanner.close();\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// kruskal\u7b97\u6cd5\r\nimport java.util.*;\r\n\r\nclass Edge{\r\n    int start;\r\n    int end;\r\n    int weight;\r\n\r\n    public Edge(int start, int end, int weight){\r\n        this.start = start;\r\n        this.end = end;\r\n        this.weight = weight;\r\n    }\r\n}\r\n\r\nclass DisjointSet{\r\n    private int[] father; // \u8bb0\u5f55\u5404\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\r\n\r\n    public DisjointSet(int n){\r\n        father = new int[n];\r\n        for(int i = 0; i < n; i++){\r\n            father[i] = i;\r\n        }\r\n    }\r\n\r\n    public int find(int x){\r\n        return x == father[x]? x : (father[x] = find(father[x]));\r\n    }\r\n\r\n    public void join(int x, int y){\r\n        father[find(x)] = find(y);\r\n    }\r\n\r\n    public boolean isSameSet(int x, int y){\r\n        return find(x) == find(y);\r\n    }\r\n}\r\n\r\n\r\npublic class Main{\r\n\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int E = scanner.nextInt();\r\n        DisjointSet disjointSet = new DisjointSet(N+1);\r\n\r\n        List<Edge> edges = new ArrayList<>();\r\n\r\n        for(int i = 0; i < E; i++){\r\n            int start = scanner.nextInt();\r\n            int end = scanner.nextInt();\r\n            int weight = scanner.nextInt();\r\n            edges.add(new Edge(start, end, weight));\r\n        }\r\n\r\n        edges.sort(Comparator.comparingInt(a -> a.weight)); // \u6309\u6743\u91cd\u6392\u5e8f\r\n\r\n        int res = 0;\r\n        for(Edge edge : edges){ //kruskal\u7b97\u6cd5\r\n            if(!disjointSet.isSameSet(edge.start, edge.end)){\r\n                res += edge.weight;\r\n                disjointSet.join(edge.start, edge.end);\r\n            }\r\n        }\r\n\r\n        System.out.println(res);\r\n\r\n        scanner.close();\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"\u62d3\u6251\u6392\u5e8f\u7cbe\u8bb2",children:"\u62d3\u6251\u6392\u5e8f\u7cbe\u8bb2"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u51fa\u4e00\u4e2a \u6709\u5411\u56fe\uff0c\u628a\u8fd9\u4e2a\u6709\u5411\u56fe\u8f6c\u6210\u7ebf\u6027\u7684\u6392\u5e8f \u5c31\u53eb\u62d3\u6251\u6392\u5e8f\u3002\u62d3\u6251\u6392\u5e8f\u4e5f\u8981\u68c0\u6d4b\u8fd9\u4e2a\u6709\u5411\u56fe \u662f\u5426\u6709\u73af\uff0c\u5373\u5b58\u5728\u5faa\u73af\u4f9d\u8d56\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u8fd9\u79cd\u60c5\u51b5\u662f\u4e0d\u80fd\u505a\u7ebf\u6027\u6392\u5e8f\u7684\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5176\u5b9e\u53ea\u8981\u80fd\u5728\u628a \u6709\u5411\u65e0\u73af\u56fe \u8fdb\u884c\u7ebf\u6027\u6392\u5e8f \u7684\u7b97\u6cd5 \u90fd\u53ef\u4ee5\u53eb\u505a \u62d3\u6251\u6392\u5e8f\u3002"}),"\n",(0,t.jsxs)(r.p,{children:["\u5b9e\u73b0\u62d3\u6251\u6392\u5e8f\u7684\u7b97\u6cd5\u6709\u4e24\u79cd\uff1a",(0,t.jsx)(r.strong,{children:"\u5361\u6069\u7b97\u6cd5"}),"\uff08BFS\uff09\u548c DFS"]}),"\n",(0,t.jsx)(r.h3,{id:"\u9898\u76ee-2",children:"\u9898\u76ee"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1191",children:"\u5361\u7801\u7f51\uff1a117. \u8f6f\u4ef6\u6784\u5efa"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u67d0\u4e2a\u5927\u578b\u8f6f\u4ef6\u9879\u76ee\u7684\u6784\u5efa\u7cfb\u7edf\u62e5\u6709 N \u4e2a\u6587\u4ef6\uff0c\u6587\u4ef6\u7f16\u53f7\u4ece 0 \u5230 N - 1\uff0c\u5728\u8fd9\u4e9b\u6587\u4ef6\u4e2d\uff0c\u67d0\u4e9b\u6587\u4ef6\u4f9d\u8d56\u4e8e\u5176\u4ed6\u6587\u4ef6\u7684\u5185\u5bb9\uff0c\u8fd9\u610f\u5473\u7740\u5982\u679c\u6587\u4ef6 A \u4f9d\u8d56\u4e8e\u6587\u4ef6 B\uff0c\u5219\u5fc5\u987b\u5728\u5904\u7406\u6587\u4ef6 A \u4e4b\u524d\u5904\u7406\u6587\u4ef6 B \uff080 <= A, B <= N - 1\uff09\u3002\u8bf7\u7f16\u5199\u4e00\u4e2a\u7b97\u6cd5\uff0c\u7528\u4e8e\u786e\u5b9a\u6587\u4ef6\u5904\u7406\u7684\u987a\u5e8f\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'import java.util.*;\r\n\r\npublic class Main{\r\n\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int E = scanner.nextInt();\r\n        List<List<Integer>> graph = new ArrayList<>();\r\n        int[] inDegree = new int[N]; //\u8bb0\u5f55\u6bcf\u4e2a\u8282\u70b9\u7684\u5165\u5ea6\r\n        List<Integer> res = new ArrayList<>();\r\n\r\n        for(int i = 0; i < N; i++){\r\n            graph.add(new ArrayList<>());\r\n        }\r\n\r\n        for(int i = 0; i < E; i++){\r\n            int start = scanner.nextInt();\r\n            int end = scanner.nextInt();\r\n            inDegree[end]++;\r\n            graph.get(start).add(end);\r\n        }\r\n\r\n        Deque<Integer> deque = new LinkedList<>();\r\n        for(int i = 0; i < N; i++){\r\n            if(inDegree[i] == 0){\r\n                deque.offer(i);\r\n            }\r\n        }\r\n\r\n        while(!deque.isEmpty()){\r\n            int cur = deque.poll();\r\n            res.add(cur);\r\n\r\n            for(int next : graph.get(cur)){\r\n                inDegree[next]--;\r\n                if(inDegree[next] == 0){\r\n                    deque.offer(next);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(res.size() != N){ //\u6709\u73af\r\n            System.out.println(-1);\r\n        }\r\n        else{\r\n            for(int i = 0; i < N; i++){\r\n                if(i == N - 1){\r\n                    System.out.print(res.get(i));\r\n                }\r\n                else System.out.print(res.get(i) + " ");\r\n\r\n            }\r\n        }\r\n\r\n        scanner.close();\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"dijkstra",children:"dijkstra"}),"\n",(0,t.jsx)(r.p,{children:"dijkstra \u7b97\u6cd5\uff1a\u5728\u6709\u6743\u56fe\uff08\u6743\u503c\u975e\u8d1f\u6570\uff09\u4e2d\u6c42\u4ece\u8d77\u70b9\u5230\u5176\u4ed6\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\u3002"}),"\n",(0,t.jsxs)(r.p,{children:["\u5bf9\u4e8e\u8d1f\u6743\u503c\u7684\u51fa\u73b0\uff0c\u9488\u5bf9\u67d0\u4e00\u4e2a\u573a\u666f\u4e0d\u65ad\u53bb\u4fee\u6539 dijkstra \u7684\u4ee3\u7801\uff0c",(0,t.jsx)(r.strong,{children:"\u4f46\u6700\u7ec8\u4f1a\u53d1\u73b0\u53ea\u662f \u62c6\u4e86\u4e1c\u5899\u8865\u897f\u5899"}),"\uff0c\u5bf9 dijkstra \u7684\u8865\u5145\u903b\u8f91\u53ea\u80fd\u6ee1\u8db3\u67d0\u7279\u5b9a\u573a\u666f\u6700\u77ed\u8def\u6c42\u89e3\u3002"]}),"\n",(0,t.jsx)(r.p,{children:"dijkstra \u7b97\u6cd5\u7684\u6ce8\u610f\u70b9\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"dijkstra \u7b97\u6cd5\u53ef\u4ee5\u540c\u65f6\u6c42\u8d77\u70b9\u5230\u6240\u6709\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84"}),"\n",(0,t.jsx)(r.li,{children:"\u6743\u503c\u4e0d\u80fd\u4e3a\u8d1f\u6570"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"dijkstra \u7b97\u6cd5\u7684\u6b65\u9aa4\uff1a"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsx)(r.li,{children:"\u9009\u62e9\u79bb\u6e90\u70b9\u8fd1\u4e14\u672a\u88ab\u8bbf\u95ee\u8fc7\u7684\u8282\u70b9"}),"\n",(0,t.jsx)(r.li,{children:"\u5c06\u8be5\u8282\u70b9\u6807\u8bb0\u4e3a\u5df2\u8bbf\u95ee"}),"\n",(0,t.jsx)(r.li,{children:"\u66f4\u65b0\u672a\u8bbf\u95ee\u8282\u70b9\u5230\u6e90\u70b9\u7684\u8ddd\u79bb\uff08\u5373\u66f4\u65b0 minDist \u6570\u7ec4\uff09"}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["prim \u548c dijkstra \u5f88\u7c7b\u4f3c\uff0c\u4f46\u662f dijkstra \u7b97\u6cd5\u7684\u5b9e\u73b0\u66f4\u52a0\u590d\u6742\u3002",(0,t.jsx)(r.strong,{children:"prim \u662f\u6c42\u975e\u8bbf\u95ee\u8282\u70b9\u5230\u6700\u5c0f\u751f\u6210\u6811\u7684\u6700\u5c0f\u8ddd\u79bb\uff0c\u800c dijkstra \u662f\u6c42\u975e\u8bbf\u95ee\u8282\u70b9\u5230\u6e90\u70b9\u7684\u6700\u5c0f\u8ddd\u79bb"}),"\u3002"]}),"\n",(0,t.jsx)(r.h3,{id:"\u9898\u76ee-3",children:"\u9898\u76ee"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1047",children:"\u5361\u7801\u7f51\uff1a47. \u53c2\u52a0\u79d1\u5b66\u5927\u4f1a"})}),"\n",(0,t.jsx)(r.p,{children:"\u3010\u9898\u76ee\u63cf\u8ff0\u3011"}),"\n",(0,t.jsx)(r.p,{children:"\u5c0f\u660e\u662f\u4e00\u4f4d\u79d1\u5b66\u5bb6\uff0c\u4ed6\u9700\u8981\u53c2\u52a0\u4e00\u573a\u91cd\u8981\u7684\u56fd\u9645\u79d1\u5b66\u5927\u4f1a\uff0c\u4ee5\u5c55\u793a\u81ea\u5df1\u7684\u6700\u65b0\u7814\u7a76\u6210\u679c\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5c0f\u660e\u7684\u8d77\u70b9\u662f\u7b2c\u4e00\u4e2a\u8f66\u7ad9\uff0c\u7ec8\u70b9\u662f\u6700\u540e\u4e00\u4e2a\u8f66\u7ad9\u3002\u7136\u800c\uff0c\u9014\u4e2d\u7684\u5404\u4e2a\u8f66\u7ad9\u4e4b\u95f4\u7684\u9053\u8def\u72b6\u51b5\u3001\u4ea4\u901a\u62e5\u5835\u7a0b\u5ea6\u4ee5\u53ca\u53ef\u80fd\u7684\u81ea\u7136\u56e0\u7d20\uff08\u5982\u5929\u6c14\u53d8\u5316\uff09\u7b49\u4e0d\u540c\uff0c\u8fd9\u4e9b\u56e0\u7d20\u90fd\u4f1a\u5f71\u54cd\u6bcf\u6761\u8def\u5f84\u7684\u901a\u884c\u65f6\u95f4\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5c0f\u660e\u5e0c\u671b\u80fd\u9009\u62e9\u4e00\u6761\u82b1\u8d39\u65f6\u95f4\u6700\u5c11\u7684\u8def\u7ebf\uff0c\u4ee5\u786e\u4fdd\u4ed6\u80fd\u591f\u5c3d\u5feb\u5230\u8fbe\u76ee\u7684\u5730\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"//\u6734\u7d20\u7248\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n\r\n        int[][] graph = new int[N+1][N+1];\r\n        for(int i = 1; i <= N; i++) Arrays.fill(graph[i], Integer.MAX_VALUE);\r\n\r\n        for(int i = 0; i < M; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int val = scanner.nextInt();\r\n            graph[s][t] = val;\r\n        }\r\n\r\n        int start = 1;\r\n        int end = N;\r\n\r\n        int[] minDist = new int[N+1];\r\n        Arrays.fill(minDist, Integer.MAX_VALUE);\r\n        minDist[start] = 0;\r\n\r\n        boolean[] visited = new boolean[N+1];\r\n        for(int i = 1; i <= N; i++){\r\n            int min = Integer.MAX_VALUE;\r\n            int cur = -1;\r\n\r\n            for(int j = 1; j <= N; j++){\r\n                if(!visited[j] && minDist[j] < min){\r\n                    min = minDist[j];\r\n                    cur = j;\r\n                }\r\n            }\r\n\r\n            if(cur == -1) break;\r\n            visited[cur] = true;\r\n\r\n            for(int j = 1; j <= N; j++){\r\n                if(!visited[j] && graph[cur][j] != Integer.MAX_VALUE && graph[cur][j] + minDist[cur] < minDist[j]){ //\u975e\u8bbf\u95ee\u8282\u70b9\u662f\u56e0\u4e3a\u8def\u5f84\u4e3a\u6b63\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u6392\u9664\r\n                    minDist[j] = graph[cur][j] + minDist[cur];\r\n                }\r\n            }\r\n        }\r\n\r\n        if(minDist[end] == Integer.MAX_VALUE) System.out.println(-1);\r\n        else System.out.println(minDist[end]);\r\n        scanner.close();\r\n\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// \u5806\u4f18\u5316\u7248\uff0c\u81ea\u52a8\u6392\u5e8f\uff08PriorityQueue\uff09\r\nimport java.util.*;\r\n\r\nclass Edge{\r\n    int to;\r\n    int val;\r\n    public Edge(int to, int val){\r\n        this.to = to;\r\n        this.val = val;\r\n    }\r\n}\r\n\r\nclass Pair<U, V>{\r\n    public final U first;\r\n    public final V second;\r\n    public Pair(U first, V second){\r\n        this.first = first;\r\n        this.second = second;\r\n    }\r\n}\r\n\r\nclass MyComparator implements Comparator<Pair<Integer, Integer>>{\r\n    @Override\r\n    public int compare(Pair<Integer, Integer> a, Pair<Integer, Integer> b){\r\n        return Integer.compare(a.second, b.second);\r\n    }\r\n}\r\n\r\n\r\npublic class Main{\r\n\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n\r\n        List<List<Edge>> graph = new ArrayList<>();\r\n        for(int i = 0; i < N+1; i++) graph.add(new ArrayList<>());\r\n\r\n        for(int i = 0; i < M; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int val = scanner.nextInt();\r\n            graph.get(s).add(new Edge(t, val));\r\n        }\r\n\r\n\r\n        int start = 1;\r\n        int end = N;\r\n        int[] minDist = new int[N+1];\r\n        Arrays.fill(minDist, Integer.MAX_VALUE);\r\n        minDist[start] = 0;\r\n\r\n        boolean[] visited = new boolean[N+1];\r\n\r\n        PriorityQueue<Pair<Integer, Integer>> pq = new PriorityQueue<>(new MyComparator());\r\n\r\n        pq.offer(new Pair<>(start, 0));\r\n\r\n        while(!pq.isEmpty()){\r\n            Pair<Integer, Integer> curr = pq.poll();\r\n\r\n            if(visited[curr.first]) continue;\r\n\r\n            visited[curr.first] = true; // \u786e\u5b9a\u4e86\u8be5\u70b9w\r\n\r\n            for(Edge e : graph.get(curr.first)){\r\n                if(!visited[e.to] && minDist[e.to] > minDist[curr.first] + e.val){\r\n                    minDist[e.to] = minDist[curr.first] + e.val;\r\n                    pq.offer(new Pair<>(e.to, minDist[e.to]));\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if(minDist[end] == Integer.MAX_VALUE) System.out.println(-1);\r\n        else System.out.println(minDist[end]);\r\n\r\n        scanner.close();\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"bellman_ford-\u7b97\u6cd5",children:"Bellman_ford \u7b97\u6cd5"}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u6c42\u5355\u6e90\u6700\u77ed\u8def\u7684\u65b9\u6cd5\u4e2d\uff0c\u4f7f\u7528 dijkstra \u7684\u8bdd\uff0c\u5219\u8981\u6c42\u56fe\u4e2d\u8fb9\u7684\u6743\u503c\u90fd\u4e3a\u6b63\u6570\u3002"}),"\n",(0,t.jsxs)(r.p,{children:["\u5e26",(0,t.jsx)(r.strong,{children:"\u8d1f\u6743\u503c"}),"\u7684\u5355\u6e90\u6700\u77ed\u8def\u95ee\u9898\uff0c\u6b64\u65f6\u5c31\u8f6e\u5230 Bellman_ford \u767b\u573a\u4e86"]}),"\n",(0,t.jsxs)(r.p,{children:["Bellman_ford \u7b97\u6cd5\u7684\u6838\u5fc3\u601d\u60f3\u662f",(0,t.jsx)(r.strong,{children:"\u5bf9\u6240\u6709\u8fb9\u8fdb\u884c\u677e\u5f1b n-1 \u6b21\u64cd\u4f5c"}),"\uff08n \u4e3a\u8282\u70b9\u6570\u91cf\uff09\uff0c\u4ece\u800c\u6c42\u5f97\u76ee\u6807\u6700\u77ed\u8def\u3002"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Bellman_ford \u961f\u5217\u4f18\u5316\u7b97\u6cd5"})}),"\n",(0,t.jsx)(r.p,{children:"\u53ea\u9700\u8981\u5bf9 \u4e0a\u4e00\u6b21\u677e\u5f1b\u7684\u65f6\u5019\u66f4\u65b0\u8fc7\u7684\u8282\u70b9\u4f5c\u4e3a\u51fa\u53d1\u8282\u70b9\u6240\u8fde\u63a5\u7684\u8fb9 \u8fdb\u884c\u677e\u5f1b\u5c31\u591f\u4e86\u3002"}),"\n",(0,t.jsx)(r.h3,{id:"\u9898\u76ee-4",children:"\u9898\u76ee"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1152",children:"\u5361\u7801\u7f51\uff1a94. \u57ce\u5e02\u95f4\u8d27\u7269\u8fd0\u8f93 I"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u67d0\u56fd\u4e3a\u4fc3\u8fdb\u57ce\u5e02\u95f4\u7ecf\u6d4e\u4ea4\u6d41\uff0c\u51b3\u5b9a\u5bf9\u8d27\u7269\u8fd0\u8f93\u63d0\u4f9b\u8865\u8d34\u3002\u5171\u6709 n \u4e2a\u7f16\u53f7\u4e3a 1 \u5230 n \u7684\u57ce\u5e02\uff0c\u901a\u8fc7\u9053\u8def\u7f51\u7edc\u8fde\u63a5\uff0c\u7f51\u7edc\u4e2d\u7684\u9053\u8def\u4ec5\u5141\u8bb8\u4ece\u67d0\u4e2a\u57ce\u5e02\u5355\u5411\u901a\u884c\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\uff0c\u4e0d\u80fd\u53cd\u5411\u901a\u884c\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u7f51\u7edc\u4e2d\u7684\u9053\u8def\u90fd\u6709\u5404\u81ea\u7684\u8fd0\u8f93\u6210\u672c\u548c\u653f\u5e9c\u8865\u8d34\uff0c\u9053\u8def\u7684\u6743\u503c\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a\u8fd0\u8f93\u6210\u672c - \u653f\u5e9c\u8865\u8d34\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u6743\u503c\u4e3a\u6b63\u8868\u793a\u6263\u9664\u4e86\u653f\u5e9c\u8865\u8d34\u540e\u8fd0\u8f93\u8d27\u7269\u4ecd\u9700\u652f\u4ed8\u7684\u8d39\u7528\uff1b\u6743\u503c\u4e3a\u8d1f\u5219\u8868\u793a\u653f\u5e9c\u7684\u8865\u8d34\u8d85\u8fc7\u4e86\u652f\u51fa\u7684\u8fd0\u8f93\u6210\u672c\uff0c\u5b9e\u9645\u8868\u73b0\u4e3a\u8fd0\u8f93\u8fc7\u7a0b\u4e2d\u8fd8\u80fd\u8d5a\u53d6\u4e00\u5b9a\u7684\u6536\u76ca\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8bf7\u627e\u51fa\u4ece\u57ce\u5e02 1 \u5230\u57ce\u5e02 n \u7684\u6240\u6709\u53ef\u80fd\u8def\u5f84\u4e2d\uff0c\u7efc\u5408\u653f\u5e9c\u8865\u8d34\u540e\u7684\u6700\u4f4e\u8fd0\u8f93\u6210\u672c\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5982\u679c\u6700\u4f4e\u8fd0\u8f93\u6210\u672c\u662f\u4e00\u4e2a\u8d1f\u6570\uff0c\u5b83\u8868\u793a\u5728\u9075\u5faa\u6700\u4f18\u8def\u5f84\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd0\u8f93\u8fc7\u7a0b\u4e2d\u53cd\u800c\u80fd\u591f\u5b9e\u73b0\u76c8\u5229\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u57ce\u5e02 1 \u5230\u57ce\u5e02 n \u4e4b\u95f4\u53ef\u80fd\u4f1a\u51fa\u73b0\u6ca1\u6709\u8def\u5f84\u7684\u60c5\u51b5\uff0c\u540c\u65f6\u4fdd\u8bc1\u9053\u8def\u7f51\u7edc\u4e2d\u4e0d\u5b58\u5728\u4efb\u4f55\u8d1f\u6743\u56de\u8def\u3002"}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsx)(r.p,{children:"\u8d1f\u6743\u56de\u8def\u662f\u6307\u4e00\u7cfb\u5217\u9053\u8def\u7684\u603b\u6743\u503c\u4e3a\u8d1f\uff0c\u8fd9\u6837\u7684\u56de\u8def\u4f7f\u5f97\u901a\u8fc7\u53cd\u590d\u7ecf\u8fc7\u56de\u8def\u4e2d\u7684\u9053\u8def\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u65e0\u9650\u5730\u51cf\u5c11\u603b\u6210\u672c\u6216\u65e0\u9650\u5730\u589e\u52a0\u603b\u6536\u76ca\u3002"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'import java.util.*;\r\n\r\nclass Edge{\r\n    int from;\r\n    int to;\r\n    int val;\r\n    public Edge(int from, int to, int val){\r\n        this.from = from;\r\n        this.to = to;\r\n        this.val = val;\r\n    }\r\n}\r\n\r\n\r\npublic class Main{\r\n\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n\r\n        List<Edge> graph = new ArrayList<>();\r\n\r\n        for(int i = 0; i < M; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int val = scanner.nextInt();\r\n            graph.add(new Edge(s, t, val));\r\n        }\r\n\r\n        int[] minDist = new int[N+1];\r\n        Arrays.fill(minDist, Integer.MAX_VALUE);\r\n        minDist[1] = 0;\r\n\r\n        for(int i = 1; i < N; i++){ // \u677e\u5f1b(N-1)\u6b21\r\n\r\n            for(Edge edge : graph){\r\n                if(minDist[edge.from] != Integer.MAX_VALUE)\r\n                    minDist[edge.to] = Math.min(minDist[edge.to], minDist[edge.from] + edge.val);\r\n            }\r\n        }\r\n\r\n        if(minDist[N] == Integer.MAX_VALUE)\r\n            System.out.println("unconnected");\r\n        else\r\n            System.out.println(minDist[N]);\r\n\r\n        scanner.close();\r\n\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'//Bellman_ford \u961f\u5217\u4f18\u5316\u7b97\u6cd5\r\nimport java.util.*;\r\n\r\nclass Edge{\r\n    int from;\r\n    int to;\r\n    int val;\r\n    public Edge(int from, int to, int val){\r\n        this.from = from;\r\n        this.to = to;\r\n        this.val = val;\r\n    }\r\n}\r\n\r\npublic class Main{\r\n\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n\r\n        List<List<Edge>> graph = new ArrayList<>();\r\n        for(int i = 0; i <= N; i++) graph.add(new ArrayList<>());\r\n\r\n        for(int i = 0; i < M; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int val = scanner.nextInt();\r\n            graph.get(s).add(new Edge(s, t, val));\r\n        }\r\n\r\n        int[] minDist = new int[N+1];\r\n        Arrays.fill(minDist, Integer.MAX_VALUE);\r\n        minDist[1] = 0;\r\n\r\n        Deque<Integer> deque = new LinkedList<>();\r\n\r\n        deque.offer(1);\r\n\r\n        boolean[] isInQueue = new boolean[N+1];\r\n        isInQueue[1] = true;\r\n\r\n        // SPFA\u7b97\u6cd5\u6838\u5fc3\uff1a\u53ea\u5bf9\u4e0a\u4e00\u6b21\u677e\u5f1b\u7684\u65f6\u5019\u66f4\u65b0\u8fc7\u7684\u8282\u70b9\u5173\u8054\u7684\u8fb9\u8fdb\u884c\u677e\u5f1b\u64cd\u4f5c\r\n        while(!deque.isEmpty()){\r\n\r\n            int cur = deque.poll();\r\n            isInQueue[cur] = false;\r\n\r\n            for(Edge edge : graph.get(cur)){\r\n                if(minDist[edge.to] > (minDist[cur] + edge.val)){\r\n                    minDist[edge.to] = minDist[cur] + edge.val;\r\n                    if(!isInQueue[edge.to]){\r\n                        deque.offer(edge.to);\r\n                        isInQueue[edge.to] = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(minDist[N] == Integer.MAX_VALUE)\r\n            System.out.println("unconnected");\r\n        else\r\n            System.out.println(minDist[N]);\r\n\r\n        scanner.close();\r\n\r\n    }\r\n}\r\n\n'})}),"\n",(0,t.jsx)(r.h2,{id:"bellman_ford-\u4e4b\u5224\u65ad\u8d1f\u6743\u56de\u8def",children:"Bellman_ford \u4e4b\u5224\u65ad\u8d1f\u6743\u56de\u8def"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1153",children:"\u5361\u7801\u7f51\uff1a95. \u57ce\u5e02\u95f4\u8d27\u7269\u8fd0\u8f93 II"})}),"\n",(0,t.jsx)(r.p,{children:"\u3010\u9898\u76ee\u63cf\u8ff0\u3011"}),"\n",(0,t.jsx)(r.p,{children:"\u67d0\u56fd\u4e3a\u4fc3\u8fdb\u57ce\u5e02\u95f4\u7ecf\u6d4e\u4ea4\u6d41\uff0c\u51b3\u5b9a\u5bf9\u8d27\u7269\u8fd0\u8f93\u63d0\u4f9b\u8865\u8d34\u3002\u5171\u6709 n \u4e2a\u7f16\u53f7\u4e3a 1 \u5230 n \u7684\u57ce\u5e02\uff0c\u901a\u8fc7\u9053\u8def\u7f51\u7edc\u8fde\u63a5\uff0c\u7f51\u7edc\u4e2d\u7684\u9053\u8def\u4ec5\u5141\u8bb8\u4ece\u67d0\u4e2a\u57ce\u5e02\u5355\u5411\u901a\u884c\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\uff0c\u4e0d\u80fd\u53cd\u5411\u901a\u884c\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u7f51\u7edc\u4e2d\u7684\u9053\u8def\u90fd\u6709\u5404\u81ea\u7684\u8fd0\u8f93\u6210\u672c\u548c\u653f\u5e9c\u8865\u8d34\uff0c\u9053\u8def\u7684\u6743\u503c\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a\u8fd0\u8f93\u6210\u672c - \u653f\u5e9c\u8865\u8d34\u3002\u6743\u503c\u4e3a\u6b63\u8868\u793a\u6263\u9664\u4e86\u653f\u5e9c\u8865\u8d34\u540e\u8fd0\u8f93\u8d27\u7269\u4ecd\u9700\u652f\u4ed8\u7684\u8d39\u7528\uff1b"}),"\n",(0,t.jsx)(r.p,{children:"\u6743\u503c\u4e3a\u8d1f\u5219\u8868\u793a\u653f\u5e9c\u7684\u8865\u8d34\u8d85\u8fc7\u4e86\u652f\u51fa\u7684\u8fd0\u8f93\u6210\u672c\uff0c\u5b9e\u9645\u8868\u73b0\u4e3a\u8fd0\u8f93\u8fc7\u7a0b\u4e2d\u8fd8\u80fd\u8d5a\u53d6\u4e00\u5b9a\u7684\u6536\u76ca\u3002"}),"\n",(0,t.jsxs)(r.p,{children:["\u7136\u800c\uff0c\u5728\u8bc4\u4f30\u4ece\u57ce\u5e02 1 \u5230\u57ce\u5e02 n \u7684\u6240\u6709\u53ef\u80fd\u8def\u5f84\u4e2d\u7efc\u5408\u653f\u5e9c\u8865\u8d34\u540e\u7684\u6700\u4f4e\u8fd0\u8f93\u6210\u672c\u65f6\uff0c\u5b58\u5728\u4e00\u79cd\u60c5\u51b5\uff1a",(0,t.jsx)(r.strong,{children:"\u56fe\u4e2d\u53ef\u80fd\u51fa\u73b0\u8d1f\u6743\u56de\u8def"}),"\u3002"]}),"\n",(0,t.jsx)(r.p,{children:"\u8d1f\u6743\u56de\u8def\u662f\u6307\u4e00\u7cfb\u5217\u9053\u8def\u7684\u603b\u6743\u503c\u4e3a\u8d1f\uff0c\u8fd9\u6837\u7684\u56de\u8def\u4f7f\u5f97\u901a\u8fc7\u53cd\u590d\u7ecf\u8fc7\u56de\u8def\u4e2d\u7684\u9053\u8def\uff0c\u7406\u8bba\u4e0a\u53ef\u4ee5\u65e0\u9650\u5730\u51cf\u5c11\u603b\u6210\u672c\u6216\u65e0\u9650\u5730\u589e\u52a0\u603b\u6536\u76ca\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u4e3a\u4e86\u907f\u514d\u8d27\u7269\u8fd0\u8f93\u5546\u91c7\u7528\u8d1f\u6743\u56de\u8def\u8fd9\u79cd\u60c5\u51b5\u65e0\u9650\u7684\u8d5a\u53d6\u653f\u5e9c\u8865\u8d34\uff0c\u7b97\u6cd5\u8fd8\u9700\u68c0\u6d4b\u8fd9\u79cd\u7279\u6b8a\u60c5\u51b5\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8bf7\u627e\u51fa\u4ece\u57ce\u5e02 1 \u5230\u57ce\u5e02 n \u7684\u6240\u6709\u53ef\u80fd\u8def\u5f84\u4e2d\uff0c\u7efc\u5408\u653f\u5e9c\u8865\u8d34\u540e\u7684\u6700\u4f4e\u8fd0\u8f93\u6210\u672c\u3002\u540c\u65f6\u80fd\u591f\u68c0\u6d4b\u5e76\u9002\u5f53\u5904\u7406\u8d1f\u6743\u56de\u8def\u7684\u5b58\u5728\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u57ce\u5e02 1 \u5230\u57ce\u5e02 n \u4e4b\u95f4\u53ef\u80fd\u4f1a\u51fa\u73b0\u6ca1\u6709\u8def\u5f84\u7684\u60c5\u51b5"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'// Bellman-Ford\u65b9\u6cd5\r\nimport java.util.*;\r\n\r\nclass Edge{\r\n    int from;\r\n    int to;\r\n    int val;\r\n    public Edge(int from, int to, int val){\r\n        this.from = from;\r\n        this.to = to;\r\n        this.val = val;\r\n    }\r\n}\r\n\r\npublic class Main{\r\n\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n\r\n        List<Edge> graph = new ArrayList<>();\r\n\r\n        for(int i = 0; i < M; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int val = scanner.nextInt();\r\n            graph.add(new Edge(s, t, val));\r\n        }\r\n\r\n        int[] minDist = new int[N+1];\r\n        Arrays.fill(minDist, Integer.MAX_VALUE);\r\n        minDist[1] = 0;\r\n\r\n        boolean flag = false;\r\n\r\n        for(int i = 1; i <= N; i++){ //\u589e\u52a0\u4e00\u6b21\u677e\u5f1b\u64cd\u4f5c\r\n            for(Edge e : graph){\r\n                if(i < N){\r\n                    if(minDist[e.from] != Integer.MAX_VALUE && minDist[e.from] + e.val < minDist[e.to]){\r\n                        minDist[e.to] = minDist[e.from] + e.val;\r\n                    }\r\n                }\r\n                else{ //\u5982\u679c\u52a0\u4e00\u6b21\u677e\u5f1b\u64cd\u4f5c\u540e\uff0cminDist[N]\u53d8\u5316\uff0c\u8bf4\u660e\u6709\u73af\r\n                    if(minDist[e.from] != Integer.MAX_VALUE && minDist[e.from] + e.val < minDist[e.to]){\r\n                        flag = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(flag) System.out.println("circle");\r\n        else if(minDist[N] == Integer.MAX_VALUE)\r\n            System.out.println("unconnected");\r\n        else\r\n            System.out.println(minDist[N]);\r\n\r\n        scanner.close();\r\n\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'// SPFA\u65b9\u6cd5\u6c42\u89e3\r\nimport java.util.*;\r\n\r\nclass Edge{\r\n    int from;\r\n    int to;\r\n    int val;\r\n    public Edge(int from, int to, int val){\r\n        this.from = from;\r\n        this.to = to;\r\n        this.val = val;\r\n    }\r\n}\r\n\r\npublic class Main{\r\n\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n\r\n        List<List<Edge>> graph = new ArrayList<>();\r\n        for(int i = 0; i <= N; i++) graph.add(new ArrayList<>());\r\n\r\n        for(int i = 0; i < M; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int val = scanner.nextInt();\r\n            graph.get(s).add(new Edge(s, t, val));\r\n        }\r\n\r\n        int[] minDist = new int[N+1];\r\n        Arrays.fill(minDist, Integer.MAX_VALUE);\r\n        minDist[1] = 0;\r\n\r\n        Deque<Integer> deque = new LinkedList<>();\r\n\r\n        deque.offer(1);\r\n\r\n        boolean[] isInQueue = new boolean[N+1];\r\n        isInQueue[1] = true;\r\n\r\n        boolean flag = false;\r\n        int[] cnt = new int[N+1];\r\n        cnt[1]++;\r\n        while(!deque.isEmpty()){\r\n\r\n            int cur = deque.poll();\r\n            isInQueue[cur] = false;\r\n\r\n            for(Edge edge : graph.get(cur)){\r\n                if(minDist[edge.to] > (minDist[cur] + edge.val)){\r\n                    minDist[edge.to] = minDist[cur] + edge.val;\r\n                    if(!isInQueue[edge.to]){\r\n                        deque.offer(edge.to);\r\n                        isInQueue[edge.to] = true;\r\n                        cnt[edge.to]++;\r\n\r\n                        if(cnt[edge.to] == N){ // \u6b63\u60c5\u51b5\u4e0b\uff0c\u52a0\u5165\u961f\u5217\u7684\u8282\u70b9\u6570\u4e0d\u4f1a\u8d85\u8fc7N\uff0c\u4f46\u5f53\u52a0\u5165\u5230\u961f\u5217\u7684\u8282\u70b9\u7b49\u4e8eN\u65f6\uff0c\u8bf4\u660e\u627e\u5230\u4e86\u73af\r\n                            flag = true;\r\n                            while(!deque.isEmpty()) deque.poll();\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if(flag) System.out.println("circle");\r\n        else if(minDist[N] == Integer.MAX_VALUE)\r\n            System.out.println("unconnected");\r\n        else\r\n            System.out.println(minDist[N]);\r\n\r\n        scanner.close();\r\n\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"bellman_ford-\u4e4b\u5355\u6e90\u6709\u9650\u6700\u77ed\u8def",children:"bellman_ford \u4e4b\u5355\u6e90\u6709\u9650\u6700\u77ed\u8def"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1154",children:"\u5361\u7801\u7f51\uff1a96. \u57ce\u5e02\u95f4\u8d27\u7269\u8fd0\u8f93 III"})}),"\n",(0,t.jsx)(r.p,{children:"\u3010\u9898\u76ee\u63cf\u8ff0\u3011"}),"\n",(0,t.jsx)(r.p,{children:"\u67d0\u56fd\u4e3a\u4fc3\u8fdb\u57ce\u5e02\u95f4\u7ecf\u6d4e\u4ea4\u6d41\uff0c\u51b3\u5b9a\u5bf9\u8d27\u7269\u8fd0\u8f93\u63d0\u4f9b\u8865\u8d34\u3002\u5171\u6709 n \u4e2a\u7f16\u53f7\u4e3a 1 \u5230 n \u7684\u57ce\u5e02\uff0c\u901a\u8fc7\u9053\u8def\u7f51\u7edc\u8fde\u63a5\uff0c\u7f51\u7edc\u4e2d\u7684\u9053\u8def\u4ec5\u5141\u8bb8\u4ece\u67d0\u4e2a\u57ce\u5e02\u5355\u5411\u901a\u884c\u5230\u53e6\u4e00\u4e2a\u57ce\u5e02\uff0c\u4e0d\u80fd\u53cd\u5411\u901a\u884c\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u7f51\u7edc\u4e2d\u7684\u9053\u8def\u90fd\u6709\u5404\u81ea\u7684\u8fd0\u8f93\u6210\u672c\u548c\u653f\u5e9c\u8865\u8d34\uff0c\u9053\u8def\u7684\u6743\u503c\u8ba1\u7b97\u65b9\u5f0f\u4e3a\uff1a\u8fd0\u8f93\u6210\u672c - \u653f\u5e9c\u8865\u8d34\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u6743\u503c\u4e3a\u6b63\u8868\u793a\u6263\u9664\u4e86\u653f\u5e9c\u8865\u8d34\u540e\u8fd0\u8f93\u8d27\u7269\u4ecd\u9700\u652f\u4ed8\u7684\u8d39\u7528\uff1b"}),"\n",(0,t.jsx)(r.p,{children:"\u6743\u503c\u4e3a\u8d1f\u5219\u8868\u793a\u653f\u5e9c\u7684\u8865\u8d34\u8d85\u8fc7\u4e86\u652f\u51fa\u7684\u8fd0\u8f93\u6210\u672c\uff0c\u5b9e\u9645\u8868\u73b0\u4e3a\u8fd0\u8f93\u8fc7\u7a0b\u4e2d\u8fd8\u80fd\u8d5a\u53d6\u4e00\u5b9a\u7684\u6536\u76ca\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8bf7\u8ba1\u7b97\u5728\u6700\u591a\u7ecf\u8fc7 k \u4e2a\u57ce\u5e02\u7684\u6761\u4ef6\u4e0b\uff0c\u4ece\u57ce\u5e02 src \u5230\u57ce\u5e02 dst \u7684\u6700\u4f4e\u8fd0\u8f93\u6210\u672c\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'//bellman_ford\u4e00\u822c\u65b9\u6cd5\r\nimport java.util.*;\r\n\r\nclass Edge{\r\n    int from;\r\n    int to;\r\n    int val;\r\n    public Edge(int from, int to, int val){\r\n        this.from = from;\r\n        this.to = to;\r\n        this.val = val;\r\n    }\r\n}\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n\r\n        List<Edge> graph = new ArrayList<>();\r\n\r\n        for(int i = 0; i < M; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int val = scanner.nextInt();\r\n            graph.add(new Edge(s, t, val));\r\n        }\r\n        int start = scanner.nextInt();\r\n        int end = scanner.nextInt();\r\n        int constraint = scanner.nextInt();\r\n\r\n        int[] minDist = new int[N+1];\r\n        Arrays.fill(minDist, Integer.MAX_VALUE);\r\n        minDist[start] = 0;\r\n\r\n        int[] minDist_copy = new int[N+1];\r\n\r\n        for(int i = 0; i < constraint+1; i++){\r\n            minDist_copy = Arrays.copyOf(minDist, N+1);\r\n            for(Edge e : graph){\r\n                if(minDist_copy[e.from] != Integer.MAX_VALUE && minDist_copy[e.from] + e.val < minDist[e.to]){\r\n                    minDist[e.to] = minDist_copy[e.from] + e.val;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(minDist[end] == Integer.MAX_VALUE)\r\n            System.out.println("unreachable");\r\n        else\r\n            System.out.println(minDist[end]);\r\n\r\n        scanner.close();\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:'// SPFA\u7b97\u6cd5\r\nimport java.util.*;\r\n\r\nclass Edge{\r\n    int from;\r\n    int to;\r\n    int val;\r\n\r\n    public Edge(){\r\n\r\n    }\r\n\r\n    public Edge(int to, int val){\r\n        this.to = to;\r\n        this.val = val;\r\n    }\r\n\r\n    public Edge(int from, int to, int val){\r\n        this.from = from;\r\n        this.to = to;\r\n        this.val = val;\r\n    }\r\n}\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n\r\n        List<List<Edge>> graph = new ArrayList<>();\r\n\r\n        for(int i = 0; i <= N; i++) graph.add(new ArrayList<>());\r\n\r\n        for(int i = 0; i < M; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int val = scanner.nextInt();\r\n            graph.get(s).add(new Edge(t, val));\r\n        }\r\n\r\n        int start = scanner.nextInt();\r\n        int end = scanner.nextInt();\r\n        int constraint = scanner.nextInt();\r\n\r\n\r\n        int[] minDist = spfa(graph, N, start, constraint);\r\n\r\n        if(minDist[end] == Integer.MAX_VALUE)\r\n            System.out.println("unreachable");\r\n        else\r\n            System.out.println(minDist[end]);\r\n\r\n        scanner.close();\r\n    }\r\n\r\n    public static int[] spfa(List<List<Edge>> graph, int N, int start, int constraint){\r\n        int[] minDist = new int[N+1];\r\n        Arrays.fill(minDist, Integer.MAX_VALUE);\r\n        minDist[start] = 0;\r\n\r\n        Queue<Integer> queue = new LinkedList<>();\r\n        queue.offer(start);\r\n        int[] minDist_copy = new int[N+1];\r\n\r\n        while(constraint + 1 > 0 && !queue.isEmpty()){ // \u9650\u5b9a\u677e\u5f1b constraint+1 \u6b21\r\n            int cursize = queue.size();\r\n\r\n            while(cursize-- > 0){\r\n\r\n                int cur = queue.poll();\r\n\r\n                minDist_copy = minDist.clone();\r\n\r\n                for(Edge edge : graph.get(cur)){\r\n                    if(minDist[edge.to] > minDist_copy[cur] + edge.val){\r\n                        minDist[edge.to] = minDist_copy[cur] + edge.val;\r\n                        if(!queue.contains(edge.to) && graph.get(edge.to).size() > 0){\r\n                            queue.offer(edge.to);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            constraint--;\r\n\r\n        }\r\n        return minDist;\r\n    }\r\n}\n'})}),"\n",(0,t.jsx)(r.h2,{id:"\u591a\u6e90-bfs",children:"\u591a\u6e90 BFS"}),"\n",(0,t.jsx)(r.h3,{id:"1162-\u5730\u56fe\u5206\u6790",children:(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/as-far-from-land-as-possible/",children:"1162. \u5730\u56fe\u5206\u6790"})}),"\n",(0,t.jsxs)(r.p,{children:["\u4f60\u73b0\u5728\u624b\u91cc\u6709\u4e00\u4efd\u5927\u5c0f\u4e3a ",(0,t.jsx)(r.code,{children:"n x n"})," \u7684 \u7f51\u683c ",(0,t.jsx)(r.code,{children:"grid"}),"\uff0c\u4e0a\u9762\u7684\u6bcf\u4e2a \u5355\u5143\u683c \u90fd\u7528 ",(0,t.jsx)(r.code,{children:"0"})," \u548c ",(0,t.jsx)(r.code,{children:"1"})," \u6807\u8bb0\u597d\u4e86\u3002\u5176\u4e2d ",(0,t.jsx)(r.code,{children:"0"})," \u4ee3\u8868\u6d77\u6d0b\uff0c",(0,t.jsx)(r.code,{children:"1"})," \u4ee3\u8868\u9646\u5730\u3002"]}),"\n",(0,t.jsxs)(r.p,{children:["\u8bf7\u4f60\u627e\u51fa\u4e00\u4e2a\u6d77\u6d0b\u5355\u5143\u683c\uff0c\u8fd9\u4e2a\u6d77\u6d0b\u5355\u5143\u683c\u5230\u79bb\u5b83\u6700\u8fd1\u7684\u9646\u5730\u5355\u5143\u683c\u7684\u8ddd\u79bb\u662f\u6700\u5927\u7684\uff0c\u5e76\u8fd4\u56de\u8be5\u8ddd\u79bb\u3002\u5982\u679c\u7f51\u683c\u4e0a\u53ea\u6709\u9646\u5730\u6216\u8005\u6d77\u6d0b\uff0c\u8bf7\u8fd4\u56de ",(0,t.jsx)(r.code,{children:"-1"}),"\u3002"]}),"\n",(0,t.jsxs)(r.p,{children:["\u6211\u4eec\u8fd9\u91cc\u8bf4\u7684\u8ddd\u79bb\u662f\u300c\u66fc\u54c8\u987f\u8ddd\u79bb\u300d\uff08 Manhattan Distance\uff09\uff1a",(0,t.jsx)(r.code,{children:"(x0, y0)"})," \u548c ",(0,t.jsx)(r.code,{children:"(x1, y1)"})," \u8fd9\u4e24\u4e2a\u5355\u5143\u683c\u4e4b\u95f4\u7684\u8ddd\u79bb\u662f ",(0,t.jsx)(r.code,{children:"|x0 - x1| + |y0 - y1|"})," \u3002"]}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// \u5355\u6e90BFS \u65f6\u95f4\u590d\u6742\u5ea6:O(n^4)\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6:O(n^2)\uff0c\u8d85\u65f6\r\nclass Solution {\r\n    int[][] grid;\r\n    int n;\r\n    int[][] dir = new int[][]{{0,1},{0,-1},{1,0},{-1,0}};\r\n    public int maxDistance(int[][] _grid) {\r\n        grid = _grid;\r\n        n = grid.length;\r\n\r\n        int res = -1;\r\n\r\n        for(int i = 0; i < n; i++){\r\n            for(int j = 0; j < n; j++){\r\n                if(grid[i][j] == 0){\r\n                    res = Math.max(res, bfs(i, j));\r\n                }\r\n\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    public int bfs(int i, int j){\r\n        Map<Integer, Integer> map = new HashMap<>();\r\n        Deque<int[]> deque = new ArrayDeque<>();\r\n\r\n        deque.offer(new int[]{i,j});\r\n\r\n        while(!deque.isEmpty()){\r\n            int[] cur = deque.poll();\r\n            int x = cur[0];\r\n            int y = cur[1];\r\n\r\n            int step = map.getOrDefault(x * n + y, 0);\r\n\r\n            if(grid[x][y] == 1) return step;\r\n\r\n            for(int[] d : dir){\r\n                int next_x = x + d[0];\r\n                int next_y = y + d[1];\r\n\r\n                if(next_x >= 0 && next_x < n && next_y >= 0 && next_y < n){\r\n                    int key = next_x * n + next_y;\r\n                    if(!map.containsKey(key)) map.put(key, step + 1);\r\n                    deque.offer(new int[]{next_x, next_y});\r\n                }\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\n// \u5c06\u591a\u6e90BFS\u8f6c\u4e3a\u5355\u6e90BFS\uff0c\u4f18\u5316\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(n^2) ,\u5e76\u4e14\u8fd9\u4e2a\u6d77\u6d0b\u80af\u5b9a\u662f\u88ab\u79bb\u4ed6\u6700\u8fd1\u7684\u9646\u5730\u7ed9\u6269\u6563\u5230\u7684\uff01\r\nclass Solution {\r\n    int[][] dir = new int[][]{{0,1},{0,-1},{1,0},{-1,0}};\r\n    public int maxDistance(int[][] grid) {\r\n        int n = grid.length;\r\n        Map<Integer, Integer> map = new HashMap<>();\r\n        Deque<int[]> deque = new ArrayDeque<>();\r\n\r\n        int res = -1;\r\n\r\n        for(int i = 0; i < n; i++){\r\n            for(int j = 0; j < n; j++){\r\n                if(grid[i][j] == 1){\r\n                    deque.offer(new int[]{i,j});\r\n                }\r\n            }\r\n        }\r\n\r\n        while(!deque.isEmpty()){\r\n            int[] cur = deque.poll();\r\n            int x = cur[0];\r\n            int y = cur[1];\r\n\r\n            int step = map.getOrDefault(x * n + y, 0);\r\n\r\n            for(int[] d : dir){\r\n                int next_x = x + d[0];\r\n                int next_y = y + d[1];\r\n\r\n                if(next_x >= 0 && next_x < n && next_y >= 0 && next_y < n && grid[next_x][next_y] == 0){\r\n                    int key = next_x * n + next_y;\r\n                    grid[next_x][next_y] = 1;\r\n                    if(!map.containsKey(key)) map.put(key, step + 1);\r\n                    deque.offer(new int[]{next_x, next_y});\r\n                    res = Math.max(res, step + 1);\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n\n"})}),"\n",(0,t.jsx)(r.h3,{id:"1765-\u5730\u56fe\u4e2d\u7684\u6700\u9ad8\u70b9",children:(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/map-of-highest-peak/",children:"1765. \u5730\u56fe\u4e2d\u7684\u6700\u9ad8\u70b9"})}),"\n",(0,t.jsxs)(r.p,{children:["\u7ed9\u4f60\u4e00\u4e2a\u5927\u5c0f\u4e3a ",(0,t.jsx)(r.code,{children:"m x n"})," \u7684\u6574\u6570\u77e9\u9635 ",(0,t.jsx)(r.code,{children:"isWater"})," \uff0c\u5b83\u4ee3\u8868\u4e86\u4e00\u4e2a\u7531 ",(0,t.jsx)(r.strong,{children:"\u9646\u5730"})," \u548c ",(0,t.jsx)(r.strong,{children:"\u6c34\u57df"})," \u5355\u5143\u683c\u7ec4\u6210\u7684\u5730\u56fe\u3002"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\u5982\u679c ",(0,t.jsx)(r.code,{children:"isWater[i][j] == 0"})," \uff0c\u683c\u5b50 ",(0,t.jsx)(r.code,{children:"(i, j)"})," \u662f\u4e00\u4e2a ",(0,t.jsx)(r.strong,{children:"\u9646\u5730"})," \u683c\u5b50\u3002"]}),"\n",(0,t.jsxs)(r.li,{children:["\u5982\u679c ",(0,t.jsx)(r.code,{children:"isWater[i][j] == 1"})," \uff0c\u683c\u5b50 ",(0,t.jsx)(r.code,{children:"(i, j)"})," \u662f\u4e00\u4e2a ",(0,t.jsx)(r.strong,{children:"\u6c34\u57df"})," \u683c\u5b50\u3002"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"\u4f60\u9700\u8981\u6309\u7167\u5982\u4e0b\u89c4\u5219\u7ed9\u6bcf\u4e2a\u5355\u5143\u683c\u5b89\u6392\u9ad8\u5ea6\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u6bcf\u4e2a\u683c\u5b50\u7684\u9ad8\u5ea6\u90fd\u5fc5\u987b\u662f\u975e\u8d1f\u7684\u3002"}),"\n",(0,t.jsxs)(r.li,{children:["\u5982\u679c\u4e00\u4e2a\u683c\u5b50\u662f ",(0,t.jsx)(r.strong,{children:"\u6c34\u57df"})," \uff0c\u90a3\u4e48\u5b83\u7684\u9ad8\u5ea6\u5fc5\u987b\u4e3a ",(0,t.jsx)(r.code,{children:"0"})," \u3002"]}),"\n",(0,t.jsxs)(r.li,{children:["\u4efb\u610f\u76f8\u90bb\u7684\u683c\u5b50\u9ad8\u5ea6\u5dee ",(0,t.jsx)(r.strong,{children:"\u81f3\u591a"})," \u4e3a ",(0,t.jsx)(r.code,{children:"1"})," \u3002\u5f53\u4e24\u4e2a\u683c\u5b50\u5728\u6b63\u4e1c\u3001\u5357\u3001\u897f\u3001\u5317\u65b9\u5411\u4e0a\u76f8\u4e92\u7d27\u6328\u7740\uff0c\u5c31\u79f0\u5b83\u4eec\u4e3a\u76f8\u90bb\u7684\u683c\u5b50\u3002\uff08\u4e5f\u5c31\u662f\u8bf4\u5b83\u4eec\u6709\u4e00\u6761\u516c\u5171\u8fb9\uff09"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["\u627e\u5230\u4e00\u79cd\u5b89\u6392\u9ad8\u5ea6\u7684\u65b9\u6848\uff0c\u4f7f\u5f97\u77e9\u9635\u4e2d\u7684\u6700\u9ad8\u9ad8\u5ea6\u503c ",(0,t.jsx)(r.strong,{children:"\u6700\u5927"})," \u3002"]}),"\n",(0,t.jsxs)(r.p,{children:["\u8bf7\u4f60\u8fd4\u56de\u4e00\u4e2a\u5927\u5c0f\u4e3a ",(0,t.jsx)(r.code,{children:"m x n"})," \u7684\u6574\u6570\u77e9\u9635 ",(0,t.jsx)(r.code,{children:"height"})," \uff0c\u5176\u4e2d ",(0,t.jsx)(r.code,{children:"height[i][j]"})," \u662f\u683c\u5b50 ",(0,t.jsx)(r.code,{children:"(i, j)"})," \u7684\u9ad8\u5ea6\u3002\u5982\u679c\u6709\u591a\u79cd\u89e3\u6cd5\uff0c\u8bf7\u8fd4\u56de ",(0,t.jsx)(r.strong,{children:"\u4efb\u610f\u4e00\u4e2a"})," \u3002"]}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n\r\n    public int[][] dir = {{1,0},{-1,0},{0,1},{0,-1}};\r\n    public int[][] highestPeak(int[][] isWater) {\r\n        if(isWater == null) return null;\r\n        int m = isWater.length, n = isWater[0].length;\r\n        int[][] res = new int[m][n];\r\n\r\n        Deque<int[]> deque = new LinkedList<>();\r\n\r\n        for(int i = 0; i < m; i++){\r\n            for(int j = 0; j < n; j++){\r\n                if(isWater[i][j] == 1){\r\n                    deque.offer(new int[]{i,j});\r\n                }\r\n            }\r\n        }\r\n\r\n        while(!deque.isEmpty()){\r\n            int[] cur = deque.poll();\r\n            int x = cur[0], y = cur[1];\r\n\r\n            for(int[] d : dir){\r\n                int next_x = x + d[0], next_y = y + d[1];\r\n                if(next_x >= 0 && next_x < m && next_y >= 0 && next_y < n && isWater[next_x][next_y] == 0){\r\n                    isWater[next_x][next_y] = 1;\r\n                    res[next_x][next_y] = res[x][y] + 1;\r\n                    deque.offer(new int[]{next_x, next_y});\r\n                }\r\n            }\r\n        }\r\n\r\n        return res;\r\n    }\r\n}\r\n\n"})}),"\n",(0,t.jsx)(r.h2,{id:"floyd-\u7b97\u6cd5",children:"Floyd \u7b97\u6cd5"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Floyd \u7b97\u6cd5\u5bf9\u8fb9\u7684\u6743\u503c\u6b63\u8d1f\u6ca1\u6709\u8981\u6c42\uff0c\u90fd\u53ef\u4ee5\u5904\u7406"}),"\u3002"]}),"\n",(0,t.jsx)(r.p,{children:"Floyd \u7b97\u6cd5\u6838\u5fc3\u601d\u60f3\u662f\u52a8\u6001\u89c4\u5212\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8fd9\u91cc\u5206\u4e24\u79cd\u60c5\u51b5\uff1a"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"\u8282\u70b9 i \u5230 \u8282\u70b9 j \u7684\u6700\u77ed\u8def\u5f84\u7ecf\u8fc7\u8282\u70b9 k"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"grid[i][j][k] = grid[i][k][k - 1] + grid[k][j][k - 1]"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:"\u8282\u70b9 i \u5230 \u8282\u70b9 j \u7684\u6700\u77ed\u8def\u5f84\u4e0d\u7ecf\u8fc7\u8282\u70b9 k"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.code,{children:"grid[i][j][k] = grid[i][j][k - 1]"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"\u6c42\u6700\u77ed\u8def\uff0c\u81ea\u7136\u5c31\u662f\u53d6\u4e24\u79cd\u60c5\u51b5\u7684\u6700\u5c0f\u503c\u3002"}),"\n",(0,t.jsx)(r.h3,{id:"\u9898\u76ee-5",children:"\u9898\u76ee"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1155",children:"\u5361\u7801\u7f51\uff1a97. \u5c0f\u660e\u901b\u516c\u56ed"})}),"\n",(0,t.jsx)(r.p,{children:"\u3010\u9898\u76ee\u63cf\u8ff0\u3011"}),"\n",(0,t.jsx)(r.p,{children:"\u5c0f\u660e\u559c\u6b22\u53bb\u516c\u56ed\u6563\u6b65\uff0c\u516c\u56ed\u5185\u5e03\u7f6e\u4e86\u8bb8\u591a\u7684\u666f\u70b9\uff0c\u76f8\u4e92\u4e4b\u95f4\u901a\u8fc7\u5c0f\u8def\u8fde\u63a5\uff0c\u5c0f\u660e\u5e0c\u671b\u5728\u89c2\u770b\u666f\u70b9\u7684\u540c\u65f6\uff0c\u80fd\u591f\u8282\u7701\u4f53\u529b\uff0c\u8d70\u6700\u77ed\u7684\u8def\u5f84\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u4e00\u4e2a\u516c\u56ed\u666f\u70b9\u56fe\uff0c\u56fe\u4e2d\u6709 N \u4e2a\u666f\u70b9\uff08\u7f16\u53f7\u4e3a 1 \u5230 N\uff09\uff0c\u4ee5\u53ca M \u6761\u53cc\u5411\u9053\u8def\u8fde\u63a5\u7740\u8fd9\u4e9b\u666f\u70b9\u3002\u6bcf\u6761\u9053\u8def\u4e0a\u884c\u8d70\u7684\u8ddd\u79bb\u90fd\u662f\u5df2\u77e5\u7684\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5c0f\u660e\u6709 Q \u4e2a\u89c2\u666f\u8ba1\u5212\uff0c\u6bcf\u4e2a\u8ba1\u5212\u90fd\u6709\u4e00\u4e2a\u8d77\u70b9 start \u548c\u4e00\u4e2a\u7ec8\u70b9 end\uff0c\u8868\u793a\u4ed6\u60f3\u4ece\u666f\u70b9 start \u524d\u5f80\u666f\u70b9 end\u3002\u7531\u4e8e\u5c0f\u660e\u5e0c\u671b\u8282\u7701\u4f53\u529b\uff0c\u4ed6\u60f3\u77e5\u9053\u6bcf\u4e2a\u89c2\u666f\u8ba1\u5212\u4e2d\u4ece\u8d77\u70b9\u5230\u7ec8\u70b9\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002 \u8bf7\u4f60\u5e2e\u52a9\u5c0f\u660e\u8ba1\u7b97\u51fa\u6bcf\u4e2a\u89c2\u666f\u8ba1\u5212\u7684\u6700\u77ed\u8def\u5f84\u957f\u5ea6\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"//dijkstra\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n\r\n        int[][] graph = new int[N+1][N+1];\r\n        for(int i = 1; i <= N; i++) Arrays.fill(graph[i], Integer.MAX_VALUE);\r\n\r\n        for(int i = 0; i < M; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int val = scanner.nextInt();\r\n            graph[s][t] = val;\r\n            graph[t][s] = val;\r\n        }\r\n\r\n        int Q = scanner.nextInt();\r\n        int[] start = new int[Q];\r\n        int[] end = new int[Q];\r\n\r\n\r\n        for(int i = 0; i < Q; i++){\r\n            start[i] = scanner.nextInt();\r\n            end[i] = scanner.nextInt();\r\n        }\r\n\r\n        for(int i = 0; i < Q; i++){\r\n\r\n            int[] minDist = new int[N+1];\r\n            Arrays.fill(minDist, Integer.MAX_VALUE);\r\n            minDist[start[i]] = 0;\r\n            boolean[] visited = new boolean[N+1];\r\n\r\n            for(int k  = 1; k <= N; k++){\r\n                int min_val = Integer.MAX_VALUE;\r\n                int cur = 0;\r\n                for(int j = 1; j <= N; j++){\r\n                    if(!visited[j] && minDist[j] < min_val){\r\n                        min_val = minDist[j];\r\n                        cur = j;\r\n                    }\r\n                }\r\n                visited[cur] = true;\r\n\r\n                for(int j = 1; j <= N; j++){\r\n                    if(!visited[j] && graph[cur][j] != Integer.MAX_VALUE && minDist[j] > minDist[cur] + graph[cur][j]){\r\n                        minDist[j] = minDist[cur] + graph[cur][j];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(minDist[end[i]] == Integer.MAX_VALUE)\r\n                System.out.println(-1);\r\n            else\r\n                System.out.println(minDist[end[i]]);\r\n        }\r\n\r\n        scanner.close();\r\n    }\r\n}\r\n\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// Floyd \u7b97\u6cd5\r\nimport java.util.*;\r\n\r\npublic class Main{\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n        int M = scanner.nextInt();\r\n\r\n        int[][][] graph = new int[N+1][N+1][N+1];\r\n        for(int i = 0; i <= N; i++){\r\n            for(int j = 0; j <= N; j++){\r\n                Arrays.fill(graph[i][j], Integer.MAX_VALUE);\r\n            }\r\n\r\n        }\r\n\r\n        for(int i = 0; i < M; i++){\r\n            int s = scanner.nextInt();\r\n            int t = scanner.nextInt();\r\n            int val = scanner.nextInt();\r\n            graph[s][t][0] = val;\r\n            graph[t][s][0] = val;\r\n        }\r\n\r\n        int Q = scanner.nextInt();\r\n        int[] start = new int[Q];\r\n        int[] end = new int[Q];\r\n\r\n\r\n        for(int i = 0; i < Q; i++){\r\n            start[i] = scanner.nextInt();\r\n            end[i] = scanner.nextInt();\r\n        }\r\n\r\n        int[] res = new int[Q];\r\n\r\n        for(int k = 1; k <= N; k++){ // \u6ce8\u610f3\u5c42\u5faa\u73af\u7684\u987a\u5e8f\r\n            for(int i = 1; i <= N; i++){\r\n                for(int j = 1; j <= N; j++){\r\n                    if(graph[i][k][k-1] != Integer.MAX_VALUE && graph[k][j][k-1] != Integer.MAX_VALUE)\r\n                        graph[i][j][k] = Math.min(graph[i][j][k-1], graph[i][k][k-1] + graph[k][j][k-1]);\r\n                    else\r\n                        graph[i][j][k] = graph[i][j][k-1];\r\n                }\r\n            }\r\n        }\r\n\r\n        for(int i = 0; i < Q; i++){\r\n            if(graph[start[i]][end[i]][N] != Integer.MAX_VALUE)\r\n                System.out.println(graph[start[i]][end[i]][N]);\r\n            else\r\n                System.out.println(-1);\r\n        }\r\n        scanner.close();\r\n    }\r\n}\r\n\n"})}),"\n",(0,t.jsx)(r.h2,{id:"a--\u7b97\u6cd5\u7cbe\u8bb2-a-star-\u7b97\u6cd5",children:"A * \u7b97\u6cd5\u7cbe\u8bb2 \uff08A star \u7b97\u6cd5\uff09"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://kamacoder.com/problempage.php?pid=1203",children:"\u5361\u7801\u7f51\uff1a126. \u9a91\u58eb\u7684\u653b\u51fb"})}),"\n",(0,t.jsx)(r.p,{children:"\u9898\u76ee\u63cf\u8ff0"}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u8c61\u68cb\u4e2d\uff0c\u9a6c\u548c\u8c61\u7684\u79fb\u52a8\u89c4\u5219\u5206\u522b\u662f\u201c\u9a6c\u8d70\u65e5\u201d\u548c\u201c\u8c61\u8d70\u7530\u201d\u3002\u73b0\u7ed9\u5b9a\u9a91\u58eb\u7684\u8d77\u59cb\u5750\u6807\u548c\u76ee\u6807\u5750\u6807\uff0c\u8981\u6c42\u6839\u636e\u9a91\u58eb\u7684\u79fb\u52a8\u89c4\u5219\uff0c\u8ba1\u7b97\u4ece\u8d77\u70b9\u5230\u8fbe\u76ee\u6807\u70b9\u6240\u9700\u7684\u6700\u77ed\u6b65\u6570\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u9a91\u58eb\u79fb\u52a8\u89c4\u5219\u5982\u56fe\uff0c\u7ea2\u8272\u662f\u8d77\u59cb\u4f4d\u7f6e\uff0c\u9ec4\u8272\u662f\u9a91\u58eb\u53ef\u4ee5\u8d70\u7684\u5730\u65b9\u3002"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"20240626104833",src:i(76179).A+"",width:"568",height:"500"})}),"\n",(0,t.jsx)(r.p,{children:"\u68cb\u76d8\u5927\u5c0f 1000 x 1000\uff08\u68cb\u76d8\u7684 x \u548c y \u5750\u6807\u5747\u5728 [1, 1000] \u533a\u95f4\u5185\uff0c\u5305\u542b\u8fb9\u754c\uff09"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// astar PriorityQueue\u4f1a\u8d85\u65f6\r\nimport java.util.*;\r\n\r\nclass Edge{\r\n    int a1, a2, b1, b2;\r\n\r\n    Edge(int a1, int a2, int b1, int b2){\r\n        this.a1 = a1;\r\n        this.a2 = a2;\r\n        this.b1 = b1;\r\n        this.b2 = b2;\r\n    }\r\n}\r\n\r\nclass Knight{\r\n    int x, y, g, h; // g: \u5f53\u524d\u6b65\u6570, h: \u4f30\u8ba1\u5269\u4f59\u6b65\u6570\r\n    Knight(int x, int y, int g, int h){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.g = g;\r\n        this.h = h;\r\n    }\r\n}\r\n\r\nclass MyComparator implements Comparator<Knight>{\r\n    @Override\r\n    public int compare(Knight o1, Knight o2) {\r\n        return Integer.compare(o1.g + o1.h, o2.g + o2.h);\r\n    }\r\n\r\n}\r\n\r\npublic class Main{\r\n    public static int[][] dir = {{-2,-1},{-1,-2},{1,-2},{2,-1},{-2,1},{-1,2},{1,2},{2,1}};\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n\r\n        List<Edge> graph = new ArrayList<>();\r\n\r\n        for(int i = 1; i <= N; i++){\r\n            int a1 = scanner.nextInt();\r\n            int a2 = scanner.nextInt();\r\n            int b1 = scanner.nextInt();\r\n            int b2 = scanner.nextInt();\r\n            graph.add(new Edge(a1, a2, b1, b2));\r\n        }\r\n\r\n        for(Edge e : graph){\r\n            astar(e);\r\n        }\r\n\r\n        scanner.close();\r\n    }\r\n\r\n    private static void astar(Edge e){\r\n\r\n        PriorityQueue<Knight> pq = new PriorityQueue<>(new MyComparator());\r\n\r\n        pq.offer(new Knight(e.a1, e.a2, 0, heuristic(e.a1, e.a2, e.b1, e.b2)));\r\n\r\n        int[][] visited = new int[1001][1001];\r\n        visited[e.a1][e.a2] = 1;\r\n\r\n        while(!pq.isEmpty()){\r\n            Knight cur = pq.poll();\r\n            int curX = cur.x, curY = cur.y, curH = cur.h, curG = cur.g;\r\n\r\n            if(curX == e.b1 && curY == e.b2){\r\n                System.out.println(visited[curX][curY]-1);\r\n                return;\r\n            }\r\n\r\n            for(int i = 0; i < 8; i++){\r\n                int nextX = curX + dir[i][0];\r\n                int nextY = curY + dir[i][1];\r\n                if(nextX >= 1 && nextX <= 1000 && nextY >= 1 && nextY <= 1000 && visited[nextX][nextY] == 0){\r\n                    pq.offer(new Knight(nextX, nextY, curG + 3, heuristic(nextX, nextY, e.b1, e.b2)));\r\n                    visited[nextX][nextY] = visited[curX][curY] + 1;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private static int heuristic(int x1, int y1, int x2, int y2) {\r\n        return Math.abs(x1 - x2) + Math.abs(y1 - y2); // \u66fc\u54c8\u987f\u8ddd\u79bb\u4f5c\u4e3a A* \u4f30\u8ba1\u51fd\u6570\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"import java.util.*;\r\n\r\nclass Edge{\r\n    int a1, a2, b1, b2;\r\n\r\n    Edge(int a1, int a2, int b1, int b2){\r\n        this.a1 = a1;\r\n        this.a2 = a2;\r\n        this.b1 = b1;\r\n        this.b2 = b2;\r\n    }\r\n}\r\n\r\nclass Knight{\r\n    int x, y, g, h; // g: \u5f53\u524d\u6b65\u6570, h: \u4f30\u8ba1\u5269\u4f59\u6b65\u6570\r\n    Knight(int x, int y, int g, int h){\r\n        this.x = x;\r\n        this.y = y;\r\n        this.g = g;\r\n        this.h = h;\r\n    }\r\n}\r\n\r\nclass MyComparator implements Comparator<Knight>{\r\n    @Override\r\n    public int compare(Knight o1, Knight o2) {\r\n        return ((o1.g + o1.h) - (o2.g + o2.h));\r\n    }\r\n\r\n}\r\n\r\npublic class Main{\r\n    public static int[][] visited = new int[1001][1001];\r\n    public static int[][] dir = {{-2,-1},{-1,-2},{1,-2},{2,-1},{-2,1},{-1,2},{1,2},{2,1}};\r\n    public static void main(String[] args){\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        int N = scanner.nextInt();\r\n\r\n        List<Edge> graph = new ArrayList<>();\r\n\r\n        for(int i = 1; i <= N; i++){\r\n            int a1 = scanner.nextInt();\r\n            int a2 = scanner.nextInt();\r\n            int b1 = scanner.nextInt();\r\n            int b2 = scanner.nextInt();\r\n            graph.add(new Edge(a1, a2, b1, b2));\r\n        }\r\n\r\n        for(Edge e : graph){\r\n            astar(e);\r\n        }\r\n\r\n        scanner.close();\r\n    }\r\n\r\n    private static void astar(Edge e){\r\n        PriorityQueue<Knight> pq = new PriorityQueue<>(new MyComparator());\r\n        pq.offer(new Knight(e.a1, e.a2, 0, heuristic(e.a1, e.a2, e.b1, e.b2)));\r\n        for(int[] arr : visited) Arrays.fill(arr, 0);\r\n        visited[e.a1][e.a2] = 1;\r\n\r\n        while(!pq.isEmpty()){\r\n            Knight cur = pq.poll();\r\n            int curX = cur.x, curY = cur.y, curG = cur.g;\r\n\r\n            if(curX == e.b1 && curY == e.b2){\r\n                System.out.println(visited[curX][curY]-1);\r\n                return;\r\n            }\r\n\r\n            for(int i = 0; i < 8; i++){\r\n                int nextX = curX + dir[i][0];\r\n                int nextY = curY + dir[i][1];\r\n                if(nextX >= 1 && nextX <= 1000 && nextY >= 1 && nextY <= 1000 && visited[nextX][nextY] == 0){\r\n                    pq.offer(new Knight(nextX, nextY, curG + 5, heuristic(nextX, nextY, e.b1, e.b2)));\r\n                    visited[nextX][nextY] = visited[curX][curY] + 1;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    private static int heuristic(int x1, int y1, int x2, int y2) {\r\n        return (x1 - x2)*(x1 - x2) + (y1 - y2)*(y1 - y2);\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"\u603b\u7ed3",children:"\u603b\u7ed3"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{alt:"img",src:i(4214).A+"",width:"1728",height:"574"})}),"\n",(0,t.jsx)(r.p,{children:"\uff08\u56e0\u4e3a A * \u5c5e\u4e8e\u542f\u53d1\u5f0f\u641c\u7d22\uff0c\u548c\u4e0a\u9762\u6700\u77ed\u8def\u7b97\u6cd5\u5e76\u4e0d\u662f\u4e00\u7c7b\uff0c\u4e0d\u9002\u5408\u4e00\u8d77\u5bf9\u6bd4)"}),"\n",(0,t.jsx)(r.h2,{id:"\u5176\u4ed6",children:"\u5176\u4ed6"}),"\n",(0,t.jsx)(r.h3,{id:"841\u94a5\u5319\u548c\u623f\u95f4",children:"841.\u94a5\u5319\u548c\u623f\u95f4"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/keys-and-rooms/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,t.jsx)(r.p,{children:"\u6709 N \u4e2a\u623f\u95f4\uff0c\u5f00\u59cb\u65f6\u4f60\u4f4d\u4e8e 0 \u53f7\u623f\u95f4\u3002\u6bcf\u4e2a\u623f\u95f4\u6709\u4e0d\u540c\u7684\u53f7\u7801\uff1a0\uff0c1\uff0c2\uff0c...\uff0cN-1\uff0c\u5e76\u4e14\u623f\u95f4\u91cc\u53ef\u80fd\u6709\u4e00\u4e9b\u94a5\u5319\u80fd\u4f7f\u4f60\u8fdb\u5165\u4e0b\u4e00\u4e2a\u623f\u95f4\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u5f62\u5f0f\u4e0a\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u623f\u95f4 i \u90fd\u6709\u4e00\u4e2a\u94a5\u5319\u5217\u8868 rooms[i]\uff0c\u6bcf\u4e2a\u94a5\u5319 rooms[i][j] \u7531 [0,1\uff0c...\uff0cN-1] \u4e2d\u7684\u4e00\u4e2a\u6574\u6570\u8868\u793a\uff0c\u5176\u4e2d N = rooms.length\u3002 \u94a5\u5319 rooms[i][j] = v \u53ef\u4ee5\u6253\u5f00\u7f16\u53f7\u4e3a v \u7684\u623f\u95f4\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u6700\u521d\uff0c\u9664 0 \u53f7\u623f\u95f4\u5916\u7684\u5176\u4f59\u6240\u6709\u623f\u95f4\u90fd\u88ab\u9501\u4f4f\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u4f60\u53ef\u4ee5\u81ea\u7531\u5730\u5728\u623f\u95f4\u4e4b\u95f4\u6765\u56de\u8d70\u52a8\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u5982\u679c\u80fd\u8fdb\u5165\u6bcf\u4e2a\u623f\u95f4\u8fd4\u56de true\uff0c\u5426\u5219\u8fd4\u56de false\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"// BFS solution\r\nimport java.util.Deque;\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\nclass Solution {\r\n    public boolean canVisitAllRooms(List<List<Integer>> rooms) {\r\n        if(rooms == null || rooms.size() == 0) return true;\r\n        boolean[] visited = new boolean[rooms.size()];\r\n        Deque<Integer> deque = new LinkedList<>();\r\n        deque.offer(0);\r\n        while(!deque.isEmpty()){\r\n            int cur = deque.poll();\r\n            if(!visited[cur]) {\r\n                for(int n : rooms.get(cur)){\r\n                    if(!visited[n]) deque.offer(n);\r\n                }\r\n                visited[cur] = true;\r\n            }\r\n\r\n        }\r\n        for(boolean v : visited) if(!v) return false;\r\n        return true;\r\n    }\r\n}\r\n\r\n//DFS(\u66f4\u5feb)\r\nimport java.util.List;\r\n// DFS solution\r\nclass Solution {\r\n    public void dfs(List<List<Integer>> rooms, int cur, boolean[] visited){\r\n        if(visited[cur]) return;\r\n        visited[cur] = true;\r\n\r\n        for(int i : rooms.get(cur)){\r\n            dfs(rooms, i, visited);\r\n        }\r\n    }\r\n    public boolean canVisitAllRooms(List<List<Integer>> rooms) {\r\n        if(rooms == null || rooms.size() == 0) return true;\r\n        boolean[] visited = new boolean[rooms.size()];\r\n\r\n        dfs(rooms, 0, visited);\r\n\r\n        for(boolean v : visited) if(!v) return false;\r\n        return true;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"127-\u5355\u8bcd\u63a5\u9f99",children:"127. \u5355\u8bcd\u63a5\u9f99"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/word-ladder/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,t.jsx)(r.p,{children:"\u5b57\u5178 wordList \u4e2d\u4ece\u5355\u8bcd beginWord \u548c endWord \u7684 \u8f6c\u6362\u5e8f\u5217 \u662f\u4e00\u4e2a\u6309\u4e0b\u8ff0\u89c4\u683c\u5f62\u6210\u7684\u5e8f\u5217\uff1a"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u5e8f\u5217\u4e2d\u7b2c\u4e00\u4e2a\u5355\u8bcd\u662f beginWord \u3002"}),"\n",(0,t.jsx)(r.li,{children:"\u5e8f\u5217\u4e2d\u6700\u540e\u4e00\u4e2a\u5355\u8bcd\u662f endWord \u3002"}),"\n",(0,t.jsx)(r.li,{children:"\u6bcf\u6b21\u8f6c\u6362\u53ea\u80fd\u6539\u53d8\u4e00\u4e2a\u5b57\u6bcd\u3002"}),"\n",(0,t.jsx)(r.li,{children:"\u8f6c\u6362\u8fc7\u7a0b\u4e2d\u7684\u4e2d\u95f4\u5355\u8bcd\u5fc5\u987b\u662f\u5b57\u5178 wordList \u4e2d\u7684\u5355\u8bcd\u3002"}),"\n",(0,t.jsx)(r.li,{children:"\u7ed9\u4f60\u4e24\u4e2a\u5355\u8bcd beginWord \u548c endWord \u548c\u4e00\u4e2a\u5b57\u5178 wordList \uff0c\u627e\u5230\u4ece beginWord \u5230 endWord \u7684 \u6700\u77ed\u8f6c\u6362\u5e8f\u5217 \u4e2d\u7684 \u5355\u8bcd\u6570\u76ee \u3002\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u8f6c\u6362\u5e8f\u5217\uff0c\u8fd4\u56de 0\u3002"}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"import java.util.Arrays;\r\nimport java.util.List;\r\n\r\nclass Solution {\r\n\r\n    public int ladderLength(String beginWord, String endWord, List<String> wordList) {\r\n        if(!wordList.contains(endWord)) return 0;\r\n        int n = wordList.size();\r\n        int[][] graph = new int[n+1][n+1];\r\n\r\n        for(int i = 0; i < n; i++){\r\n            for(int j = i+1; j < n; j++){\r\n                if(isAdjacent(wordList.get(i), wordList.get(j))){\r\n                    graph[i][j] = 1;\r\n                    graph[j][i] = 1;\r\n                }\r\n            }\r\n            if(isAdjacent(wordList.get(i), beginWord)){\r\n                graph[i][n] = 1;\r\n                graph[n][i] = 1;\r\n            }\r\n        }\r\n\r\n        boolean[] visited = new boolean[n+1];\r\n        int[] MinDist = new int[n+1];\r\n        Arrays.fill(MinDist, Integer.MAX_VALUE);\r\n        MinDist[n] = 1;\r\n        for(int i = 0; i < n+1; i++){\r\n            int min = Integer.MAX_VALUE;\r\n            int cur = -1;\r\n            for(int j = 0; j < n+1; j++){\r\n                if(MinDist[j] < min && !visited[j]){\r\n                    min = MinDist[j];\r\n                    cur = j;\r\n                }\r\n            }\r\n            if(cur == -1) break;\r\n            visited[cur] = true;\r\n\r\n\r\n            for(int j = 0; j < n+1; j++){\r\n                if(graph[cur][j] == 1){\r\n                    MinDist[j] = Math.min(min + 1, MinDist[j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        for(int i = 0; i < n+1; i++){\r\n            if(endWord.equals(wordList.get(i))) return MinDist[i] == Integer.MAX_VALUE ? 0 : MinDist[i];\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public boolean isAdjacent(String word1, String word2){\r\n        if(word1.length() != word2.length()) return false;\r\n        int cnt = 0;\r\n        for(int i = 0; i < word1.length(); i++){\r\n            if(word1.charAt(i)!= word2.charAt(i)){\r\n                cnt++;\r\n                if(cnt > 1) return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"684\u5197\u4f59\u8fde\u63a5",children:"684.\u5197\u4f59\u8fde\u63a5"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/redundant-connection/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,t.jsx)(r.p,{children:"\u6811\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u8fde\u901a\u4e14 \u65e0\u73af \u7684 \u65e0\u5411 \u56fe\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed9\u5b9a\u5f80\u4e00\u68f5 n \u4e2a\u8282\u70b9 (\u8282\u70b9\u503c 1 \uff5e n) \u7684\u6811\u4e2d\u6dfb\u52a0\u4e00\u6761\u8fb9\u540e\u7684\u56fe\u3002\u6dfb\u52a0\u7684\u8fb9\u7684\u4e24\u4e2a\u9876\u70b9\u5305\u542b\u5728 1 \u5230 n \u4e2d\u95f4\uff0c\u4e14\u8fd9\u6761\u9644\u52a0\u7684\u8fb9\u4e0d\u5c5e\u4e8e\u6811\u4e2d\u5df2\u5b58\u5728\u7684\u8fb9\u3002\u56fe\u7684\u4fe1\u606f\u8bb0\u5f55\u4e8e\u957f\u5ea6\u4e3a n \u7684\u4e8c\u7ef4\u6570\u7ec4 edges \uff0cedges[i] = [ai, bi] \u8868\u793a\u56fe\u4e2d\u5728 ai \u548c bi \u4e4b\u95f4\u5b58\u5728\u4e00\u6761\u8fb9\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8bf7\u627e\u51fa\u4e00\u6761\u53ef\u4ee5\u5220\u53bb\u7684\u8fb9\uff0c\u5220\u9664\u540e\u53ef\u4f7f\u5f97\u5269\u4f59\u90e8\u5206\u662f\u4e00\u4e2a\u6709\u7740 n \u4e2a\u8282\u70b9\u7684\u6811\u3002\u5982\u679c\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u5219\u8fd4\u56de\u6570\u7ec4 edges \u4e2d\u6700\u540e\u51fa\u73b0\u7684\u8fb9\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"//b\r\nclass Solution {\r\n    private int[] father;\r\n    private int n;\r\n    public void init_disjoint_set(int n){\r\n        father = new int[n+1];\r\n        for(int i = 0; i < n; i++){\r\n            father[i] = i;\r\n        }\r\n    }\r\n\r\n    public void union(int x, int y) {\r\n        int fx = find(x);\r\n        int fy = find(y);\r\n        if (fx != fy) {\r\n            father[fx] = fy;\r\n        }\r\n    }\r\n\r\n    private int find(int x) {\r\n        if (father[x] == x) {\r\n            return x;\r\n        }\r\n        father[x] = find(father[x]);\r\n        return father[x];\r\n    }\r\n\r\n    private boolean isSame(int x, int y) {\r\n        return find(x) == find(y);\r\n    }\r\n\r\n    public int[] findRedundantConnection(int[][] edges) {\r\n        n = edges.length;\r\n        init_disjoint_set(n);\r\n        int[] res = new int[2];\r\n        for(int[] edge : edges){\r\n            if(isSame(edge[0], edge[1])) {\r\n                res[0] = edge[0];\r\n                res[1] = edge[1];\r\n            }\r\n            union(edge[0], edge[1]);\r\n        }\r\n        return res;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"685\u5197\u4f59\u8fde\u63a5-ii",children:"685.\u5197\u4f59\u8fde\u63a5 II"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/redundant-connection-ii/",children:"\u529b\u6263\u9898\u76ee\u94fe\u63a5"})}),"\n",(0,t.jsx)(r.p,{children:"\u5728\u672c\u95ee\u9898\u4e2d\uff0c\u6709\u6839\u6811\u6307\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\u7684 \u6709\u5411 \u56fe\u3002\u8be5\u6811\u53ea\u6709\u4e00\u4e2a\u6839\u8282\u70b9\uff0c\u6240\u6709\u5176\u4ed6\u8282\u70b9\u90fd\u662f\u8be5\u6839\u8282\u70b9\u7684\u540e\u7ee7\u3002\u8be5\u6811\u9664\u4e86\u6839\u8282\u70b9\u4e4b\u5916\u7684\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u7236\u8282\u70b9\uff0c\u800c\u6839\u8282\u70b9\u6ca1\u6709\u7236\u8282\u70b9\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8f93\u5165\u4e00\u4e2a\u6709\u5411\u56fe\uff0c\u8be5\u56fe\u7531\u4e00\u4e2a\u6709\u7740 n \u4e2a\u8282\u70b9\uff08\u8282\u70b9\u503c\u4e0d\u91cd\u590d\uff0c\u4ece 1 \u5230 n\uff09\u7684\u6811\u53ca\u4e00\u6761\u9644\u52a0\u7684\u6709\u5411\u8fb9\u6784\u6210\u3002\u9644\u52a0\u7684\u8fb9\u5305\u542b\u5728 1 \u5230 n \u4e2d\u7684\u4e24\u4e2a\u4e0d\u540c\u9876\u70b9\u95f4\uff0c\u8fd9\u6761\u9644\u52a0\u7684\u8fb9\u4e0d\u5c5e\u4e8e\u6811\u4e2d\u5df2\u5b58\u5728\u7684\u8fb9\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u7ed3\u679c\u56fe\u662f\u4e00\u4e2a\u4ee5\u8fb9\u7ec4\u6210\u7684\u4e8c\u7ef4\u6570\u7ec4 edges \u3002 \u6bcf\u4e2a\u5143\u7d20\u662f\u4e00\u5bf9 [ui, vi]\uff0c\u7528\u4ee5\u8868\u793a \u6709\u5411 \u56fe\u4e2d\u8fde\u63a5\u9876\u70b9 ui \u548c\u9876\u70b9 vi \u7684\u8fb9\uff0c\u5176\u4e2d ui \u662f vi \u7684\u4e00\u4e2a\u7236\u8282\u70b9\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u8fd4\u56de\u4e00\u6761\u80fd\u5220\u9664\u7684\u8fb9\uff0c\u4f7f\u5f97\u5269\u4e0b\u7684\u56fe\u662f\u6709 n \u4e2a\u8282\u70b9\u7684\u6709\u6839\u6811\u3002\u82e5\u6709\u591a\u4e2a\u7b54\u6848\uff0c\u8fd4\u56de\u6700\u540e\u51fa\u73b0\u5728\u7ed9\u5b9a\u4e8c\u7ef4\u6570\u7ec4\u7684\u7b54\u6848\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-java",children:"class Solution {\r\n    private int[] father;\r\n    private int n;\r\n\r\n    public void initDisJoint(int n){\r\n        father = new int[n];\r\n        for(int i = 0; i < n; i++){\r\n            father[i] = i;\r\n        }\r\n    }\r\n\r\n    public void union(int x, int y) {\r\n        int fx = find(x);\r\n        int fy = find(y);\r\n        if (fx != fy) {\r\n            father[fx] = fy;\r\n        }\r\n    }\r\n\r\n    public int find(int x) {\r\n        if (father[x] == x) {\r\n            return x;\r\n        }\r\n        father[x] = find(father[x]);\r\n        return father[x];\r\n    }\r\n\r\n    public boolean isSame(int x, int y) {\r\n        return find(x) == find(y);\r\n    }\r\n\r\n    public int[] findRedundantDirectedConnection(int[][] edges) {\r\n        int[] inDegree = new int[edges.length+1];\r\n        int temp = 0;\r\n        int[] twoinDegree = new int[2];\r\n        for(int i = 0; i < edges.length; i++){\r\n            inDegree[edges[i][1]]++;\r\n            if(inDegree[edges[i][1]] > 1) {\r\n                temp = edges[i][1];\r\n                twoinDegree[1] = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        for(int i = 0; i < edges.length; i++){\r\n            if(edges[i][1] == temp){\r\n                twoinDegree[0] = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if(twoinDegree[1] != 0) {\r\n            if (isTreeRemoveEdge(edges, twoinDegree[1])) return edges[twoinDegree[1]];\r\n            else return edges[twoinDegree[0]];\r\n        }\r\n        else{\r\n            return detectCycle(edges);\r\n        }\r\n    }\r\n\r\n\r\n    public boolean isTreeRemoveEdge(int[][] edges, int deletingEdge){\r\n        initDisJoint(edges.length+1);\r\n        for(int i = 0; i < edges.length; i++){\r\n            if(i == deletingEdge) continue;\r\n            if(isSame(edges[i][0], edges[i][1])) return false;\r\n            union(edges[i][1], edges[i][0]);\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public int[] detectCycle(int[][] edges) {\r\n        initDisJoint(edges.length+1);\r\n        int[] res = new int[2];\r\n        for(int i = 0; i < edges.length; i++){\r\n            if(isSame(edges[i][0], edges[i][1])){\r\n                res[0] = edges[i][0];\r\n                res[1] = edges[i][1];\r\n            }\r\n            union(edges[i][1], edges[i][0]);\r\n        }\r\n        return res;\r\n    }\r\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"200-\u5c9b\u5c7f\u6570\u91cf",children:(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/number-of-islands/",children:"200. \u5c9b\u5c7f\u6570\u91cf"})}),"\n",(0,t.jsxs)(r.p,{children:["\u7ed9\u4f60\u4e00\u4e2a\u7531 ",(0,t.jsx)(r.code,{children:"'1'"}),"\uff08\u9646\u5730\uff09\u548c ",(0,t.jsx)(r.code,{children:"'0'"}),"\uff08\u6c34)\u7ec4\u6210\u7684\u7684\u4e8c\u7ef4\u7f51\u683c\uff0c\u8bf7\u4f60\u8ba1\u7b97\u7f51\u683c\u4e2d\u5c9b\u5c7f\u7684\u6570\u91cf\u3002"]}),"\n",(0,t.jsx)(r.p,{children:"\u5c9b\u5c7f\u603b\u662f\u88ab\u6c34\u5305\u56f4\uff0c\u5e76\u4e14\u6bcf\u5ea7\u5c9b\u5c7f\u53ea\u80fd\u7531\u6c34\u5e73\u65b9\u5411\u548c/\u6216\u7ad6\u76f4\u65b9\u5411\u4e0a\u76f8\u90bb\u7684\u9646\u5730\u8fde\u63a5\u5f62\u6210\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u6b64\u5916\uff0c\u4f60\u53ef\u4ee5\u5047\u8bbe\u8be5\u7f51\u683c\u7684\u56db\u6761\u8fb9\u5747\u88ab\u6c34\u5305\u56f4\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:'class Solution:\r\n    def numIslands(self, grid: List[List[str]]) -> int:\r\n        m = len(grid)\r\n        n = len(grid[0])\r\n        cnt = 0\r\n\r\n        visited = [[0] * n for _ in range(m)]\r\n        dirs = [[0,-1],[0,1],[-1,0],[1,0]]\r\n        def dfs(x: int, y: int) -> None:\r\n            if x < 0 or x >= m or y < 0 or y >= n or visited[x][y]:\r\n                return\r\n            visited[x][y] = 1\r\n            if grid[x][y] == "1":\r\n                for i, j in dirs:\r\n                    dfs(x+i, y+j)\r\n\r\n        for x in range(m):\r\n            for y in range(n):\r\n                if visited[x][y] == 0:\r\n                    dfs(x, y)\r\n                    cnt += 1 if grid[x][y] == "1" else 0\r\n        return cnt\n'})}),"\n",(0,t.jsx)(r.h3,{id:"994-\u8150\u70c2\u7684\u6a58\u5b50",children:(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/rotting-oranges/",children:"994. \u8150\u70c2\u7684\u6a58\u5b50"})}),"\n",(0,t.jsxs)(r.p,{children:["\u5728\u7ed9\u5b9a\u7684 ",(0,t.jsx)(r.code,{children:"m x n"})," \u7f51\u683c ",(0,t.jsx)(r.code,{children:"grid"})," \u4e2d\uff0c\u6bcf\u4e2a\u5355\u5143\u683c\u53ef\u4ee5\u6709\u4ee5\u4e0b\u4e09\u4e2a\u503c\u4e4b\u4e00\uff1a"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\u503c ",(0,t.jsx)(r.code,{children:"0"})," \u4ee3\u8868\u7a7a\u5355\u5143\u683c\uff1b"]}),"\n",(0,t.jsxs)(r.li,{children:["\u503c ",(0,t.jsx)(r.code,{children:"1"})," \u4ee3\u8868\u65b0\u9c9c\u6a58\u5b50\uff1b"]}),"\n",(0,t.jsxs)(r.li,{children:["\u503c ",(0,t.jsx)(r.code,{children:"2"})," \u4ee3\u8868\u8150\u70c2\u7684\u6a58\u5b50\u3002"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["\u6bcf\u5206\u949f\uff0c\u8150\u70c2\u7684\u6a58\u5b50 ",(0,t.jsx)(r.strong,{children:"\u5468\u56f4 4 \u4e2a\u65b9\u5411\u4e0a\u76f8\u90bb"})," \u7684\u65b0\u9c9c\u6a58\u5b50\u90fd\u4f1a\u8150\u70c2\u3002"]}),"\n",(0,t.jsxs)(r.p,{children:["\u8fd4\u56de ",(0,t.jsxs)(r.em,{children:["\u76f4\u5230\u5355\u5143\u683c\u4e2d\u6ca1\u6709\u65b0\u9c9c\u6a58\u5b50\u4e3a\u6b62\u6240\u5fc5\u987b\u7ecf\u8fc7\u7684\u6700\u5c0f\u5206\u949f\u6570\u3002\u5982\u679c\u4e0d\u53ef\u80fd\uff0c\u8fd4\u56de ",(0,t.jsx)(r.code,{children:"-1"})]})," \u3002"]}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class Solution:\r\n    def orangesRotting(self, grid: List[List[int]]) -> int:\r\n        m = len(grid)\r\n        n = len(grid[0])\r\n\r\n        q = []\r\n        dirs = [[0,-1],[0,1],[-1,0],[1,0]]\r\n        fresh = 0\r\n        for i, row in enumerate(grid):\r\n            for j, x in enumerate(row):\r\n                if x == 1:\r\n                    fresh += 1\r\n                elif x == 2:\r\n                    q.append((i, j))\r\n        cnt = 0\r\n        while q and fresh:\r\n            cnt += 1\r\n            temp = q\r\n            q = []\r\n            for x, y in temp:\r\n                for i, j in dirs:\r\n                    x_next, y_next = x+i, y+j\r\n                    if 0 <= x_next < m and 0 <= y_next < n and grid[x_next][y_next] == 1:\r\n                        fresh -= 1\r\n                        grid[x_next][y_next] = 2\r\n                        q.append((x_next, y_next))\r\n\r\n        return -1 if fresh else cnt\n"})}),"\n",(0,t.jsx)(r.h3,{id:"207-\u8bfe\u7a0b\u8868",children:(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/course-schedule/",children:"207. \u8bfe\u7a0b\u8868"})}),"\n",(0,t.jsxs)(r.p,{children:["\u4f60\u8fd9\u4e2a\u5b66\u671f\u5fc5\u987b\u9009\u4fee ",(0,t.jsx)(r.code,{children:"numCourses"})," \u95e8\u8bfe\u7a0b\uff0c\u8bb0\u4e3a ",(0,t.jsx)(r.code,{children:"0"})," \u5230 ",(0,t.jsx)(r.code,{children:"numCourses - 1"})," \u3002"]}),"\n",(0,t.jsxs)(r.p,{children:["\u5728\u9009\u4fee\u67d0\u4e9b\u8bfe\u7a0b\u4e4b\u524d\u9700\u8981\u4e00\u4e9b\u5148\u4fee\u8bfe\u7a0b\u3002 \u5148\u4fee\u8bfe\u7a0b\u6309\u6570\u7ec4 ",(0,t.jsx)(r.code,{children:"prerequisites"})," \u7ed9\u51fa\uff0c\u5176\u4e2d ",(0,t.jsx)(r.code,{children:"prerequisites[i] = [ai, bi]"})," \uff0c\u8868\u793a\u5982\u679c\u8981\u5b66\u4e60\u8bfe\u7a0b ",(0,t.jsx)(r.code,{children:"ai"})," \u5219 ",(0,t.jsx)(r.strong,{children:"\u5fc5\u987b"})," \u5148\u5b66\u4e60\u8bfe\u7a0b ",(0,t.jsx)(r.code,{children:"bi"})," \u3002"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\u4f8b\u5982\uff0c\u5148\u4fee\u8bfe\u7a0b\u5bf9 ",(0,t.jsx)(r.code,{children:"[0, 1]"})," \u8868\u793a\uff1a\u60f3\u8981\u5b66\u4e60\u8bfe\u7a0b ",(0,t.jsx)(r.code,{children:"0"})," \uff0c\u4f60\u9700\u8981\u5148\u5b8c\u6210\u8bfe\u7a0b ",(0,t.jsx)(r.code,{children:"1"})," \u3002"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["\u8bf7\u4f60\u5224\u65ad\u662f\u5426\u53ef\u80fd\u5b8c\u6210\u6240\u6709\u8bfe\u7a0b\u7684\u5b66\u4e60\uff1f\u5982\u679c\u53ef\u4ee5\uff0c\u8fd4\u56de ",(0,t.jsx)(r.code,{children:"true"})," \uff1b\u5426\u5219\uff0c\u8fd4\u56de ",(0,t.jsx)(r.code,{children:"false"})," \u3002"]}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class Solution:\r\n    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:\r\n        g = [[] for _ in range(numCourses)]\r\n        for x,y in prerequisites:\r\n            g[x].append(y)\r\n        colors = [0] * numCourses\r\n        def dfs(x: int) -> bool:\r\n            colors[x] = 1\r\n            for y in g[x]:\r\n                if colors[y] == 1 or (colors[y] == 0 and dfs(y)):\r\n                    return True\r\n            colors[x] = 2\r\n            return False\r\n        \r\n        for i, c in enumerate(colors):\r\n            if c == 0 and dfs(i):\r\n                return False\r\n        return True\n"})}),"\n",(0,t.jsx)(r.h3,{id:"64-\u6700\u5c0f\u8def\u5f84\u548c",children:(0,t.jsx)(r.a,{href:"https://leetcode.cn/problems/minimum-path-sum/",children:"64. \u6700\u5c0f\u8def\u5f84\u548c"})}),"\n",(0,t.jsxs)(r.p,{children:["\u7ed9\u5b9a\u4e00\u4e2a\u5305\u542b\u975e\u8d1f\u6574\u6570\u7684 ",(0,t.jsx)(r.code,{children:"m x n"})," \u7f51\u683c ",(0,t.jsx)(r.code,{children:"grid"})," \uff0c\u8bf7\u627e\u51fa\u4e00\u6761\u4ece\u5de6\u4e0a\u89d2\u5230\u53f3\u4e0b\u89d2\u7684\u8def\u5f84\uff0c\u4f7f\u5f97\u8def\u5f84\u4e0a\u7684\u6570\u5b57\u603b\u548c\u4e3a\u6700\u5c0f\u3002"]}),"\n",(0,t.jsx)(r.p,{children:"**\u8bf4\u660e\uff1a**\u6bcf\u6b21\u53ea\u80fd\u5411\u4e0b\u6216\u8005\u5411\u53f3\u79fb\u52a8\u4e00\u6b65\u3002"}),"\n",(0,t.jsx)(r.p,{children:"\u89e3\u7b54:"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"dijkstra \u7b97\u6cd5"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class Solution:\r\n    def minPathSum(self, grid: List[List[int]]) -> int:\r\n        m = len(grid)\r\n        n = len(grid[0])\r\n        visited = [[False] * n for _ in range(m)]\r\n        heap = []\r\n        heappush(heap, (grid[0][0], [0, 0]))\r\n        min_value = 0\r\n        while len(heap) > 0:\r\n            min_value, cur = heappop(heap)\r\n            i, j = cur\r\n            if visited[i][j]:\r\n                continue\r\n            \r\n            if i == m-1 and j == n-1:\r\n                break\r\n            visited[i][j] = True\r\n\r\n            if j < n-1:\r\n                heappush(heap, (min_value + grid[i][j+1], [i, j+1]))\r\n            if i < m-1:\r\n                heappush(heap, (min_value + grid[i+1][j], [i+1, j]))\r\n        return min_value\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"\u590d\u6742\u5ea6\u5206\u6790"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["\u65f6\u95f4\u590d\u6742\u5ea6\uff1a",(0,t.jsx)(r.span,{className:"katex",children:(0,t.jsx)(r.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(r.span,{className:"base",children:[(0,t.jsx)(r.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(r.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(r.span,{className:"mopen",children:"("}),(0,t.jsx)(r.span,{className:"mord mathnormal",children:"mn"}),(0,t.jsx)(r.span,{className:"mspace",style:{marginRight:"0.1667em"}}),(0,t.jsxs)(r.span,{className:"mop",children:["lo",(0,t.jsx)(r.span,{style:{marginRight:"0.01389em"},children:"g"})]}),(0,t.jsx)(r.span,{className:"mopen",children:"("}),(0,t.jsx)(r.span,{className:"mord mathnormal",children:"mn"}),(0,t.jsx)(r.span,{className:"mclose",children:"))"})]})})}),"\uff0c\u5176\u4e2d ",(0,t.jsx)(r.em,{children:"m"})," \u548c ",(0,t.jsx)(r.em,{children:"n"})," \u5206\u522b\u4e3a ",(0,t.jsx)(r.em,{children:"grid"})," \u7684\u884c\u6570\u548c\u5217\u6570\u3002"]}),"\n",(0,t.jsxs)(r.li,{children:["\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a",(0,t.jsx)(r.span,{className:"katex",children:(0,t.jsx)(r.span,{className:"katex-html","aria-hidden":"true",children:(0,t.jsxs)(r.span,{className:"base",children:[(0,t.jsx)(r.span,{className:"strut",style:{height:"1em",verticalAlign:"-0.25em"}}),(0,t.jsx)(r.span,{className:"mord mathnormal",style:{marginRight:"0.02778em"},children:"O"}),(0,t.jsx)(r.span,{className:"mopen",children:"("}),(0,t.jsx)(r.span,{className:"mord mathnormal",children:"mn"}),(0,t.jsx)(r.span,{className:"mclose",children:")"})]})})}),"\u3002"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"DFS(\u53ef\u6539\u5199\u6210DP)"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"class Solution:\r\n    def minPathSum(self, grid: List[List[int]]) -> int:\r\n        m = len(grid)\r\n        n = len(grid[0])\r\n        @cache # \u7f13\u5b58\u88c5\u9970\u5668\uff0c\u907f\u514d\u91cd\u590d\u8ba1\u7b97 dfs \u7684\u7ed3\u679c\uff08\u8bb0\u5fc6\u5316\uff09\r\n        def dfs(i: int, j: int) -> int:\r\n            if i < 0 or j < 0:\r\n                return inf\r\n            if i == 0 and j == 0:\r\n                return grid[i][j]\r\n            return min(dfs(i-1, j), dfs(i, j-1)) + grid[i][j]\r\n        \r\n        return dfs(m-1, n-1)\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"\u590d\u6742\u5ea6\u5206\u6790"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"\u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(mn)\uff0c\u5176\u4e2d m \u548c n \u5206\u522b\u4e3a grid \u7684\u884c\u6570\u548c\u5217\u6570\u3002\u7531\u4e8e\u6bcf\u4e2a\u72b6\u6001\u53ea\u4f1a\u8ba1\u7b97\u4e00\u6b21\uff0c\u52a8\u6001\u89c4\u5212\u7684\u65f6\u95f4\u590d\u6742\u5ea6 = \u72b6\u6001\u4e2a\u6570 \xd7 \u5355\u4e2a\u72b6\u6001\u7684\u8ba1\u7b97\u65f6\u95f4\u3002\u672c\u9898\u72b6\u6001\u4e2a\u6570\u7b49\u4e8e O(mn)\uff0c\u5355\u4e2a\u72b6\u6001\u7684\u8ba1\u7b97\u65f6\u95f4\u4e3a O(1)\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a O(mn)\u3002"}),"\n",(0,t.jsx)(r.li,{children:"\u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(mn)\u3002\u4fdd\u5b58\u591a\u5c11\u72b6\u6001\uff0c\u5c31\u9700\u8981\u591a\u5c11\u7a7a\u95f4\u3002"}),"\n"]})]})}function h(n={}){const{wrapper:r}={...(0,s.R)(),...n.components};return r?(0,t.jsx)(r,{...n,children:(0,t.jsx)(o,{...n})}):o(n)}},56242:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/20230602102619-0d5efd0714e3a6a5e1fa629884b128b9.png"},73013:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/20230602103040-c5e676a867f1e6b6dee74841c5c08acb.png"},4214:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/20240508121355-e31ffb37aa16c2e7f116bb59e9d20124.png"},76179:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/20240626104833-58081b702130f6542402da9d2069c645.png"},28810:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/20240827152106-8ab95088d60fe7ffe132270b133df3a3.png"},69557:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/20240827152134-549b56e667c59903bf872921304632d7.png"},58525:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/20240905163122-42bc47c48094b6392396a3a429372bd8.png"},40085:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/20240905164721-617084d908297604d575aa70b46e7222.png"},94228:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/20241208_120929_473_copy-c43c0aaed2c8fb05c668cc7cc21e4768.png"},23116:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/20250227_165915_203_copy-da1ce0eb88d4713c4d5ceb5328ce7602.png"},56828:(n,r,i)=>{i.d(r,{A:()=>e});const e=i.p+"assets/images/image-20250227170055899-a6f44508b1ea6e3b7ddfd6caa9fd6578.png"},28453:(n,r,i)=>{i.d(r,{R:()=>d,x:()=>a});var e=i(96540);const t={},s=e.createContext(t);function d(n){const r=e.useContext(s);return e.useMemo((function(){return"function"==typeof n?n(r):{...r,...n}}),[r,n])}function a(n){let r;return r=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:d(n.components),e.createElement(s.Provider,{value:r},n.children)}}}]);